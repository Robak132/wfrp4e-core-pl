Hooks.on("init", () => {
    mergeObject(game.wfrp4e.config.effectScripts, {
    "0R0QAr3D024kWPfo": "let table = game.wfrp4e.tables.findTable(\"mutatephys\");\r\nif (!table)\r\n{\r\n\treturn ui.notifications.error(\"Nie odnaleziono tabeli Mutacji, upewnij się, że tabla o kluczu `mutatephys` jest zaimportowana do świata.\")\r\n}\r\nlet result = (await table.roll()).results[0];\r\nlet uuid = `Compendium.${result.documentCollection}.${result.documentId}`\r\nlet item = await fromUuid(uuid);\r\n\r\nif (item)\r\n{\r\n    this.script.scriptNotification(`${item.name} added`)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [item])\r\n}\r\nelse \r\n{\r\n    ui.notifications.error(\"Nie odnaleziono przedmiotu: \" + uuid)\r\n}",
    "0Uly7OmkH0zqYbxQ": "let location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nlet roll = await new Roll(\"max(1, 1d10 - @system.characteristics.t.bonus)\", this.actor).roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
    "190PHSHKGaJ74wsR": "if (this.item.name.includes(\"(\")) {\r\n  let terrain = this.item.parenthesesText;\r\n  if (terrain !== \"Dowolny\") {\r\n    return this.item.updateSource(\r\n      {\"system.tests.value\": this.item.system.tests.value.replace(\"Wybrany Teren\", terrain)});\r\n  }\r\n}\r\n\r\nlet index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n  reduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n  filter(i => i.type == \"talent\" && i.name !== `${game.i18n.localize(\"NAME.Strider\")}` &&\r\n    i.name.includes(game.i18n.localize(\"NAME.Strider\"))).\r\n  sort((a, b) => a.name.localeCompare(b.name)).\r\n  map(i => {\r\n    i.id = i._id;\r\n    return i;\r\n  });\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Teren\");\r\nlet text;\r\nif (!choice[0]) {\r\n  let custom = await ValueDialog.create(\"Wpisz własny Teren\", \"Własny Teren\");\r\n  text = custom || \"\";\r\n} else {\r\n  text = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\n\r\nlet newTalentName = this.item.name.replace(\"(Dowolny)\", \"\").trim() + ` (${text})`;\r\nlet careerTalents = this.actor.system.currentCareer.system.talents;\r\nconst talentIndex = careerTalents.indexOf(this.item.name);\r\nif (talentIndex !== -1) {\r\n  careerTalents.splice(talentIndex, 1);\r\n  careerTalents.push(newTalentName);\r\n  await this.actor.system.currentCareer.update({\r\n    \"system.talents\": careerTalents,\r\n  });\r\n}\r\n\r\nawait this.effect.updateSource({name: newTalentName});\r\nawait this.item.updateSource({\r\n  name: newTalentName,\r\n  \"system.tests.value\": this.item.system.tests.value.replace(\"Wybrany Teren\", text),\r\n});",
    "1BT0MWM2cbhlEnrn": "        let characteristics = {\r\n            \"ws\" : 5,\r\n            \"bs\" : 5,\r\n            \"s\" : 5,\r\n            \"t\" : 0,\r\n            \"i\" : 5,\r\n            \"ag\" : 5,\r\n            \"dex\" : 5,\r\n            \"int\" : 0,\r\n            \"wp\" : 5,\r\n            \"fel\" : 5\r\n        }\r\n        let items = []\r\n\r\n        let updateObj = this.actor.toObject();\r\n\r\n        let talents = (await Promise.all([game.wfrp4e.tables.rollTable(\"talents\"), game.wfrp4e.tables.rollTable(\"talents\"), game.wfrp4e.tables.rollTable(\"talents\")])).map(i => i.text)\r\n        \r\n        for (let ch in characteristics)\r\n        {\r\n            updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n        }\r\n        \r\n        for (let talent of talents)\r\n        {\r\n            let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n            if (talentItem)\r\n            {\r\n                items.push(talentItem.toObject());\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${talent}`, {permanent : true})\r\n            }\r\n        }\r\n      \r\n        \r\n        await this.actor.update(updateObj)\r\n        this.actor.createEmbeddedDocuments(\"Item\", items);\r\n    \r\n",
    "1exiWlVUHsXDLLAH": "this.script.scriptNotification(`Nie możesz wejść: ${this.effect.name}!`);",
    "1kB2su7hLRYDhZ2H": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\nif (!test.succeeded)\r\n{\r\n    let item = await fromUuid(\"Compendium.wfrp4e-core.items.ZhMADOqoo0y8Q9bx\")\r\n    let data = item.toObject();\r\n    if (this.item.system.location.key == \"rLeg\")\r\n    {\r\n        data.system.location.value = \"Prawy palec u nogi\"\r\n        data.system.location.key = \"rToe\";\r\n    }\r\n    else if (this.item.system.location.key == \"lLeg\")\r\n    {\r\n        data.system.location.value = \"Lewy palec u nogi\"\r\n\tdata.system.location.key = \"lToe\";\r\n    }\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data])\r\n}\r\nthis.effect.delete();",
    "1wrPvP6lJwIAfmsl": "let choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.locations), 1, \"Wybierz miejsce\");\r\n\r\nlet location = choice[0].id;\r\n\r\nlet itemTargeted = this.actor.items.get(this.effect.getFlag(\"wfrp4e\", \"itemTargets\")[0])\r\n\r\nif (itemTargeted)\r\n{\r\n    itemTargeted.update({[`system.APdamage.${location}`] : itemTargeted.system.APdamage[location] + 1})\r\n}",
    "23vWiHUjxtRQ3Efz": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.eWPN3CV2Eddwz8aM\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Plecy\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
    "2QB0LjueuJcIaHaC": "if (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create(\"Wprowadź wartość Pancerza\", this.effect.name);\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
    "2Qi1hwLYhdE6v6Hs": "if (![\"rLeg\", \"lLeg\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\")))\r\n\treturn true;\r\n\r\nif (args.options.dodge)\r\n{\r\n\targs.abort = true;\r\n\tthis.script.scriptNotification(\"Nie można unikać!\")\r\n}\r\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)",
    "2rzxQlL7A9ujZ9uK": "if (args.opposedTest.result.winner == \"attacker\") {\r\n  if (args.opposedTest.defenderTest.weapon && args.opposedTest.defenderTest.item.properties.qualities.shield) {\r\n    ui.notifications.notify(`<b>${this.effect.name}</b>: Otrzymano ${this.item.Advances} Przewagi`)\r\n    this.actor.setAdvantage(this.item.Advances)\r\n  }\r\n}",
    "2sDH6RvoOAR40oqH": "\r\n\r\nif (![\"Goblin\", \"Ork\"].includes(this.actor.system.details.species.value)) {\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), { appendTitle: ` - ${this.effect.name}` })\r\n    await test.roll();\r\n    if (test.failed) {\r\n        let infection = await fromUuid(\"Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg\")\r\n        this.actor.createEmbeddedDocuments(\"Item\", [infection])\r\n    }\r\n}\r\n\r\n// Since wounds change when the effect is deleted, need to wait until after \r\n// the max wounds have been recalculated to apply damage\r\ngame.wfrp4e.utility.sleep(1000).then(async () => {\r\n    let roll = await new Roll(\"1d10\").roll();\r\n\r\n    roll.toMessage(this.script.getChatData());\r\n    this.script.scriptMessage(await this.actor.applyBasicDamage(roll.total, { damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg: true }))\r\n\r\n})",
    "2W9uMTT6iJhfQ044": "let skill = `Rzemiosło (${this.item.parenthesesText})`\r\nlet currentCareer = this.actor.system.currentCareer;\r\nlet existingSkill = this.actor.itemTypes.skill.find(i => i.name == skill);\r\n\r\nif (!currentCareer) return\r\n\r\n\r\nlet inCurrentCareer = currentCareer.system.skills.includes(skill);\r\nlet craftsmanAdded = this.actor.getFlag(\"wfrp4e\", \"craftsmanAdded\") || {};\r\nif (existingSkill && inCurrentCareer && !craftsmanAdded[existingSkill.name])\r\n{\r\n\texistingSkill.system.advances.costModifier = -5;\r\n}\r\nelse \r\n{\r\n\tcraftsmanAdded[skill] = true;\r\n\tcurrentCareer.system.skills.push(skill);\r\n\tsetProperty(this.actor, \"flags.wfrp4e.craftsmanAdded\", craftsmanAdded)\r\n}",
    "2zeP2nMSURjxrqYz": "let wounds = this.actor.system.status.wounds\r\nif (wounds.value == 0)\r\n  return this.script.scriptNotification(\"Efekt nie wywołuje skutku przy żywotności równej 0\", \"error\")\r\n\r\nthis.script.scriptNotification(`Uleczono ${this.actor.characteristics.t.bonus} Żywotności`)\r\nawait this.actor.modifyWounds(this.actor.characteristics.t.bonus)",
    "3D5ImpMgpOTPucvv": "if (args.test.options.cardsharp && args.test.succeeded)\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n   args.test.result.other.push(`<span class=\"hide-option\"><b>${this.effect.name}</b>: ${ones + args.test.successBonus + args.test.slBonus} PS</span>`)\r\n}",
    "3JEzEzF1SeYA9lsV": "let choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.locations, this.effect.img), 1, \"Wybierz miejsce\");\r\nif (choice[0])\r\n{\r\n    this.effect.updateSource({name : `${this.effect.name} (${choice[0].name})`})\r\nthis.effect.updateSource({\"flags.wfrp4e.location\" : choice[0].id})\r\n}\r\n\r\nlet location = choice[0].id;\r\n\r\nif ([\"lArm\", \"rArm\"].includes(location))\r\n{\r\n    let dropped = this.actor.itemTypes.weapon.filter(i => i.isEquipped & i.system.usesHands.includes(location));\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nif (location == \"body\")\r\n{\r\n    await this.actor.addCondition(\"fatigued\");\r\n    test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"hard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n        this.actor.addCondition(\"prone\");\r\n    }\r\n}\r\n\r\nif (location == \"head\")\r\n{\r\n    await this.actor.addCondition(\"stunned\");\r\n    test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"average\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n        this.actor.addCondition(\"unconscious\");\r\n    }\r\n}",
    "58rFc9HiBoX66J6p": "let sourceActor = this.effect.sourceActor;\r\nlet damage = args.totalWoundLoss;\r\nlet tb = sourceActor.system.characteristics.t.bonus\r\nargs.abort = `<strong>${this.effect.name}</strong>: Zadano obrażenia dla ${sourceActor.name}`;\r\n\r\nlet message = await sourceActor.applyBasicDamage(damage - tb, {damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true})\r\n\r\nthis.script.scriptMessage(message.replace(`${tb} BWt`, `${tb} × 2 BWt`))\r\nargs.abort = true;",
    "65xE9OV5sA1ZWT7j": "if (args.test.options.diceman && args.test.succeeded)\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n   args.test.result.other.push(`<span class=\"hide-option\"><b>${this.effect.name}</b>: ${ones + args.test.successBonus + args.test.slBonus} PS</span>`)\r\n}",
    "6hAgggYpNR3r4QWC": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.Q2MCUrG2HppMcvN0\")\r\nitem = item.toObject()\r\nlet species = args.actor.Species || \" twojego gatunku\"\r\nitem.name = `Wrogość (wszyscy oprócz ${species})`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
    "6jcTzK1XEuWqAacN": "args.abort = true;\r\nthis.script.scriptNotification(`Nie można używać: ${game.wfrp4e.config.locations[this.effect.getFlag(\"wfrp4e\", \"location\")]}!`, \"error\")",
    "6kifXp2jXEaQVJsg": "let useWard = await Dialog.wait({\r\n\ttitle : this.effect.name,\r\n\tcontent : `<p>Czy wziąć pod uwagę Ochronę otrzymaną z: <strong>${this.effect.name}</strong>?`,\r\n\tbuttons : {\r\n\t\tyes : {\r\n\t\t\tlabel : \"Tak\",\r\n\t\t\tcallback: () => {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tno : {\r\n\t\t\tlabel: \"Nie\",\r\n\t\t\tcallback: () => {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\nif (useWard)\r\n\targs.ward = 9;",
    "6mpw9cGseG4W4eyd": "if (this.actor.system.status.advantage.value >= 2)\r\n{\r\n    await this.actor.modifyAdvantage(-2);\r\n    this.script.scriptNotification(\"Zmniejszono Przewagę\")\r\n}\r\nelse \r\n{\r\n    return this.script.scriptNotification(\"Brak wymaganej Przewagi!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item)\r\nawait test.roll();",
    "6xTtJEhRc4OjcDTf": "if (getProperty(args.data, \"system.status.fortune.value\"))\r\n{\r\n\tthis.script.scriptNotification(\"Nie można zmienić liczby Punktów Szczęścia!\");\r\n\tdelete args.data.system.status.wounds.value;\r\n}",
    "7e8FgQUF2oANANmx": "return args.skill?.name == \"Broń Biała (Bijatyka)\" || args.item?.weaponGroup?.value == \"brawling\"",
    "7WR2hJjHPhHhHxAq": "let poisoned = args.actor.hasCondition(\"poisoned\")\r\nif (poisoned)\r\n{\r\n   this.script.scriptNotification(`Usunięto ${poisoned.conditionValue} Stanów Zatrucia`)\r\n   poisoned.delete();  \r\n}\r\nelse\r\n  this.script.scriptNotification(`Brak Stanów Zatrucia`)",
    "8GyJgdHVBaLrHCY8": "let type = this.item.getFlag(\"wfrp4e\", \"breath\")\r\nlet types = {\r\n    none : \"Brak\",\r\n    cold : \"Zimno\",\r\n    corrosion : \"Kwas\",\r\n    fire : \"Ogień\",\r\n    electricity : \"Elektryczność\",\r\n    poison : \"Trucizna\",\r\n    smoke : \"Dym\",\r\n    various : \"Różne\"\r\n}\r\nif (!type)\r\n{\r\n    type = (await ItemDialog.create(ItemDialog.objectToArray(types, this.item.img), 1, \"Wybierz rodzaj Zionięcia\"))[0]?.id;\r\n    this.item.updateSource({\"flags.wfrp4e.breath\" : type})\r\n}\r\n\r\nif (!this.item.name.includes(\"(\") && types[type] && type != \"none\")\r\n{\r\n    this.item.updateSource({name : this.item.name += ` (${types[type]})`, \"system.specification.value\" : this.item.system.specification.value.replace(\"(Typ)\", \"\").trim()})\r\n}",
    "8rq4GL5d5nCn4kO7": "let caster = this.effect.sourceActor\r\nif (caster)\r\n{\r\n    let healed = caster.characteristics.wp.bonus\r\n    this.actor.modifyWounds(healed);\r\n    this.script.scriptMessage(`<strong>${this.actor.prototypeToken.name}</strong> odzyskuje Żywotność: ${healed}`)\r\n}",
    "9fK07tqqZyPg7dpx": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields : {difficulty: \"veasy\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n      this.script.scriptNotification(\"Otrzymano <strong>Ropiejącą Ranę</strong>\")\r\n      let item = await fromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\")\r\n      this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()])\r\n}\r\nelse \r\n{\r\n    this.script.scriptNotification(\"Uniknięto <strong>Ropiejącej Rany</strong>\")\r\n}\r\n",
    "A6DcKPzAGntzSCil": "let roll = await new Roll(\"1d10\").roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
    "a7pEvCycVnFBXGAQ": "let test = await this.actor.setupCharacteristic(\"i\", {skipTargets: true, appendTitle :  \" - Oszołomienie\", fields : {difficulty : \"easy\"}})\r\nawait test.roll();\r\n\r\nif (!test.succeeded)\r\n{\r\n\tthis.actor.addCondition(\"stunned\");\r\n}",
    "a8i0sA1RBnD8nHZt": "let caster = this.effect.sourceActor\r\nlet targetedItem = this.actor.items.get(this.effect.flags.wfrp4e.itemTargets[0])\r\n\r\nlet qualities = foundry.utils.deepClone(game.wfrp4e.config.itemQualities);\r\nlet flaws = foundry.utils.deepClone(game.wfrp4e.config.itemFlaws);\r\n\r\nif (targetedItem.type == \"weapon\")\r\n{\r\n    mergeObject(qualities, game.wfrp4e.config.weaponQualities)\r\n    mergeObject(flaws, game.wfrp4e.config.weaponFlaws)\r\n}\r\nelse if (targetedItem.type == \"armour\")\r\n{\r\n    mergeObject(qualities, game.wfrp4e.config.armorQualities)\r\n    mergeObject(flaws, game.wfrp4e.config.armorFlaws)\r\n}\r\n\r\nfor(let q in qualities)\r\n{\r\n    // If the weapon already has a flaw, don't put it in the dialog\r\n    if (targetedItem.system.properties.qualities[q])\r\n    {\r\n        delete qualities[q]\r\n    }\r\n}\r\nfor(let f in flaws)\r\n{\r\n    // If a weapon doesn't have a flaw, don't put it in the dialog\r\n    if (!targetedItem.system.properties.flaws[f])\r\n    {\r\n        delete flaws[f]\r\n    }\r\n}\r\n            \r\nlet added = await ItemDialog.create(ItemDialog.objectToArray(qualities), \"unlimited\", \"Wybierz Zalety do dodania\");\r\nlet removed = []\r\nif (!foundry.utils.isEmpty(flaws))\r\n{\r\n    removed = await ItemDialog.create(ItemDialog.objectToArray(flaws), \"unlimited\", \"Wybierz Wady do usunięcia\");\r\n}\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.propertiesChanged\" : {added : added.map(i => i.id), removed : removed.map(i => i.id)}})\r\n",
    "aCVtaW8ag1WibcAr": "args.attacker.modifyWounds(1)\r\nthis.script.scriptMessage(`<strong>${args.attacker.prototypeToken.name}</strong> odzyskuje 1 Żywotności.`)",
    "Adgs6Zs0FdefO6qx": "if (args.test.options.pilot && args.test.result.reversed)\r\n{\r\n\targs.test.data.result.SL = \"+\" + Math.min(1, Number(args.test.data.result.SL))\r\n\targs.test.result.other.push(`<b>${this.effect.name}</b>: PS ograniczone do 1`)\r\n}",
    "AqHLHp4kH6KULk3e": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n    let effectData = this.item.effects.contents[0].convertToApplied();\r\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"Nic nie zostało!\", \"error\")\r\n}",
    "bBdXzBmxgFFBwMMS": "if(args.opposedTest.attackerTest.item?.isRanged && args.applyAP && !args.sureShot)\r\n{\r\n   if (args.modifiers.ap.value)\r\n   {\r\n    args.sureShot = true;\r\n    args.modifiers.ap.details.push(`${this.effect.name} (Ignoruje ${this.item.Advances})`)\r\n    args.modifiers.ap.ignored += this.item.Advances;\r\n   }\r\n}",
    "bLkt8VpTTPoTxW0W": "if (args.opposedTest.result.hitloc.value == \"body\" && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n    this.script.scriptNotification(\"Dodano Krwawienie\")\r\n}\r\n",
    "btPrQkGRKUkhNe3N": "return args.skill?.name == \"Rzemiosło (Aptekarstwo)\"",
    "bWOn8k0pVotGH4d3": "let index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n  reduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n  filter(i => i.type == \"skill\" && i.name !== `${game.i18n.localize(\"NAME.Art\")} ()` && i.name.includes(`${game.i18n.localize(\"NAME.Art\")} (`)).\r\n  sort((a, b) => a.name.localeCompare(b.name)).\r\n  map(i => {\r\n    i.id = i._id;\r\n    return i;\r\n  });\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Sztukę\");\r\nlet spec;\r\nif (!choice[0]) {\r\n  let custom = await ValueDialog.create(\"Wpisz własną Sztukę\", \"Własna Sztuka\");\r\n  spec = custom || \"\";\r\n} else {\r\n  spec = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\nspec = `${game.i18n.localize(\"NAME.Art\")} (${spec})`\r\n\r\nawait this.actor.setFlag(\"wfrp4e\", \"currentArtisticSkill\", spec);",
    "ch5SD2XOQfcYo0X5": "if (args.sizeDiff <= -2 && args.opposedTest.attackerTest.result.critical)\r\n        args.damageMultiplier = Math.abs(args.sizeDiff)\r\n\r\n      let sBonusDiff = args.opposedTest.defenderTest.actor.characteristics.t.bonus - args.opposedTest.attackerTest.actor.characteristics.s.bonus\r\n     let weapon = args.opposedTest.attackerTest.item\r\n      if (sBonusDiff > 0 && weapon && weapon.damage.value.includes(\"BS\"))\r\n      {\r\n        args.damage += sBonusDiff\r\n        args.breakdown.other.push({label : this.effect.name, value : sBonusDiff});\r\n      }",
    "chUpiI3el8IO8MSs": "if (args.opposedTest.attackerTest.item?.name.includes(\"Ugryzienie\"))\r\n{\r\n    let woundsGained = args.totalWoundLoss;\r\n    this.script.scriptMessage(`Otrzymano Rany: ${woundsGained}`, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })\r\n    this.actor.modifyWounds(woundsGained)\r\n}",
    "CiFeduksZJ6PRulx": "return args.skill?.name == \"Jeździectwo (Konie)\" || (args.options.dodge && this.actor.isMounted);",
    "cJFDnq1HI4gXWcJo": "if (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n  let value = await ValueDialog.create(\"Podaj wartość Ochrony\", this.effect.name);\r\n  if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
    "Cjj4iLkdY1NaZRCi": "if ((args.opposedTest.attackerTest.item && args.opposedTest.attackerTest.item.isMelee) || (args.opposedTest.attackerTest.item && !args.opposedTest.attackerTest.item.name.includes(\"Ranged\")))\r\n{\r\n    let choice = await Dialog.wait({\r\n        title: this.effect.name,\r\n        content: `<p><strong>${this.effect.name}</strong>: Zadać obrażenia atakującemu?`,\r\n        buttons: {\r\n            yes: {\r\n                label: \"Tak\",\r\n                callback: () => {\r\n                    return true;\r\n                }\r\n            },\r\n            no: {\r\n                label: \"Nie\",\r\n                callback: () => {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    if (choice)\r\n    {\r\n        this.script.scriptMessage(await args.attacker.applyBasicDamage(this.actor.system.characteristics.wp.bonus, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true}));\r\n    }\r\n}",
    "cK1Jysfu5IMUUH0C": "if (!args.ward)\r\n{\r\n\targs.ward = (this.effect.getFlag(\"wfrp4e\", \"ward\") || 0);\r\n\tif (args.wardRoll >= args.ward && args.ward > 3)\r\n    {\r\n        let newWard = Math.max(3, args.ward - 1)\r\n        this.script.scriptMessage(\"<strong>Ochrona</strong> zwiększona do \" + newWard)\r\n        this.effect.setFlag(\"wfrp4e\", \"ward\", newWard)\r\n    }\r\n\r\n}",
    "CoImIH9OCMx9DfQZ": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.nbhn2wX35b7Jrcbg\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Szczęka\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
    "csLKDJKZaUK9vwLT": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.7rBhIRo96Mydo0Cv\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Plecy\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n",
    "cTYNaKbepMwqYsZ8": "\r\n                            let difficulty = \"\"\r\n                            if (this.effect.name.includes(\"Umiarkowany\"))\r\n                                difficulty = \"easy\"\r\n                            else if (this.effect.name.includes(\"Poważny\"))\r\n                                difficulty = \"average\"\r\n                            else\r\n                                difficulty = \"veasy\"\r\n        \r\n                            let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {context : {failure : this.actor.name + \" umiera od Plagi\"}, fields: {difficulty}, appendTitle : \" - Plaga\"})\r\n                            await test.roll();\r\n                            if (test.failed)\r\n                            {\r\n                                this.actor.addCondition(\"dead\");\r\n                            }\r\n                            ",
    "cUnbADgOQ4fMKgrH": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.5hH73j2NgPdsLCZN\");\r\nlet data = item.toObject();\r\n\r\nif (this.item.name.includes(\"(\")) {\r\n\tlet group = this.item.parenthesesText;\r\n\tif (group !== \"Dowolna\") {\r\n\t\tthis.item.updateSource(\r\n\t\t\t{\"system.tests.value\": this.item.system.tests.value.replace(\"Grupa\", group)});\r\n\t\tdata.name = data.name.replace(\"x\", group);\r\n\t\tawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id});\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nlet index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n\treduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n\tfilter(i => i.type == \"talent\" && i.name !== \"Nienawiść\" && i.name.includes(\"Nienawiść (\")).\r\n\tsort((a, b) => a.name.localeCompare(b.name)).\r\n\tmap(i => {\r\n\t\ti.id = i._id;\r\n\t\treturn i;\r\n\t});\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz grupę darzoną nienawiścią\");\r\nlet text;\r\nif (!choice[0]) {\r\n\tlet custom = await ValueDialog.create(\"Wpisz własną grupę darzoną nienawiścią\", \"Własna Grupa\");\r\n\ttext = custom || \"\";\r\n} else {\r\n\ttext = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\n\r\nlet newTalentName = this.item.name.replace(\"(Dowolna)\", \"\").trim() + ` (${text})`;\r\nlet careerTalents = this.actor.system.currentCareer.system.talents;\r\nconst talentIndex = careerTalents.indexOf(this.item.name);\r\nif (talentIndex !== -1) {\r\n\tcareerTalents.splice(talentIndex, 1);\r\n\tcareerTalents.push(newTalentName);\r\n\tawait this.actor.system.currentCareer.update({\r\n\t\t\"system.talents\": careerTalents,\r\n\t});\r\n}\r\nawait this.effect.updateSource({name: newTalentName});\r\nawait this.item.updateSource({\r\n\tname: newTalentName,\r\n\t\"system.tests.value\": this.item.system.tests.value.replace(\"Grupa\", text)});\r\ndata.name = data.name.replace(\"x\", text);\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id});",
    "CW5Vlr57OaMkKJ8Q": "if (this.actor.system.status.advantage.value >= 3)\r\n{\r\n    this.actor.modifyAdvantage(-3);\r\n    this.script.scriptNotification(\"Odjęto Przewagę\")\r\n}\r\nelse \r\n{\r\n    return this.script.scriptNotification(\"Niewystarczająca Przewaga!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item)\r\nawait test.roll();",
    "dbOSvpgcPjsc2uvq": "let menacing = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.0hn6UaKq8CoZP2zD\")).toObject();\r\nlet sense = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")).toObject();\r\n\r\nsense.name += \" (Wzrok)\";\r\nsense.system.tests.value = sense.system.tests.value.replace(\"Zmysł\", \"Wzrok\")\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [menacing, sense], {fromEffect : this.effect.id})",
    "dcwY8dCd3PNCEzk6": "let current = this.actor.status.fate.value\r\n\r\nthis.actor.update({\"system.status.fate.value\" : current + 1})\r\n\r\nthis.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b> Punkty Szczęścia zwiększone z ${current} do ${current + 1}`)",
    "dfEgat3jz4EtWszH": "return args.skill?.name == \"Skradanie (Miasto)\"",
    "dfnCK8jCPXNLM7Gh": "let aoeDamage = this.effect.sourceTest.result.damage - 5 // Easily handle magic missile damage by just subtracting 5 from the item's (which has +10 base)\r\n\r\nthis.script.scriptMessage(await this.actor.applyBasicDamage(aoeDamage, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true}))\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Dodge\"), {skipTargets: true, appendTitle :  ` - Podpalenie`})\r\n\r\nawait test.roll();\r\n\r\nif (!test.succeeded)\r\n{\r\n    this.actor.addCondition(\"ablaze\");\r\n}",
    "DL9vYNft9aXdV2aW": "let tooth = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")\r\ntooth = tooth.toObject()\r\ntooth.system.specification.value = 3\r\ntooth.system.qualities.value = [{name : \"magical\"}]\r\n \r\nlet claw = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\")\r\nclaw = claw.toObject()\r\nclaw.system.specification.value = 4\r\nclaw.system.qualities.value = [{name : \"magical\"}]\r\nclaw.name = \"Szpony\"\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [tooth, claw], {fromEffect : this.effect.id})",
    "dM8FbRH2V8CpOkXw": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.QluSTTTq3viHJJUh\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Żebra\";\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
    "DuM5l2Yb4bdvDeaG": "return args.skill?.name != \"Atletyka\"",
    "DWBxvzfWGcG7PVNP": "let letter = this.item.system.location.key[0]; // \"l\" or \"r\";\r\n\r\nthis.item.updateSource({\"system.location.key\" : letter + \"Palec\"})\r\n\r\n// We want the location to be Right or Left Hand, but the key to be rFinger or lFinger",
    "dwSgcFxKN3S0hLJL": "return args.skill?.name != \"Broń Biała (Bijatyka)\" && args.item?.weaponGroup?.value != \"brawling\"",
    "DyZ1jH88EAp1ueOK": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\ndata.system.location.value = data.system.location.value.replace(\"Ręka\", \"Nadgarstek\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n",
    "E1vUepgop09FF5wy": "if (this.actor.system.status.advantage.value == 0)\r\n{\r\n    return this.script.scriptNotification(\"Niewystarczająca Przewaga!\", \"error\")\r\n}\r\n\r\nlet hatred = await fromUuid(\"Compendium.wfrp4e-core.items.Item.aE3pyW20Orvdjzj0\")\r\nlet frenzy = await fromUuid(\"Compendium.wfrp4e-core.items.Item.yRhhOlt18COq4e1q\");\r\n\r\nif (this.actor.system.status.advantage.value >= 3)\r\n{\r\n    this.script.scriptNotification(`Dodano: ${frenzy.name}`)\r\n    this.actor.setAdvantage(0)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [frenzy])\r\n}\r\nelse if (this.actor.system.status.advantage.value >= 1)\r\n{\r\n    let data = hatred.toObject();\r\n    data.system.specification.value = \"Przeciwnicy w zwarciu\"\r\n    this.script.scriptNotification(`Dodano: ${hatred.name}`)\r\n    this.actor.setAdvantage(0)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data])\r\n}",
    "e34s1XxHckAWfwHt": "if (args.test.options.beatBlade && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Przeciwnik traci ${Number(args.test.result.SL) + 1} Przewagi`)\r\n}",
    "ebDQH0MdGAG02CHl": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.SYjWiKDzMS6CtROJ\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nif (this.item.system.location.key == \"rArm\")\r\n{\r\n\tdata.system.location.value = \"Prawa Ręka\"\r\n\tdata.system.location.key = \"rHand\"\r\n}\r\nelse if (this.item.system.location.key == \"lArm\")\r\n{\r\n\tdata.system.location.value = \"Lewa Ręka\"\r\n\tdata.system.location.key = \"lHand\"\r\n}\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])",
    "EdTChmSouS0MSmk5": "let test = await this.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.succeeded)\r\n{\r\n    this.script.scriptMessage(\"Możesz wykonać Akcję lub Ruch w tej rundzie (wybierz jedno)\")\r\n}\r\nelse \r\n{\r\n    this.script.scriptMessage(\"Nie możesz wykonać Akcji ani Ruchu w tej rundzie\")\r\n}",
    "eh1J3s0s4A2AxoFp": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\");\r\nlet data = item.toObject();\r\ndata.name += \" (Wróg)\";\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
    "eqxE7nBO13yJS7hc": "let roll = (await new Roll(\"1d10\").roll())\r\nroll.toMessage({flavor: \"Uleczono\", speaker : {alias : this.actor.name}})\r\n\r\nthis.actor.modifyWounds(roll.total)\r\n\r\nthis.actor.hasCondition(\"bleeding\")?.delete();",
    "ERxrWzSpw8qwxFVi": "this.script.scriptNotification(`Nie można wejść: ${this.effect.name}!`); this.actor.addCondition(\"broken\");",
    "ezGqDoC9hNRBnFTB": "        let choices = await Promise.all([game.wfrp4e.utility.findItemId(\"1zaqojk0Oq1m8vYv\"), game.wfrp4e.utility.findItemId(\"zIuarD5mB0EF0ji0\")])\r\n        let items = await game.wfrp4e.apps.ItemDialog.create(choices, 1, \"Wybierz Broń\")\r\n        items = items.map(i => i.toObject())\r\n        \r\n        items.forEach(i => equip(i))\r\n        \r\n        this.actor.createEmbeddedDocuments(\"Item\", items);\r\n        \r\n        function equip(item)\r\n        {\r\n            if (item.type == \"armour\")\r\n                item.data.worn.value = true\r\n            else if (item.type == \"weapon\")\r\n                item.data.equipped = true\r\n            else if (item.type == \"trapping\" && item.data.trappingType.value == \"clothingAccessories\")\r\n                item.data.worn = true\r\n        }",
    "f29Pv6TQtgILxt1h": "if (args.test.options.healWounds) {\r\n if (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target) {\r\n   let wounds = this.actor.characteristics.int.bonus + ~~args.test.result.SL\r\n   if (args.test.options.fieldDressing && args.test.result.reversed)\r\n      wounds = this.actor.characteristics.int.bonus + Math.min(1, Number(args.test.result.SL))\r\n\targs.test.result.woundsHealed = wounds\r\n\targs.test.result.other.push(`<b>${this.actor.name}</b> leczy <b>${wounds}</b> Żywotności pacjenta.`)\r\n   }\r\n   else if (this.actor.characteristics.int.bonus + args.test.result.SL < 0)\r\n      args.test.result.other.push(`Pacjent otrzymuje @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Uciążliwą Ranę}.`)\r\n}",
    "F2u4L4o0r1LTWeWK": "if (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create(\"Wprowadź wartość Grozy\", this.effect.name);\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
    "f5Mp3kXwCFdPkW6N": "return args.skill?.name != \"Występy (Śpiew)\" && args.skill?.name != \"Występy (Śpiewanie)\" && !args.skill?.name.includes(\"Język\");",
    "FSqUqSByMiztYOQM": "if (args.totalWoundLoss > 0)\r\n     this.script.scriptMessage(`<b>Zarażony: ${args.actor.name}</b> musi zdać <b>Łatwy (+40)</b> Test Odporności lub otrzyma @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Ropiejącą Ranę}`, {whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
    "ft0LaRWZT5WtnptP": "let advantage = this.actor.system.status.advantage.value;\r\nif (advantage > 0)\r\n{\r\n    await this.actor.setAdvantage(0);\r\n    this.script.scriptNotification(\"Zmniejszono Przewagę\")\r\n}\r\nelse \r\n{\r\n    return this.script.scriptNotification(\"Niewystarczająca Przewaga!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item, {fields : {slBonus : advantage}})\r\nawait test.roll();",
    "Fvlc4RkeF4dHjW3m": "let caster = this.effect.sourceActor\r\nif (caster && (this.actor.has(game.i18n.localize(\"NAME.Undead\")) || this.actor.has(game.i18n.localize(\"NAME.Daemonic\")))) {\r\n    let wp = caster.system.characteristics.wp.value\r\n    if (wp > this.actor.system.characteristics.t.value) {\r\n        if (this.actor.has(game.i18n.localize(\"NAME.Unstable\"))) {\r\n            this.actor.update({ \"system.status.wounds.value\": 0 })\r\n            this.actor.addCondition(\"dead\")\r\n        }\r\n        else {\r\n            fromUuid(\"Compendium.wfrp4e-core.items.D0ImWEIMSDgElsnl\").then(item => {\r\n                this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], { fromEffect: this.effect.id })\r\n                ChatMessage.create({ content: `${this.actor.prototypeToken.name}: otrzymano ${game.i18n.localize(\"NAME.Unstable\")}`, speaker: { alias: caster.name } })\r\n            })\r\n        }\r\n    }\r\n}",
    "FXuyiJoXdAh6WhRK": "return args.skill?.name == \"Jeździectwo (Konie)\" && game.combat?.active",
    "fYLSe6CrYciap5y8": "        let characteristics = {\r\n            \"ws\" : 0,\r\n            \"bs\" : 0,\r\n            \"s\" : 10,\r\n            \"t\" : 10,\r\n            \"i\" : 0,\r\n            \"ag\" : 10,\r\n            \"dex\" : 0,\r\n            \"int\" : 0,\r\n            \"wp\" : 0,\r\n            \"fel\" : 0\r\n        }\r\n        let skills = [\"Mocna Głowa\", \"Wioślarstwo\", \"Żeglarstwo\", \"Pływanie\"]\r\n        let skillAdvancements = [10, 10, 10, 10]\r\n        let talents = []\r\n        let trappings = []\r\n        let items = []\r\n\r\n        let updateObj = this.actor.toObject();\r\n        \r\n        for (let ch in characteristics)\r\n        {\r\n            updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n        }\r\n        \r\n        for (let index = 0; index < skills.length; index++)\r\n        {\r\n            let skill = skills[index]\r\n            let skillItem;\r\n            skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n            if (skillItem)\r\n                skillItem.system.advances.value += skillAdvancements[index]\r\n            else \r\n            {\r\n                skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n                skillItem = skillItem.toObject();\r\n                skillItem.system.advances.value = skillAdvancements[index];\r\n                items.push(skillItem);\r\n            }\r\n        }\r\n        \r\n        for (let talent of talents)\r\n        {\r\n            let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n            if (talentItem)\r\n            {\r\n                items.push(talentItem.toObject());\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${talent}`, {permanent : true})\r\n            }\r\n        }\r\n        \r\n        for (let trapping of trappings) \r\n        {\r\n            let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n            if (trappingItem)\r\n            {\r\n                trappingItem = trappingItem.toObject()\r\n        \r\n                equip(trappingItem)\r\n        \r\n                items.push(trappingItem);\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${trapping}`, {permanent : true})\r\n            }\r\n        }\r\n       \r\n        \r\n        await this.actor.update(updateObj)\r\n        this.actor.createEmbeddedDocuments(\"Item\", items);\r\n        \r\n        function equip(item)\r\n        {\r\n            if (item.type == \"armour\")\r\n                item.system.worn.value = true\r\n            else if (item.type == \"weapon\")\r\n                item.system.equipped = true\r\n            else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n                item.system.worn = true\r\n        }",
    "FZFOC7bip0oiWEzk": "if (args.opposedTest.result.hitloc.value == this.item.system.location.key && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 2);\r\n    this.script.scriptNotification(\"Otrzymano Krwawienie\")\r\n}",
    "g0SzfsLyW7aD2F19": "if (this.item.name.includes(\"(\")) {\r\n  let etiquette = this.item.parenthesesText;\r\n  if (etiquette !== \"Dowolna\") {\r\n    return this.item.updateSource(\r\n      {\"system.tests.value\": this.item.system.tests.value.replace(\"Grupa Społeczna\", etiquette)});\r\n  }\r\n}\r\n\r\nlet index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n  reduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n  filter(i => i.type == \"talent\" && i.name !== `${game.i18n.localize(\"NAME.Etiquette\")}` &&\r\n    i.name.includes(game.i18n.localize(\"NAME.Etiquette\"))).\r\n  sort((a, b) => a.name.localeCompare(b.name)).\r\n  map(i => {\r\n    i.id = i._id;\r\n    return i;\r\n  });\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Grupę dla Etykiety\");\r\nlet text;\r\nif (!choice[0]) {\r\n  let custom = await ValueDialog.create(\"Wpisz własną Grupę dla Etykiety\", \"Własna Grupa\");\r\n  text = custom || \"\";\r\n} else {\r\n  text = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\n\r\nlet newTalentName = this.item.name.replace(\"(Dowolna)\", \"\").trim() + ` (${text})`;\r\nlet careerTalents = this.actor.system.currentCareer.system.talents;\r\nconst talentIndex = careerTalents.indexOf(this.item.name);\r\nif (talentIndex !== -1) {\r\n  careerTalents.splice(talentIndex, 1);\r\n  careerTalents.push(newTalentName);\r\n  await this.actor.system.currentCareer.update({\r\n    \"system.talents\": careerTalents,\r\n  });\r\n}\r\n\r\nawait this.effect.updateSource({name: newTalentName});\r\nawait this.item.updateSource({\r\n  name: newTalentName,\r\n  \"system.tests.value\": this.item.system.tests.value.replace(\"Grupa Społeczna\", text)});",
    "g4t56A09yrpZaJQ2": "    let amberTalons = foundry.utils.deepClone(game.wfrp4e.config.systemItems.unarmed);\r\n    amberTalons.name = \"Szpony Furii\";\r\n    amberTalons.img = this.effect.img;\r\n    amberTalons.system.damage.value = \"SB + WPB\"\r\n    amberTalons.system.equipped = true;\r\n    amberTalons.system.qualities.value.push({name : \"magical\"})\r\n    amberTalons.effects.push({\r\n        label : \"Szpony Furii\",\r\n        transfer: false,\r\n        icon : \"modules/wfrp4e-core/icons/spells/amber-talons.png\" ,\r\n        flags : {\r\n          wfrp4e : {\r\n              applicationData : {\r\n                  documentType : \"Item\"\r\n              },\r\n              scriptData : [{\r\n                  trigger : \"applyDamage\",\r\n                  script : \"if (args.totalWoundLoss >= 1)\\n{ \\n    args.actor.addCondition(\\\"bleeding\\\")\\n}\"\r\n              }]\r\n          }\r\n        }\r\n      })\r\n    this.actor.createEmbeddedDocuments(\"Item\", [amberTalons], {fromEffect: this.effect.id})",
    "G7sFEnJlXZvfXL3V": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n    let effectData = this.item.effects.contents[1].convertToApplied();\r\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"Nic nie zostało!\", \"error\")\r\n}",
    "Gc8S5TYlVdV8NnOT": "let test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name, context: { failure: \"Zyskano Stan Paniki\", success: \"Odparto Stan Paniki\" } })\r\n\r\n await test.roll();\r\n\r\n if (!test.succeeded)\r\n {\r\n    args.actor.addCondition(\"broken\");\r\n }",
    "gKPL3t4vlZAsvtGr": "return args.skill?.name == \"Skradanie (Podziemia)\"",
    "gMIenSmLklAkB2Zm": "if (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create(\"Wprowadź siłę Jadu\", this.effect.name, \"\", Object.values(game.wfrp4e.config.difficultyNames));\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
    "GzsuEg7gZy1f0ljy": "let bleeding = this.actor.hasCondition(\"bleeding\")\r\nif (bleeding)\r\n{\r\n   this.script.scriptNotification(`Usunięto ${bleeding.conditionValue} Stanów Krwawienia`)\r\n   bleeding.delete();  \r\n}\r\nelse \r\n{\r\n   this.script.scriptNotification(`Brak Stanów Krwawienia`)\r\n}",
    "H06Ysj7oPiemW7S6": "if (args.test.options.income && !args.test.options.criminal)\r\n{\r\n    args.test.options.criminal = true;\r\n    let currentCareer = args.test.actor.system.currentCareer;\r\n    let coin = {1 : \"b\", 2 : \"s\", 3 : \"s\", 4 : \"g\"}[currentCareer.system.level.value] // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\r\n    let term = {1 : \"bp\", 2 : \"ss\", 3 : \"ss\", 4 : \"gc\"}[currentCareer.system.level.value] // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\r\n    let dieAmount = {1 : \"2d10\", 2 : \"1d10\", 3 : \"2d10\", 4 : \"1\"}[currentCareer.system.level.value] // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\r\n    dieAmount = parseInt(dieAmount[0]) * this.item.system.Advances;     // Multilpy that first letter by your standing (Brass 4 = 8d10 pennies)\r\n    if (coin != \"g\") // Don't roll for gold, just use standing value\r\n    {\r\n        dieAmount = dieAmount + \"d10\";\r\n    }\r\n    let moneyEarned = (await new Roll(dieAmount.toString()).roll()).total;\r\n    let moneyString = `${moneyEarned}${coin}`\r\n    let transactionString = `${moneyEarned}${term}`\r\n\r\n    this.script.scriptMessage(`<a class=\"money-drag\" data-amt=\"${moneyString}\"><strong>Zarobiono dodatkowe pieniądze: ${game.wfrp4e.market.amountToString(game.wfrp4e.market.parseMoneyTransactionString(transactionString))}</strong></a>`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
    "hCzxUyO6mjLNIpaM": "let woundsGained = Math.min(args.totalWoundLoss, args.actor.status.wounds.value)\r\n\r\nwoundsGained = Math.floor(woundsGained / 2)\r\n\r\nargs.attacker.update({ \"system.status.wounds.value\": args.attacker.status.wounds.value + woundsGained })\r\n\r\nthis.script.scriptMessage(`Uleczono ${woundsGained} Żywotności`)",
    "hhv7PrRdlf9sfC82": "let characteristics = {\r\n            \"ws\" : 5,\r\n            \"bs\" : 0,\r\n            \"s\" : 5,\r\n            \"t\" : 5,\r\n            \"i\" : 10,\r\n            \"ag\" : 0,\r\n            \"dex\" : 0,\r\n            \"int\" : 0,\r\n            \"wp\" : 0,\r\n            \"fel\" : 0\r\n        }\r\n        let skills = [\"Opanowanie\", \"Unik\"]\r\n        let skillAdvancements = [10, 10]\r\n        let talents = [\"Bitewny Refleks\"]\r\n        let trappings = [\"Skórzany kaftan\", \"Skórzany hełm\", \"Skórzane nogawice\", \"Tarcza\"]\r\n        let items = []\r\n\r\n        let updateObj = this.actor.toObject();\r\n        \r\n        for (let ch in characteristics)\r\n        {\r\n            updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n        }\r\n        \r\n        for (let index = 0; index < skills.length; index++)\r\n        {\r\n            let skill = skills[index]\r\n            let skillItem;\r\n            skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n            if (skillItem)\r\n                skillItem.system.advances.value += skillAdvancements[index]\r\n            else \r\n            {\r\n                skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n                skillItem = skillItem.toObject();\r\n                skillItem.system.advances.value = skillAdvancements[index];\r\n                items.push(skillItem);\r\n            }\r\n        }\r\n        \r\n        for (let talent of talents)\r\n        {\r\n            let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n            if (talentItem)\r\n            {\r\n                items.push(talentItem.toObject());\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${talent}`, {permanent : true})\r\n            }\r\n        }\r\n        \r\n        for (let trapping of trappings) \r\n        {\r\n            let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n            if (trappingItem)\r\n            {\r\n                trappingItem = trappingItem.toObject()\r\n        \r\n                equip(trappingItem)\r\n        \r\n                items.push(trappingItem);\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${trapping}`, {permanent : true})\r\n            }\r\n        }\r\n      \r\n        \r\n        await this.actor.update(updateObj)\r\n        this.actor.createEmbeddedDocuments(\"Item\", items);\r\n        \r\n        function equip(item)\r\n        {\r\n            if (item.type == \"armour\")\r\n                item.system.worn.value = true\r\n            else if (item.type == \"weapon\")\r\n                item.system.equipped = true\r\n            else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n                item.system.worn = true\r\n        }",
    "HJ2X4ZtXei0BXbxf": "        let choices = await Promise.all([game.wfrp4e.utility.findItemId(\"PzimjNx9Ojq4g6mV\"), game.wfrp4e.utility.findItemId(\"rOPmyLWa37e7s9v6\")])\r\n        let items = await game.wfrp4e.apps.ItemDialog.create(choices, 1, \"Wybierz umiejętność\")\r\n\r\n        items = items.map(i => i.toObject())\r\n        items.forEach(i => i.system.advances.value = 20)\r\n\r\nitems.forEach(i => equip(i))\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.data.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.data.equipped = true\r\n    else if (item.type == \"trapping\" && item.data.trappingType.value == \"clothingAccessories\")\r\n        item.data.worn = true\r\n}",
    "HMC6hPND9DWLFfZE": "if (this.item.name.includes(\"(\"))\r\n{\r\n\treturn;\r\n}\r\n\r\nlet index = game.packs\r\n.filter(i => i.metadata.type == \"Item\")\r\n.reduce((acc, pack) => acc.concat(pack.index.contents), [])\r\n.filter(i => i.type == \"skill\" && i.name.includes(game.i18n.localize(\"NAME.Lore\")))\r\n.map(i => {\r\n\ti.id = i._id\r\n\treturn i\r\n})\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz rodzaj Wiedzy\")\r\nlet text;\r\nif (!choice[0])\r\n{\r\n    let custom = await Dialog.wait({\r\n        title : \"Podaj rodzaj Wiedzy\",\r\n        content : \"<input type='text'>\",\r\n        buttons : {\r\n            confirm : {\r\n                label : game.i18n.localize(\"Confirm\"),\r\n                callback : (dlg) => {\r\n                    return dlg.find(\"input\")[0].value\r\n                }\r\n            }\r\n        },\r\n        default : \"confirm\",\r\n        close : () => {\r\n            return \"\"\r\n        }\r\n    })   \r\n    text = custom || \"\"\r\n}\r\nelse \r\n{\r\n    text = game.wfrp4e.utility.extractParenthesesText(choice[0].name)\r\n}\r\n\r\nawait this.item.updateSource({name : this.item.name + ` (${text})`, \"system.tests.value\" : this.item.system.tests.value.replace(\"chosen Lore\", text)})\r\nawait this.effect.updateSource({name : this.effect.name + ` (${text})`})",
    "HmImVzvw6ecBy99l": "if (args.opposedTest.result.hitloc.value == \"body\" && args.totalWoundLoss > 0) \r\n{\r\n    args.actor.addCondition(\"bleeding\", 2)\r\n    this.script.scriptNotification(\"Otrzymano Stan Krwawienia\")\r\n}",
    "hR1qD2kpFHF8JT8h": "return args.skill?.name == \"Język (Magiczny)\"",
    "HrOBAXsEX073ReKl": "let skill = `Występy (Śpiewanie)`\r\nlet currentCareer = this.actor.system.currentCareer;\r\nlet existingSkill = this.actor.itemTypes.skill.find(i => i.name == skill);\r\n\r\nif (!currentCareer) return\r\n\r\n\r\nlet inCurrentCareer = currentCareer.system.skills.includes(skill);\r\nlet perfectPitchAdded = this.actor.getFlag(\"wfrp4e\", \"perfectPitchAdded\") || {};\r\nif (existingSkill && inCurrentCareer && !perfectPitchAdded[existingSkill.name])\r\n{\r\n\texistingSkill.system.advances.costModifier = -5;\r\n}\r\nelse \r\n{\r\n\tperfectPitchAdded[skill] = true;\r\n\tcurrentCareer.system.skills.push(skill);\r\n\tsetProperty(this.actor, \"flags.wfrp4e.perfectPitchAdded\", perfectPitchAdded)\r\n}\r\n\r\n\r\n",
    "inPxRSx0CDj1nwAm": "if (args.test.result.fumble && !this.actor.itemTypes.talent.find(i => i.name == \"Magia Tajemna (Ogień)\"))\r\n{\r\n    this.actor.addCondition(\"ablaze\");\r\n}",
    "iO2hCDwyQ7v4qrOI": "if (args.test.options.staunchBleeding) {\r\n if (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target) {\r\n   let staunch =  ~~args.test.result.SL + 1\r\n   if (args.test.options.fieldDressing && args.test.result.reversed)\r\n     staunch =  Math.min(1, Number(args.test.result.SL)) + 1\r\n   args.test.result.other.push(`<b>${this.actor.name}</b> usunął <b>${staunch}</b> Stanów Krwawienia z pacjenta.`)\r\n   }\r\n   else if (this.actor.characteristics.int.bonus + args.test.result.SL < 0)\r\n      args.test.result.other.push(`Pacjent otrzymuje @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Uciążliwą Ranę}.`)\r\n}",
    "IslMfFgpgQq2brpu": "if (this.actor.hasCondition(\"broken\"))\r\n{\r\n    this.actor.removeCondition(\"broken\")\r\n    this.script.scriptNotification(`Nie może otrzymać Paniki`);\r\n}",
    "IupskvzvoGyD2H5o": "if (this.actor.type === \"character\") {\r\n    let name = this.item.name\r\n    let god\r\n\r\n    // Remove placeholder from name\r\n    name = name.replace(\" (Dowolne)\", \"\")\r\n\r\n    if (name.includes(\"(\")) {\r\n        // If name already specifies, make sure tests value reflects that\r\n        god = name.split(\"(\")[1].split(\")\")[0]\r\n    } else {\r\n        // If no specified, provide dialog choice\r\n        god = await ValueDialog.create(\"Wybierz Bóstwo\", \"Błogosławieństwo (Boska Tradycja)\")\r\n        if (god) name = `${name.split(\"(\")[0].trim()} (${god})`\r\n    }\r\n    if (god) {\r\n        let prayers = await game.wfrp4e.utility.findAll(\"prayer\", \"Ładuję błogosławienia...\")\r\n        let blessings = prayers.filter(\r\n          p => p.system.god.value.split(\",\").map(i => i.trim().toLowerCase()).includes(god.toLowerCase()) &&\r\n            p.system.type.value == \"blessing\")\r\n        if (blessings.length) {\r\n            this.script.scriptNotification(\"Dodano: \" + blessings.map(i => i.name).join(\", \"))\r\n            await this.actor.createEmbeddedDocuments(\"Item\", blessings, {fromEffect: this.effect.id})\r\n        } else {\r\n            this.script.scriptNotification(`Brak błogosławieństw związanych z ${god}.`)\r\n        }\r\n        this.item.updateSource({name})\r\n        await this.actor.update({\"system.details.god.value\": god})\r\n    }\r\n}",
    "IzoOmDywGLqLNljN": "let currentArtisticSkill = this.actor.getFlag(\"wfrp4e\", \"currentArtisticSkill\");\r\nif (currentArtisticSkill !== null) {\r\n  let currentCareer = this.actor.system.currentCareer;\r\n  let existingSkill = this.actor.itemTypes.skill.find(i => i.name === currentArtisticSkill);\r\n\r\n  if (!currentCareer) {\r\n    return;\r\n  }\r\n\r\n  let inCurrentCareer = currentCareer.system.skills.includes(currentArtisticSkill);\r\n  if (existingSkill && inCurrentCareer && currentArtisticSkill != null) {\r\n    existingSkill.system.advances.costModifier = -5;\r\n  } else {\r\n    currentCareer.system.skills.push(currentArtisticSkill);\r\n  }\r\n}",
    "J0IWUhxada2ONowP": "        return args.skill?.name == \"Występy (Śpiew)\" || args.skill?.name == \"Występy (Śpiewanie)\" || (args.skill?.name.includes(\"Język\") && (args.skill?.name.includes(\"Magiczny\") || args.skill?.name.includes(\"Elthárin\") || args.skill?.name.includes(\"Kitajski\")))",
    "jdS2u1tQPYeO55WI": "let type = this.item.getFlag(\"wfrp4e\", \"breath\");\r\n\r\nif (type == \"cold\")\r\n{\r\n\tlet stunned = Math.max(1, Math.trunc(args.totalWoundLoss / 5))\r\n\tawait args.actor.addCondition(\"stunned\", stunned);\r\n}\r\n\r\nif (type == \"corrosion\")\r\n{\r\n    let damageItems = await Dialog.confirm({title : this.item.name, content : `<p>Uszkodzić wszystkie noszone przedmioty?</p>`})\r\n\tif (damageItems)\r\n\t{\r\n\t\tlet msg = ``\r\n\t\tlet weapons = args.actor.itemTypes.weapon.filter(i => i.isEquipped);\r\n\t\tlet armour = args.actor.itemTypes.armour.filter(i => i.isEquipped);\r\n\t\tlet trappings = args.actor.itemTypes.trapping.filter(i => i.isEquipped);\r\n\t\tfor(let item of weapons)\r\n\t\t{\r\n\t\t\tif (item.system.properties.qualities.shield)\r\n\t\t\t{\r\n\t\t\t\tawait item.system.damageItem(1, \"shield\");\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tawait item.system.damageItem(1);\r\n\t\t\t}\r\n\t\t\tmsg += `<p><strong>${item.name}</strong>: uszkodzono o 1</p>`\r\n\t\t}\r\n\t\tfor(let item of armour)\r\n\t\t{\r\n\t\t\tawait item.system.damageItem(1);\r\n\t\t\tmsg += `<p><strong>${item.name}</strong>: uszkodzono o 1</p>`\r\n\t\t}\r\n\t\tfor(let item of trappings)\r\n\t\t{\r\n\t\t\tawait item.system.damageItem(1);\r\n\t\t\tmsg += `<p><strong>${item.name}</strong>: uszkodzono o 1</p>`\r\n\t\t}\r\n\t\tif (msg)\r\n\t\t{\r\n\t\t\tthis.script.scriptMessage(msg, {speaker : {alias : args.actor.name}});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (type == \"fire\")\r\n{\r\n\tawait args.actor.addCondition(\"ablaze\");\r\n}\r\n\r\nif (type == \"electricity\")\r\n{\r\n\tawait args.actor.addCondition(\"stunned\");\r\n}\r\n\r\nif (type == \"poison\")\r\n{\r\n\tawait args.actor.addCondition(\"poisoned\");\r\n}\r\n\r\n",
    "jFwema0iwzBphxie": "let woundsGained = Math.min(args.actor.status.wounds.value, args.totalWoundLoss)\r\nwoundsGained = Math.ceil(woundsGained / 2)\r\n\r\nargs.attacker.update({\"system.status.wounds.value\" : args.attacker.system.status.wounds.value + woundsGained})\r\n\r\nargs.actor.addCondition(\"fatigued\")\r\nargs.attacker.hasCondition(\"fatigued\")?.delete();\r\n\r\nthis.script.scriptMessage(`<b>${args.attacker.prototypeToken.name}</b> został uleczony o ${woundsGained}`);",
    "JJbqtP61V1jGbW85": "let skill = `Sztuka (${this.item.parenthesesText})`\r\nlet currentCareer = this.actor.system.currentCareer;\r\nlet existingSkill = this.actor.itemTypes.skill.find(i => i.name == skill);\r\n\r\nif (!currentCareer) return\r\n\r\n\r\nlet inCurrentCareer = currentCareer.system.skills.includes(skill);\r\nlet artisticAdded = this.actor.getFlag(\"wfrp4e\", \"artisticAdded\") || {};\r\nif (existingSkill && inCurrentCareer && !artisticAdded[existingSkill.name])\r\n{\r\n  existingSkill.system.advances.costModifier = -5;\r\n}\r\nelse\r\n{\r\n  artisticAdded[skill] = true;\r\n  currentCareer.system.skills.push(skill);\r\n  setProperty(this.actor, \"flags.wfrp4e.artisticAdded\", artisticAdded)\r\n}",
    "Jjq3oPYbI26zjxME": "let location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono: ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nlet roll = await new Roll(\"1d10\").roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
    "Jnp5c09sPzDD61EK": "this.script.scriptNotification(`${args.actor.prototypeToken.name}: musi zdać <b>Przeciętny (+20) Test Siły Woli</b> aby zaatakować ten cel!`)\r\n\r\nreturn true; // No need to show this in the dialog",
    "jObJanFoev4N6ZRv": "if (!args.opposedTest.attackerTest.item?.system?.isMagical)\r\n\targs.abort = `<strong>${this.effect.name}</strong>: Zignorowano`",
    "JQruHprM5R5vZ9DA": "let caster = this.effect.sourceActor;\r\nif (caster)\r\n{\r\n    let healed= caster.system.characteristics.wp.bonus + caster.system.characteristics.int.bonus\r\n    await this.actor.modifyWounds(healed);\r\n    this.script.scriptMessage(`<strong>${this.actor.prototypeToken.name}</strong> odzuskuje ${healed} Żywotności`)\r\n}\r\n \r\n let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"vhard\"}, context : {success : \"1 Punkt Zepsucia otrzymany w ciągu ostatniej godziny może zostać usunięty.\", failure: \"Nic się nie dzieje\"}})\r\n await test.roll();",
    "KGK9vL1Yl0qmCeCN": "let specification = this.item.system.specification.value;\r\nlet choice = [];\r\n\r\nif (!specification || specification == \"Wyszkolona Umiejętność\")\r\n{\r\n    choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n        broken: \"Ujarzmiony\",\r\n        drive: \"Pociągowy\",\r\n        entertain: \"Maskotka\",\r\n        fetch: \"Aportujący\",\r\n        guard: \"Stóżujący\",\r\n        home: \"Powracający\",\r\n        magic: \"Magiczny\",\r\n        mount: \"Wierzchowiec\",\r\n        war: \"Bojowy\"\r\n    }, this.effect.img), \"unlimited\", \"Wybierz wyszkoloną umiejętność\");\r\n}\r\nelse \r\n{\r\n    choice = specification.split(\", \").map(i => {\r\n        return {\r\n            id : i.toLowerCase(),\r\n            name : i\r\n        }\r\n    });\r\n}\r\n\r\nif (choice.length)\r\n{\r\n    let changes = foundry.utils.deepClone(this.effect.changes);\r\n\r\n    for(let training of choice)\r\n    {\r\n        switch(training.id)\r\n        {\r\n            case \"ujarzmiony\" : \r\n                let roll = await new Roll(\"2d10\").roll();   \r\n                roll.toMessage(this.script.getChatData());\r\n                changes.push({value : roll.total, mode : 2, key : \"system.characteristics.fel.modifier\"})\r\n\r\n                if (this.actor.type == \"creature\")\r\n                {\r\n                    let bestial = this.actor.itemTypes.trait.find(i => i.name == \"Zwierzęcy\");\r\n                    if (bestial)\r\n                    {\r\n                        bestial.update({\"system.disabled\" : true})\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"pociągowy\" : \r\n\r\n                break;\r\n\r\n            case \"maskotka\" : \r\n\r\n                break;\r\n\r\n            case \"aportujący\" : \r\n\r\n                break;\r\n\r\n            case \"stóżujący\" : \r\n                let territorial = await fromUuid(\"Compendium.wfrp4e-core.items.Item.JIAe7i7dqTQBu4do\");\r\n                await this.actor.createEmbeddedDocuments(\"Item\", [territorial], {fromEffect: this.effect.id})\r\n                setProperty(args, \"options.keepId\", true);\r\n                break;\r\n\r\n            case \"powracający\" : \r\n\r\n                break;\r\n\r\n            case \"magiczny\" : \r\n\r\n                break;\r\n\r\n            case \"wierzchowiec\" : \r\n\r\n                break;\r\n\r\n            case \"bojowy\" : \r\n                changes.push({value : 10, mode : 2, key : \"system.characteristics.ws.modifier\"})\r\n                break;\r\n        }\r\n    }\r\n    this.effect.updateSource({name : `${this.effect.name} (${choice.map(i => i.name).join(\", \")})`, changes, \"flags.wfrp4e.trained\" : choice.map(i => i.id)})\r\n    this.item.updateSource({\"system.specification.value\" : `${choice.map(i => i.name).join(\", \")}`})\r\n}",
    "KICZPwLvbUSxbDrE": "let table = game.wfrp4e.tables.findTable(\"mutatemental\");\r\nif (!table)\r\n{\r\n\tui.notifications.error(\"Nie znaleziono tablicy z kluczem: mutatemental\")\r\n}\r\nlet result = (await table.roll()).results[0];\r\nlet uuid = `Compendium.${result.documentCollection}.${result.documentId}`\r\nlet item = await fromUuid(uuid);\r\n\r\nif (item)\r\n{\r\n    this.script.scriptNotification(`${item.name} added`)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [item])\r\n}\r\nelse \r\n{\r\n    ui.notifications.error(\"Obiekt nie może zostać znaleziony: \" + uuid)\r\n}",
    "kiJ6AiaYVUjt6aV6": "teeth = await fromUuid(\"Compendium.wfrp4e-core.items.fBcZhOBn8IpoVqQ1\")\r\nteeth = teeth.toObject();\r\n\r\nlet roll = await new Roll(\"1d10\").roll();\r\nroll.toMessage(this.script.getChatData({flavor : \"Utracono zęby\"}))\r\nteeth.system.location.value = `${roll.total} ${teeth.system.location.value}`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [teeth])",
    "KkjkYAGI9Em1NgiQ": "if (this.item.system.quantity.value) \r\n{\r\n    this.item.system.reduceQuantity();\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Heal\"), { appendTitle: ` - ${this.effect.name}`, skipTargets: true })\r\n    await test.roll();\r\n    if (test.succeeded) \r\n    {\r\n        let actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n        actor.applyEffect({ effectData: [this.item.effects.contents[0].convertToApplied()] })\r\n    }\r\n    else \r\n    {\r\n        this.script.scriptNotification(\"Test Leczenia nie powiódł się!\", \"error\")\r\n    }\r\n}\r\nelse \r\n{\r\n    this.script.scriptNotification(\"None left!\", \"error\")\r\n}",
    "lOzkngzye4RmvALp": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.DrNUTPeodEgpWTnT\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id});\r\nthis.script.scriptNotification(\"Dodano: \" + item.name)",
    "LQEWSN5KnHHATPsf": "if (args.totalWoundLoss > 0)\r\n{\r\n    this.script.scriptMessage(`<b>${args.actor.name}</b> musi zdać <b>Prosty (+40) Test Odporności</b> lub otrzyma @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Ropiejącą Ranę}`, {whisper: ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
    "LyAK0dVDS5L09yq2": "let caster = this.effect.sourceActor\r\n\r\nif (caster)\r\n{\r\n    let bonus = caster.system.characteristics.wp.bonus\r\n    this.actor.modifyWounds(bonus)\r\n\r\n    this.script.scriptMessage(`<strong>${this.actor.prototypeToken.name}</strong> odzyskuje ${bonus} Żywotności`)\r\n}",
    "M9VgeYGiUO97ZUW4": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.hCadFsTRvLN9faaY\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Szczęka\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (!test.succeeded)\r\n{\r\n\targs.actor.addCondition(\"unconscious\")\r\n}\r\n\r\n",
    "MfxzwJz2o9ho2hOM": "return args.skill?.name == \"Rzemiosło (Aptekarz)\" || args.skill?.name == \"Rzemiosło (Alchemik)\" || args.skill?.name == \"Rzemiosło (Truciciel)",
    "Mhb67xufvA9uWO21": "let actorSize = game.wfrp4e.config.actorSizeNums[args.actor.details.size.value]\r\nlet attackerSize = game.wfrp4e.config.actorSizeNums[args.attacker.details.size.value]\r\n\r\nif (attackerSize > actorSize)\r\n{\r\n   args.actor.addCondition(\"prone\")\r\n   this.script.scriptMessage(`<strong>Atak Ogonem</strong>: ${args.actor.prototypeToken.name} zostaje <strong>Powalony</strong>`)\r\n}\r\n",
    "Mir4FMHQRdVqazAF": "let actorSize = game.wfrp4e.config.actorSizeNums[args.actor.details.size.value]\r\nlet attackerSize = game.wfrp4e.config.actorSizeNums[args.attacker.details.size.value]\r\n\r\nif (attackerSize > actorSize)\r\n{\r\n   let msg = `<b>Atak Językiem</b>: ${args.actor.prototypeToken.name} otrzymuje Stan @Condition[Pochwycenie]`;\r\n   await args.actor.addCondition(\"entangled\");\r\n   if (actorSize <= 2)\r\n   {\r\n       msg += `oraz Stan @Condition[Związany Walką]`\r\n   }\r\n   this.script.scriptMessage(msg, {speaker : {alias: args.attacker.prototypeToken.name}})\r\n}",
    "mPxmCsXYirAIT913": "let key = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.characteristics, this.effect.img), 1, \"Wybierz Cechę\");\r\n\r\nthis.effect.updateSource({changes : [{key : `system.characteristics.${key[0].id}.modifier`, mode : 2, value : 10}]})",
    "Msygc7oQQPB5fw0b": "let test = this.effect.sourceTest;\r\nif (test.failed && (test.result.roll % 11 == 0 || test.result.roll == 100))\r\n{\r\n\tlet points = await new Roll(\"1d10\").roll();\r\n\tgame.dice3d?.showForRoll(points)\r\n\tthis.actor.update({\"system.status.corruption.value\" : this.actor.system.status.corruption.value + points.total})\r\n\tthis.script.scriptMessage(`Otrzymane punkty Zepsucia: ${points.total} `)\r\n}\r\nelse \r\n{\r\n\tlet points = this.effect.sourceTest.result.overcast.usage.other.current;\r\n\tthis.actor.update({\"system.status.corruption.value\" : this.actor.system.status.corruption.value - points})\r\n\tthis.script.scriptMessage(`Utracone punkty Zepsucia: ${points} `)\r\n}",
    "N2MeOlf0GjPiRcSb": "let test = await this.actor.setupCharacteristic(\"dex\", {context : {failure : \"Upuszcza przedmiot\"}})\r\nawait test.roll();",
    "n5RJqJL9fdRIxkuN": "if (this.actor.system.status.advantage.value > 0)\r\n{\r\n    await this.actor.modifyAdvantage(-1);\r\n    this.script.scriptNotification(\"Zmniejszono Przewagę\")\r\n}\r\nelse \r\n{\r\n    return this.script.scriptNotification(\"Niewystarczająca Przewaga!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item)\r\nawait test.roll();",
    "naF5EWr1CBkYRZTK": "if (args.opposedTest?.attackerTest?.item?.system?.isRanged) \r\n{\r\n    let choice = await Dialog.wait({\r\n        title: this.effect.name,\r\n        content: `<p>Zniwelować Obrażenia dzięki: <strong>${this.effect.name}</strong>?`,\r\n        buttons: {\r\n            yes: {\r\n                label: \"Tak\",\r\n                callback: () => {\r\n                    return true;\r\n                }\r\n            },\r\n            no: {\r\n                label: \"Nie\",\r\n                callback: () => {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    if (choice)\r\n    {\r\n        args.abort = `<strong>${this.effect.name}</strong>: Obrażenia Zniwelowane`\r\n    }\r\n}",
    "NDvNGATDM2xPFJK0": "brokenbone = await fromUuid(\"Compendium.wfrp4e-core.items.hCadFsTRvLN9faaY\")\r\nteeth = await fromUuid(\"Compendium.wfrp4e-core.items.fBcZhOBn8IpoVqQ1\")\r\ntongue = await fromUuid(\"Compendium.wfrp4e-core.items.rkJA1DlK51QuRlJy\")\r\nbrokenbone = brokenbone.toObject();\r\nteeth = teeth.toObject();\r\ntongue = tongue.toObject();\r\n\r\n\r\nlet roll = await new Roll(\"1d10\").roll();\r\nroll.toMessage(this.script.getChatData({flavor : \"Utrata zębów\"}))\r\n\r\nteeth.system.location.value = `${roll.total} ${teeth.system.location.value}`\r\nbrokenbone.system.location.value = \"Szczęka\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [brokenbone, teeth, tongue])\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty : \"vhard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"unconscious\")\r\n}",
    "NI3ZzIAlpQfVSjvf": "if (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create(\"Wprowadź wartość Strachu\", this.item.name);\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
    "nkbTnaeBpthyhw4J": "let fortunePoints = this.effect.sourceTest.result.overcast.usage.other.current\r\nlet current = this.actor.status.fortune.value\r\n\r\nthis.actor.update({\"system.status.fortune.value\" : fortunePoints + current})\r\n\r\nthis.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b>: Punkty Szczęścia zwiększone z ${current} do ${fortunePoints + current}`)",
    "NkqtQaLEGYst0PUO": "if (this.actor.has(\"Odporność na Magię\", \"talent\")) \r\n    return\r\n\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.eowbsW6oHGSNJmxV\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
    "NnA4zpuO6iUXKhH7": "if ((args.opposedTest.attackerTest.item && args.opposedTest.attackerTest.item.isMelee) || (args.opposedTest.attackerTest.item && !args.opposedTest.attackerTest.item.name.includes(\"Broń Zasięgowa\")))\r\n{\r\n    let AP = parseInt(this.effect.sourceTest.result.SL)\r\n    args.modifiers.ap.value += AP;\r\n    args.modifiers.ap.magical += AP;\r\n    args.modifiers.ap.details.push(`${this.effect.name} (${AP})`)\r\n}",
    "nP2Bp8k9gRaEqXdt": "if (this.item.name.includes(\"(\")) {\r\n  let trade = this.item.parenthesesText;\r\n  if (trade?.toLowerCase() != \"Dowolny\") {\r\n    return this.item.updateSource({\"system.tests.value\": this.item.system.tests.value.replace(\"Dowolne\", trade)});\r\n  }\r\n}\r\n\r\nlet index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n  reduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n  filter(i => i.type == \"skill\" && i.name !== `${game.i18n.localize(\"NAME.Trade\")} ()` && i.name.includes(game.i18n.localize(\"NAME.Trade\"))).\r\n  sort((a, b) => a.name.localeCompare(b.name)).\r\n  map(i => {\r\n    i.id = i._id;\r\n    return i;\r\n  });\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Rzemiosło\");\r\nlet text;\r\nif (!choice[0]) {\r\n  let custom = await ValueDialog.create(\"Wpisz własne Rzemiosło\", \"Własne Rzemiosło\");\r\n  text = custom || \"\";\r\n} else {\r\n  text = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\n\r\nawait this.item.updateSource({\r\n  name: this.item.name.replace(\"(Dowolny)\", \"\").trim() + ` (${text})`,\r\n  \"system.tests.value\": this.item.system.tests.value.replace(\"Dowolne\", text),\r\n});",
    "NrVFrIXM8GnIbojv": "args.item.system.damage.value = `BS + ${this.actor.system.characteristics.fel.bonus}`;",
    "o3JUBKLvE6bBxK2n": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), { fields: { difficulty: \"average\" } })\r\nawait test.roll();\r\nif (test.failed) \r\n{\r\n    await this.actor.addCondition(\"prone\")\r\n    let injury = await fromUuid(\"Compendium.wfrp4e-core.items.ZhMADOqoo0y8Q9bx\");\r\n    injury = injury.toObject()\r\n    let toes = Math.clamped(Math.abs(test.result.SL) + 1, 1, 5)\r\n    injury.system.location.key = this.item.system.location.key[0] + injury.system.location.value\r\n    if (injury.system.location.key[0] == \"r\")\r\n    {\r\n        injury.system.location.value = `${toes} prawy ${injury.system.location.value}s`\r\n    }\r\n    else if (injury.system.location.key[0] == \"l\")\r\n    {\r\n        injury.system.location.value = `${toes} lewy ${injury.system.location.value}s`\r\n    }\r\n    setProperty(injury, \"system.wfrp4e.count\", toes)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [injury])\r\n}",
    "o88xuUConwt0vFLw": "let points = this.effect.sourceTest.result.overcast.usage.other.current;\r\n\r\nthis.actor.update({\"system.status.fortune.value\" : this.actor.system.status.fortune.value + points});\r\n\r\nthis.script.scriptMessage(`Otrzymane Punkty Szczęścia: ${points}`)",
    "OeKeQAAcJhdI4Qky": "if (this.actor.hasCondition(\"stunned\") || this.actor.hasCondition(\"unconscious\"))\r\n{\r\n\tthis.script.scriptNotification(\"Wyłączony!\");\r\n\tawait this.effect.update({\"disabled\" : true})\r\n}",
    "OGX4BneaYAnV25TO": "let chatData = { whisper: ChatMessage.getWhisperRecipients(\"GM\") }\r\nlet message = \"\"\r\n\r\nlet wounds = duplicate(this.actor.status.wounds)\r\nlet regenRoll = await new Roll(\"1d10\").roll();\r\nlet regen = regenRoll.total;\r\n\r\nif (wounds.value >= wounds.max)\r\n    return\r\n\r\nif (wounds.value > 0) \r\n{\r\n    wounds.value += regen\r\n    if (wounds.value > wounds.max)\r\n    {\r\n        wounds.value = wounds.max\r\n    }\r\n    message += `<b>${this.actor.name}</b>: Odzyskane punkty Żywotności: ${regen}.`\r\n\r\n    if (regen == 10)\r\n    {\r\n        message += `<br>Dodatkowo zregenerowano krytyczną ranę.`\r\n    }\r\n}\r\nelse if (regen >= 8) \r\n{\r\n    message += `<b>${this.actor.name}</b>: wylosowano ${regen} i odzyskano 1 punkt Żywotności.`\r\n    wounds.value += 1\r\n    if (regen == 10)\r\n    {\r\n        message += `<br>Dodatkowo zregenerowano krytyczną ranę.`\r\n    }\r\n}\r\nelse \r\n{\r\n    message += `<b>${this.actor.name}</b>: wylosowano ${regen} - brak efektu.`\r\n}\r\n\r\nawait this.actor.update({ \"system.status.wounds\": wounds })\r\nthis.script.scriptMessage(message, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
    "OicQSEVZBbqLtrcf": "let choice = await ItemDialog.create(this.actor.itemTypes.critical, (this.effect.sourceTest.result.overcast.usage.other.current || 1), \"Wybierz krytyczne rany do zagojenia (nie można zregenerować utraconych części ciała)\")\r\n\r\nthis.script.scriptMessage(`Uleczono: <strong>${choice.map(i => i.name).join(`, `)}</strong>`);\r\nthis.actor.deleteEmbeddedDocuments(\"Item\", choice.map(i => i.id))",
    "okr3TtzpFoefUuJS": "let item = await fromUuid('Compendium.wfrp4e-core.items.EaqlLRQigwnsEAXX')\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Obojczyk\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
    "OqLKL0PiCvYH2QxW": "if (args.test.options.wallcrawler)\r\n{\r\n\tif (parseInt(args.test.result.SL) < 0 || args.test.failed)\r\n\t{\r\n\t\tif (parseInt(args.test.result.SL) < 0)\r\n\t\t{\r\n\t\t\targs.test.result.SL = \"+0\";\r\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalSuccess\");\r\n\t\t}\r\n\t\targs.test.result.outcome = \"success\"\r\n        args.test.result.other.push(`<strong>${this.effect.name}</strong>: Minimum +0 PS`)\r\n\t}\r\n}",
    "oV81zgbZsuTFG6L2": "let caster = this.effect.sourceActor;\r\n\r\nthis.actor.modifyWounds(caster.system.characteristics.fel.bonus);\r\n\r\nthis.script.scriptMessage(`Uleczone Punkty Żywotności: ${caster.system.characteristics.fel.bonus}`);",
    "OxsBnnVI3Smpknpb": "if (this.actor.status.advantage.value && !this.actor.sameSideAs(this.effect.sourceActor))\r\n{\r\n    this.actor.modifyAdvantage(-1);\r\n    this.script.scriptNotification(`${this.actor.name}: utracono 1 Punkt Przewag`);\r\n}",
    "PmELrzD3RmF9qKkO": "if (this.item.system.specification.value == \"Rozmiar\")\r\n{\r\n    let choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.actorSizes, this.item.img), 1, \"Wybierz rozmiar\");\r\n    if (choice[0])\r\n    {\r\n        this.item.updateSource({\"system.specification.value\" : choice[0].name})\r\n        this.effect.updateSource({name : this.effect.name + ` (${choice[0].name})`})\r\n    }\r\n}",
    "qAEZgtu5CrfUkxhx": "if (args.test.options.staunchBleeding) \r\n{\r\n if (args.test.succeeded) \r\n {\r\n   let staunch =  Number(args.test.result.SL) + 1\r\n   if (args.test.options.fieldDressing && args.test.result.reversed)\r\n   {\r\n     staunch =  Math.min(1, Number(args.test.result.SL)) + 1\r\n   }\r\n   args.test.result.other.push(`<b>${this.actor.name}</b>: usunięto pacjentowi liczbę stanów krwawienia równą: <b>${staunch}</b>.`)\r\n }\r\n   else if (this.actor.characteristics.int.bonus + Number(args.test.result.SL) < 0)\r\n   {\r\n      args.test.result.other.push(`Pacjent otrzymuje @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Pomniejszą Infekcję}.`)\r\n   }\r\n}",
    "Qgn92fZyc3Psn8QJ": "if (args.test.options.useOnesAttractive && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n\targs.test.data.result.SL = \"+\" + (ones + args.test.successBonus + args.test.slBonus)\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Użyto wartości kości jedności jako PS`)\r\n}",
    "qmOt7h17hGAKqQe0": "\r\nlet choice = await Dialog.wait({\r\n    title: this.effect.name,\r\n    content: `<p><strong>${this.effect.name}</strong>: Czy ten Magiczny lub Zasięgowy atak pochodził spoza Kopuły?</p>`,\r\n    buttons: {\r\n        yes: {\r\n            label: \"Tak\",\r\n            callback: () => {\r\n                return true;\r\n            }\r\n        },\r\n        no: {\r\n            label: \"Nie\",\r\n            callback: () => {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nif (choice)\r\n{\r\n\targs.ward = 6;\r\n}",
    "QRSACifDrvojIXHB": "if (!this.actor.effects.find(e => e.isCondition))\r\n{\r\n\treturn this.script.scriptNotification(\"Aktor nie posiada żadnych Stanów\")\r\n}\r\n\r\nlet choice = await ItemDialog.create(this.actor.effects.filter(i => i.isCondition), 1, \"Wybierz Stan\")\r\n\r\nif (choice[0])\r\n{\r\n\tthis.actor.removeCondition(choice[0].conditionId)\r\n}\r\n",
    "qSwCYMMiIHmSV1X5": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n     let effectData = this.item.effects.contents[0].convertToApplied();\r\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid\r\n     effectData.duration.seconds = 10800\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"Nic nie zostało!\", \"error\")\r\n}",
    "qu194dVXm9Vx1TGk": "if (args.test.options.useOnesSupportive && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n\targs.test.data.result.SL = \"+\" + (ones + args.test.successBonus + args.test.slBonus)\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Użyto wartości kości jedności jako PS`)\r\n}",
    "quPcuKsq2fcild4a": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"easy\"}, context: {failure : `<strong>${this.effect.name}</strong>: Wymiot!`} })\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
    "QwHoqu2oO8QO8Mad": "let content = `<b>${this.effect.name}</b>: Wszyscy będący w zwarciu z <b>${this.actor.prototypeToken.name}</b> otrzymują [[/r 1d10]] Obrażeń, zmniejszonych o wartość Bonusu Wt oraz Pancerza.`\r\n\r\nthis.script.scriptMessage(content)",
    "R32U01LBjBrK1pns": "        const templateMap = {\r\n            'P2e7Yx98bK3u110a' : \"\",\r\n            'iuMp3KLaMT2WCmie' : \"Xp4r2KUhqfjak8zq\", \r\n            'RBuYcT5tppwcmnC5' : \"wYN19h3WVF1yOVq2\", \r\n            'vcGpNwNbhvfzVveQ' : \"ac5ClOuaYtzOYyWp\", \r\n            'jmhKZy0w9TzkEK9c' : \"IS3LTdTuay6uRHUq\", \r\n            '9Byj6k7SmdTYis2V' : \"LjMlx99gBGeRJUQu\", \r\n            'laJwc2l9tzJPgaaJ' : \"x5wpMprsObuqMCYg\",\r\n        }\r\n        let template = (await game.wfrp4e.tables.rollTable(\"hireling-templates\", {hideDSN: true})).object;\r\n        let physicalQuirk = (await game.wfrp4e.tables.rollTable(\"physical-quirks\", {hideDSN: true})).text;\r\n        let workEthic = (await game.wfrp4e.tables.rollTable(\"work-ethic\", {hideDSN: true})).text;\r\n        let personalityQuirk = (await game.wfrp4e.tables.rollTable(\"personality-quirks\", {hideDSN: true})).text;\r\n\r\n\r\n        let templateItem = await game.wfrp4e.utility.findItemId(templateMap[template._id]);\r\n\r\n        let bio = \r\n        `\r\n        <p><strong>Szablon</strong>: ${template.text}</p>\r\n        <p><strong>Cecha fizyczna</strong>: ${physicalQuirk}</p>\r\n        <p><strong>Etyka</strong>: ${workEthic}</p>\r\n        <p><strong>Cecha psychiczna</strong>: ${personalityQuirk}</p>\r\n        `\r\n        \r\n        this.script.scriptMessage(bio, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n\r\n        await this.actor.update({\"system.details.gmnotes.value\" : bio})\r\n\r\n        if (templateItem)\r\n        {\r\n            this.actor.createEmbeddedDocuments(\"Item\", [templateItem.toObject()])\r\n        }",
    "re1UFtxvRRjpPB7Z": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.nF5z1OEhpi4t6a6S\");\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nif (data.system.location.key[0] == \"r\")\r\n{\r\n\tdata.system.location.value = \"Prawa kostka\"\r\n}\r\nelse if (data.system.location.key[0] == \"l\")\r\n{\r\n\tdata.system.location.value = \"Lewa kostka\"\r\n}\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {skipLocationValue : true, fromEffect: this.effect.id})\r\n",
    "red2bt4PGgIWAdTR": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n     let effectData = this.item.effects.contents[0].convertToApplied();\r\n     let minutes = Math.ceil(CONFIG.Dice.randomUniform() * 10) * 10;\r\n     effectData.duration.seconds = 60 * minutes\r\n     this.script.scriptMessage(`<strong>Czas trwania</strong>: ${minutes} minut`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"None left!\", \"error\")\r\n}",
    "rf6ZAaqI209n1czi": "if (this.item.name.includes(\"(\")) {\r\n  let trade = this.item.parenthesesText;\r\n  if (trade?.toLowerCase() != \"Dowolny\") {\r\n    return this.item.updateSource({\"system.tests.value\": this.item.system.tests.value.replace(\"Dowolna\", trade)});\r\n  }\r\n}\r\n\r\nlet index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n  reduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n  filter(i => i.type == \"skill\" && i.name !== `${game.i18n.localize(\"NAME.Art\")} ()` && i.name.includes(`${game.i18n.localize(\"NAME.Art\")} (`)).\r\n  sort((a, b) => a.name.localeCompare(b.name)).\r\n  map(i => {\r\n    i.id = i._id;\r\n    return i;\r\n  });\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Sztukę\");\r\nlet text;\r\nif (!choice[0]) {\r\n  let custom = await ValueDialog.create(\"Wpisz własną Sztukę\", \"Własna Sztuka\");\r\n  text = custom || \"\";\r\n} else {\r\n  text = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\n\r\nlet newTalentName = this.item.name.replace(\"(Dowolny)\", \"\").trim() + ` (${text})`;\r\nlet careerTalents = this.actor.system.currentCareer.system.talents;\r\nconst talentIndex = careerTalents.indexOf(this.item.name);\r\nif (talentIndex !== null) {\r\n  careerTalents.splice(talentIndex, 1);\r\n  careerTalents.push(newTalentName);\r\n  await this.actor.system.currentCareer.update({\r\n    \"system.talents\": careerTalents,\r\n  });\r\n}\r\n\r\nawait this.item.updateSource({\r\n  name: newTalentName,\r\n  \"system.tests.value\": this.item.system.tests.value.replace(\"Dowolna\", text),\r\n});",
    "RHyBLYT5oHf7EPnG": "let skills = this.actor.itemTypes.skill.filter(i => i.name.includes(game.i18n.localize(\"NAME.Melee\")))\r\n\r\nlet skill = await ItemDialog.create(skills, 1, \"Wybierz umiejętność wybranej broni\")\r\nlet group = game.wfrp4e.utility.extractParenthesesText(skill[0]?.name)\r\nlet groupKey = game.wfrp4e.utility.findKey(group, game.wfrp4e.config.weaponGroups)\r\n\r\nlet weapon = {\r\n\tname : this.effect.name,\r\n\ttype : \"weapon\",\r\n\timg : this.effect.img,\r\n\tsystem : {\r\n\t\t\"damage.value\" : this.actor.system.characteristics.wp.bonus,\r\n\t\t\"weaponGroup.value\" : groupKey || \"basic\",\r\n\t\t\"twohanded.value\" : [\"polearm\", \"twohanded\"].includes(groupKey),\r\n\t\t\"reach.value\" : \"average\",\r\n\t\t\"qualities.value\" : [{name : \"magical\"}]\r\n\t},\r\n}\r\n\r\nItem.implementation.create(foundry.utils.expandObject(weapon), {parent : this.actor, fromEffect : this.effect.id})\r\nthis.script.scriptNotification(\"Przedmiot utworzony. Dalsze dostosowywanie należy wykonać ręcznie w Karcie przedmiotu\");",
    "RKIFGN583PQnqHGk": "if (args.opposedTest.result.hitloc.value == \"body\" && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 2)\r\n    this.script.scriptMessage(\"Otrzymano 2 Stany Krwawienia\")\r\n}",
    "rpxQU26BU7nwjtqY": "let location = this.item.system.location.key\r\nlet test = await this.actor.setupCharacteristic(\"dex\", {context : {failure : `<strong>${this.effect.name}</strong>: Upuść przedmiot!`}, skipTargets: true, appendTitle :  \" - \" + this.effect.name, fields : {difficulty : \"average\"}})\r\nawait test.roll();\r\n\r\n\r\nif (location && test.failed)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono: ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nreturn test.succeeded",
    "RrchOMpEdIvceJxl": "return args.skill?.name == \"Skradanie (Wieś)\"",
    "RSsGiDFibuqg3sHr": "let diseaseIndex = game.packs\r\n.filter(i => i.metadata.type == \"Item\")\r\n.reduce((acc, pack) => acc.concat(pack.index.contents), [])\r\n.filter(i => i.type == \"disease\")\r\n.map(i => {\r\n\ti.id = i._id\r\n\treturn i\r\n})\r\n\r\nlet choice = await ItemDialog.create(diseaseIndex , 1, \"Wybierz Chorobę\")\r\n\r\nif (choice[0])\r\n{\r\n\tawait this.item.updateSource({\"system.specification.value\" : choice[0].name})\r\n}",
    "RvipIYj9H7n4UDMe": "   let characteristics = {\r\n            \"ws\" : -10,\r\n            \"bs\" : -10,\r\n            \"s\" : -5,\r\n            \"t\" : -5,\r\n            \"i\" : -10,\r\n            \"ag\" : -10,\r\n            \"dex\" : -10,\r\n            \"int\" : 0,\r\n            \"wp\" : 0,\r\n            \"fel\" : 0\r\n        }\r\n        let skills = []\r\n        let skillAdvancements = []\r\n        let talents = []\r\n        let trappings = []\r\n        let items = []\r\n\r\n        let updateObj = this.actor.toObject();\r\n        \r\n        for (let ch in characteristics)\r\n        {\r\n            updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n        }\r\n        \r\n        for (let index = 0; index < skills.length; index++)\r\n        {\r\n            let skill = skills[index]\r\n            let skillItem;\r\n            skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n            if (skillItem)\r\n                skillItem.system.advances.value += skillAdvancements[index]\r\n            else \r\n            {\r\n                skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n                skillItem = skillItem.toObject();\r\n                skillItem.system.advances.value = skillAdvancements[index];\r\n                items.push(skillItem);\r\n            }\r\n        }\r\n        \r\n        for (let talent of talents)\r\n        {\r\n            let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n            if (talentItem)\r\n            {\r\n                items.push(talentItem.toObject());\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${talent}`, {permanent : true})\r\n            }\r\n        }\r\n        \r\n        for (let trapping of trappings) \r\n        {\r\n            let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n            if (trappingItem)\r\n            {\r\n                trappingItem = trappingItem.toObject()\r\n        \r\n                equip(trappingItem)\r\n        \r\n                items.push(trappingItem);\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${trapping}`, {permanent : true})\r\n            }\r\n        }\r\n       \r\n        \r\n        await this.actor.update(updateObj)\r\n        this.actor.createEmbeddedDocuments(\"Item\", items);\r\n        \r\n        function equip(item)\r\n        {\r\n            if (item.type == \"armour\")\r\n                item.system.worn.value = true\r\n            else if (item.type == \"weapon\")\r\n                item.system.equipped = true\r\n            else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n                item.system.worn = true\r\n        }",
    "S3Dev4hleOYqDNe9": "if (args.test.options.healWounds) {\r\n if (args.test.succeeded) \r\n {\r\n   let wounds = this.actor.characteristics.int.bonus + Number(args.test.result.SL)\r\n   if (args.test.options.fieldDressing && args.test.result.reversed)\r\n   {\r\n      wounds = this.actor.characteristics.int.bonus + Math.min(1, Number(args.test.result.SL))\r\n   }\r\n\targs.test.result.woundsHealed = wounds\r\n\targs.test.result.other.push(`<b>${this.actor.name}</b>: uleczono pacjentowi liczbę ran równą: <b>${wounds}</b>.`)\r\n   }\r\n   else if (this.actor.characteristics.int.bonus + Number(args.test.result.SL) < 0)\r\n   {\r\n      args.test.result.other.push(`Pacjent otrzymuje @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Pomniejszą Infekcję}.`)\r\n   }\r\n}",
    "s7gJQdzuM3fz2zQK": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.QluSTTTq3viHJJUh\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Biodro\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n   \r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
    "sbK1a7txpSoXFzyB": "if (args.test.options.useOnesArgumentative && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n\targs.test.data.result.SL = \"+\" + (ones + args.test.successBonus + args.test.slBonus)\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Użyto wartości kości jedności jako PS.`)\r\n}",
    "scfm5iWWBxWI6QaK": "let darkvision = await fromUuid(\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\")\r\nlet fear = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\")\r\nlet acutesense = await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")\r\nfear = fear.toObject();\r\nfear.system.specification.value = 1;\r\nthis.actor.createEmbeddedDocuments(\"Item\", [darkvision, fear, acutesense], {fromEffect : this.effect.id})",
    "sgS9rblPkQB36C8S": "if (this.item.name.includes(\"(\")) {\r\n  let trade = this.item.parenthesesText;\r\n  if (trade !== \"Dowolny\") {\r\n    return this.item.updateSource({\"system.tests.value\": this.item.system.tests.value.replace(\"Dowolne\", trade)});\r\n  }\r\n}\r\n\r\nlet index = game.packs.filter(i => i.metadata.type == \"Item\").\r\n  reduce((acc, pack) => acc.concat(pack.index.contents), []).\r\n  filter(i => i.type == \"skill\" && i.name !== `${game.i18n.localize(\"NAME.Trade\")} ()` &&\r\n    i.name.includes(game.i18n.localize(\"NAME.Trade\"))).\r\n  sort((a, b) => a.name.localeCompare(b.name)).\r\n  map(i => {\r\n    i.id = i._id;\r\n    return i;\r\n  });\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Rzemiosło\");\r\nlet text;\r\nif (!choice[0]) {\r\n  let custom = await ValueDialog.create(\"Wpisz własne Rzemiosło\", \"Własne Rzemiosło\");\r\n  text = custom || \"\";\r\n} else {\r\n  text = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\r\n}\r\n\r\nlet newTalentName = this.item.name.replace(\"(Dowolny)\", \"\").trim() + ` (${text})`;\r\nlet careerTalents = this.actor.system.currentCareer.system.talents;\r\nconst talentIndex = careerTalents.indexOf(this.item.name);\r\nif (talentIndex !== -1) {\r\n  careerTalents.splice(talentIndex, 1);\r\n  careerTalents.push(newTalentName);\r\n  await this.actor.system.currentCareer.update({\r\n    \"system.talents\": careerTalents,\r\n  });\r\n}\r\nawait this.effect.updateSource({name: newTalentName});\r\nawait this.item.updateSource({\r\n  name: newTalentName,\r\n  \"system.tests.value\": this.item.system.tests.value.replace(\"Dowolne\", text),\r\n});",
    "sKO8TcLIkCTnFvXu": "args.abort = true;\r\nthis.script.scriptNotification(`Nie można używać: ${this.item.system.location.value}!`, \"error\")",
    "sNSfDBIA2k17hPYI": "let ablaze = this.actor.hasCondition(\"ablaze\");\r\nif (ablaze)\r\n{\r\n\tablaze?.delete();\r\n\tthis.script.scriptNotification(\"Ignoruje Podpalenie\");\r\n}\r\n",
    "sx7Ikn8WW00gBFb4": "let location = (Math.ceil(CONFIG.Dice.randomUniform() * 2) == 2 ? \"r\" : \"l\") + \"Arm\"\r\n\r\nif (location == \"lArm\")\r\n{\r\n\tthis.script.scriptNotification(\"Wylosowano Lewą\")\r\n}\r\nelse if (location == \"rArm\")\r\n{\r\n\tthis.script.scriptNotification(\"Wylosowano Prawą\")\r\n}\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.location\" : location});\r\n\r\nif (location)\r\n{\r\n    let dropped = this.actor.itemTypes.weapon.filter(i => i.isEquipped & i.system.usesHands.includes(location));\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono: ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nlet roll = await new Roll(\"1d10\").roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
    "sZwLitzwKBTaFca3": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.5hH73j2NgPdsLCZN\")\r\nlet data = item.toObject();\r\ndata.name = data.name.replace(\"x\", \"Zielonoskórzy, Nieumarli, Chaos\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
    "T5fiTzhXEQAv9Drf": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.rlDZZTj5PXjuRXa2\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key;\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n\r\nlet location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}",
    "TBpNFRL5uehs0fze": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n\tactor.applyEffect({effectData : [this.item.effects.contents[0]]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"Nic nie zostało!\", \"error\")\r\n}",
    "tCIT1a12Gt6k2ohA": "let resistance\r\nif (this.item.name.includes(\"(\"))\r\n{\r\n\tresistance = this.item.parenthesesText\r\n}\r\nelse \r\n{\r\n    resistance = await ValueDialog.create(\"Wybierz Odporność\", \"Odporność\") \r\n    \r\n    if (resistance)\r\n    {\r\n        this.item.updateSource({name : this.item.name + ` (${resistance})`})\r\n        this.effect.updateSource({name : this.effect.name + ` (${resistance})`})\r\n    }\r\n}    \r\nthis.item.updateSource({\"system.tests.value\" : this.item.system.tests.value.replace(\"przypisane Zagrożenie\", resistance)})\r\n\r\nif (resistance && !this.effect.name.includes(\"(\"))\r\n{\r\n    this.effect.updateSource({name : this.effect.name += ` (${resistance})`})\r\n}",
    "toSrgcvWq9b5eN0K": "let location = await game.wfrp4e.tables.rollTable(\"hitloc\", {hideDSN: true})\r\n\r\nthis.item.updateSource({name : `${this.item.name} (${location.description})`})\r\nthis.script.scriptMessage(`<strong>Miejsce:</strong> ${location.description}`, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
    "tUwP7TjrOOOnaCYJ": "let fatigued = this.actor.hasCondition(\"fatigued\")\r\nif (fatigued)\r\n{\r\n   this.script.scriptNotification(`Usunięte Stany Zmęczenia: ${fatigued.conditionValue}`)\r\n   fatigued.delete();  \r\n}\r\nelse \r\n{\r\n\tthis.script.scriptNotification(`Brak Stanów Zmęczenia do usunięcia`)\r\n}",
    "U26XMie3Kjoddisj": "let stunned = this.actor.hasCondition(\"stunned\")\r\nif (stunned)\r\n{\r\n   this.script.scriptNotification(`Usunięto 1 Stan Oszołomienia`)\r\n   this.actor.removeCondition(\"stunned\");\r\n}\r\nelse \r\n{\r\n\tthis.script.scriptNotification(`Brak Stanów Oszołomienia do usunięcia`)\r\n}",
    "U9xh2wriSqCosugW": "if (args.test.options.stag)\r\n{\r\n\tif (parseInt(args.test.result.SL) < 0 || args.test.failed)\r\n\t{\r\n\t\tif (parseInt(args.test.result.SL) < 0)\r\n\t\t{\r\n\t\t\targs.test.result.SL = \"+0\";\r\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalSuccess\");\r\n\t\t}\r\n\t\targs.test.result.outcome = \"success\"\r\n        args.test.result.other.push(`<strong>${this.effect.name}</strong>: Minimum +0 PS`)\r\n\t}\r\n}",
    "ucF4aiJ1gpDB333G": "if (args.test.options.catfall && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target) && !args.test.result.catfall)\r\n{\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Obrażenia od upadku zmniejszone o liczbę metrów: ${Number(args.test.result.SL) + 1}`)\r\n   args.test.result.catfall = true; // Prevent duplicate messages\r\n}",
    "UDPsaymtZf39UsMk": "\r\n                            let fatigued = this.actor.hasCondition(\"fatigued\")\r\n                            if (!fatigued)\r\n                            {\r\n                                this.actor.addCondition(\"fatigued\")\r\n                              ui.notifications.notify(this.actor.name + \": dodano Stan Zmęczenia, który nie może zostać usunięty dopóki nie usunie się Gorączki.\")\r\n                            }\r\n",
    "v4CCxVaVGf9i8U7X": "let cured = await Dialog.wait({\r\n    title : this.effect.name,\r\n    content : \"<p>Wpisz liczbę chorób/klątw, które zostały uleczone</p><input type='number'>\",\r\n    buttons : {\r\n        confirm : {\r\n            label : \"Potwierdź\",\r\n            callback : (dlg) => {\r\n                let input = dlg.find(\"input\");\r\n                value = parseInt(input[0].value);\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\nlet damage = 0;\r\n\r\nlet rolls = new Array(cured).fill(\"\").map(i => `max(0, 1d10 - ${this.actor.system.characteristics.fel.bonus})`)\r\n\r\nlet test = new Roll(`${rolls.join(\" + \")}`);\r\nawait test.roll();\r\ntest.toMessage({speaker : {alias : this.actor.name}, flavor : this.effect.name});\r\nthis.script.scriptMessage(await this.actor.applyBasicDamage(test.total, { damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg : true }))",
    "vc4bELo0cWYoILfB": "let choice = await ItemDialog.create(this.actor.itemTypes.disease, 1, \"Wybierz chorobę, którą chcesz uleczyć (Musi być naturalnego pochodzenia)\")\r\n\r\nthis.script.scriptMessage(`uleczono <strong>${choice[0]?.name}</strong>`);\r\nchoice[0].delete()",
    "vFUVWZ1l8wpTjLcx": "if (!this.actor.has(game.i18n.localize(\"NAME.Daemonic\")))\r\n    return\r\n\r\nlet caster = this.effect.sourceActor;\r\nif (caster) \r\n{\r\n    let wp = caster.system.characteristics.wp\r\n    if (this.actor.system.characteristics.wp.value >= wp.value)\r\n    {\r\n        this.script.scriptNotification(\"Cel ma wyższą Siłę Woli, brak efektu\")\r\n        return\r\n    }\r\n    this.actor.applyBasicDamage(wp.bonus, { damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL })\r\n}",
    "VqTrKPtxv9hpn0Hr": "return args.skill?.name != \"Język (Magiczny)\"",
    "VzO0ZDcTWvaBn4vm": "if (args.test.preData.skillName?.includes(game.i18n.localize(\"NAME.Language\")) || args.test instanceof CastTest)\r\n{\r\n\tif (parseInt(args.test.result.SL) > 0 || args.test.succeeded)\r\n\t{\r\n\t\tif (parseInt(args.test.result.SL) > 0)\r\n\t\t{\r\n\t\t\targs.test.result.SL = \"-0\";\r\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalFailure\");\r\n\t\t}\r\n\t\targs.test.result.outcome = \"failure\"\r\n        args.test.result.other.push(`<strong>${this.effect.name}</strong>: Maksymalnie -0 PS`)\r\n\t}\r\n}",
    "W9nyUNQStMr1pUHJ": "if (args.opposedTest.result.hitloc.value == this.item.system.location.key)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n    this.script.scriptNotification(\"Otrzymano Stan Krwawienia\");\r\n}",
    "WB6sIpLEPC8YPX67": "if (args.options.dodge)\r\n{\r\n\targs.abort = true;\r\n\tthis.script.scriptNotification(\"Nie można unikać!\")\r\n}\r\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)",
    "WiYtNU2Y5BJfIpeM": "let location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.scriptNotification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}",
    "WO5n7Vbx8AgoVrwC": "   let characteristics = {\r\n            \"ws\" : 0,\r\n            \"bs\" : 0,\r\n            \"s\" : 0,\r\n            \"t\" : 0,\r\n            \"i\" : 10,\r\n            \"ag\" : 0,\r\n            \"dex\" : 0,\r\n            \"int\" : 10,\r\n            \"wp\" : 5,\r\n            \"fel\" : 5\r\n        }\r\n        let skills = [\"Intuicja\", \"Wiedza (Lokalna)\", \"Percepcja\"]\r\n        let skillAdvancements = [10, 10, 10]\r\n        let talents = []\r\n        let trappings = [\"Kolczuga\", \"Nogawice kolcze\", \"Czepiec kolczy\", \"Broń ręczna\"]\r\n        let items = []\r\n\r\n        let updateObj = this.actor.toObject();\r\n        \r\n        for (let ch in characteristics)\r\n        {\r\n            updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n        }\r\n        \r\n        for (let index = 0; index < skills.length; index++)\r\n        {\r\n            let skill = skills[index]\r\n            let skillItem;\r\n            skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n            if (skillItem)\r\n                skillItem.system.advances.value += skillAdvancements[index]\r\n            else \r\n            {\r\n                skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n                skillItem = skillItem.toObject();\r\n                skillItem.system.advances.value = skillAdvancements[index];\r\n                items.push(skillItem);\r\n            }\r\n        }\r\n        \r\n        for (let talent of talents)\r\n        {\r\n            let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n            if (talentItem)\r\n            {\r\n                items.push(talentItem.toObject());\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${talent}`, {permanent : true})\r\n            }\r\n        }\r\n        \r\n        for (let trapping of trappings) \r\n        {\r\n            let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n            if (trappingItem)\r\n            {\r\n                trappingItem = trappingItem.toObject()\r\n        \r\n                equip(trappingItem)\r\n        \r\n                items.push(trappingItem);\r\n            }\r\n            else \r\n            {\r\n                ui.notifications.warn(`Nie znaleziono: ${trapping}`, {permanent : true})\r\n            }\r\n        }\r\n        \r\n        \r\n        await this.actor.update(updateObj)\r\n        this.actor.createEmbeddedDocuments(\"Item\", items);\r\n        \r\n        function equip(item)\r\n        {\r\n            if (item.type == \"armour\")\r\n                item.system.worn.value = true\r\n            else if (item.type == \"weapon\")\r\n                item.system.equipped = true\r\n            else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n                item.system.worn = true\r\n        }",
    "wsqNM4NHnwaAAQym": "    args.applyAP = false;\r\n\r\n    this.script.scriptNotification(\"Ten test dotyczy tylko przestępców, w przeciwnym razie zamknij okno dialogowe.\");\r\n    this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"average\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`}).then(async test => \r\n    {\r\n      await test.roll();\r\n      if (test.failed)\r\n      {\r\n        args.actor.addCondition(\"unconscious\");\r\n      }\r\n    });",
    "wzkxiKjxVEeNS1di": "let roll = await new Roll(\"1d10\").roll();\r\nthis.script.scriptMessage(await this.actor.applyBasicDamage(roll.total, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg: true}))\r\n\r\nawait this.actor.addCondition(\"deafened\", 3)\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty: \"average\" }, skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context : {failure: \"Otrzymano Stan Paniki\", success : \"Uniknięto Stanu Paniki\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"broken\")\r\n}",
    "xBpLQa7yBPczDMY8": "    let scythe = (await fromUuid(\"Compendium.wfrp4e-core.items.CXg7XOFJwu4LZ9LM\")).toObject();\r\n    scythe.name = \"Kosa Shyish\";\r\n    scythe.system.damage.value = \"WPB + 3\"\r\n    scythe.system.equipped = true;\r\n    scythe.img = this.effect.icon;\r\n    scythe.system.qualities.value.push({name : \"magical\"})\r\n    this.actor.createEmbeddedDocuments(\"Item\", [scythe], {fromEffect : this.effect.id})",
    "XO9m2AvFRAAeEuty": "if (args.test.options.fieldDressing && args.test.result.reversed)\r\n{\r\n\targs.test.data.result.SL = \"+\" + Math.min(1, Number(args.test.data.result.SL))\r\n\targs.test.result.other.push(`<b>${this.effect.name}</b>: PS ograniczone do 1`)\r\n}",
    "xobGBJbgFjQCrwvq": "let roll;\r\nif (this.actor.has(game.i18n.localize(\"NAME.Daemonic\")) || this.actor.has(game.i18n.localize(\"NAME.Undead\")) || [\"Goblin\", \"Ork\", \"Nieumarły\"].includes(this.actor.system.details.species.value))\r\n{\r\n    roll = await new Roll(`1d10 + ${this.effect.sourceTest.result.overcast.usage.other.current}`).roll()\r\n}\r\nelse \r\n{\r\n    roll = await new Roll(`1d10`).roll()\r\n}\r\n\r\nroll.toMessage(this.script.getChatData())\r\nawait this.actor.applyBasicDamage(roll.total, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg : true})\r\n\r\nif (this.actor.has(game.i18n.localize(\"NAME.Undead\")) || args.actor.has(game.i18n.localize(\"NAME.Daemonic\")))\r\n{\r\n  this.actor.addCondition(\"ablaze\")\r\n}",
    "xS2su09zcza9du09": "if ([\"Pomniejsze\", \"Umiarkowane\", \"Poważne\"].includes(this.item.system.specification.value))\r\n{\r\n\treturn\r\n}\r\n\r\nlet choice = await ItemDialog.create(ItemDialog.objectToArray({minor : \"Pomniejsze\", moderate : \"Umiarkowane\", major : \"Poważne\"}, this.item.img), 1, \"Wybierz poziom Zepsucia\");\r\n\r\nthis.item.updateSource({\"system.specification.value\" : choice[0]?.name || \"\"})",
    "xUpKYT7BZCSmAfUy": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n\tactor.applyEffect({effectData : [this.item.effects.contents[0].convertToApplied()]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"Nic nie zostało!\", \"error\")\r\n}",
    "Y8J66v8VTKUASGuK": "if (!this.actor.effects.find(e => e.isCondition))\r\n{\r\n\treturn this.script.scriptNotification(\"Aktor nie posiada Stanów\")\r\n}\r\n\r\nlet choice = await ItemDialog.create(this.actor.effects.filter(i => i.isCondition), 1, \"Wybierz Stan\")\r\n\r\nif (choice[0])\r\n{\r\n\tawait this.actor.removeCondition(choice[0].conditionId)\r\n}\r\n\r\nif (this.actor.effects.find(e => e.isCondition))\r\n{\r\n    return false; // Delete the effect if there are still conditions, otherwise, effect remains and provides the bonus\r\n}",
    "YaKnYEbmmZZtByJc": "if (args.opposedTest.attackerTest.options.ballockKnife)\r\n{\r\n    args.weaponProperties.impale = true;\r\n    args.extraMessages.push(`<strong>${this.item.name}</strong>: Dodano Nadziewającą`)\r\n}",
    "yCgH3N9AurIiAv0i": "if (!this.item.name.includes(\"(\") || this.item.system.tests.value.includes(\"(Zmysł)\"))\r\n{\r\n    let tests = this.item.system.tests.value\r\n    let name = this.item.name\r\n\r\n    // If name already specifies, make sure tests value reflects that\r\n    if (name.includes(\"(\"))\r\n    {\r\n        let sense = name.split(\"(\")[1].split(\")\")[0]\r\n        tests = `${tests.split(\"(\")[0].trim()} (${sense})`;\r\n    }\r\n    else // If no sense specified, provide dialog choice\r\n    {\r\n        let choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n            taste : \"Smak\",\r\n            sight : \"Wzrok\",\r\n            smell : \"Węch\",\r\n            hearing : \"Słuch\",\r\n            touch : \"Dotyk\"\r\n        }, this.item.img), 1, \"Wybierz Zmysł\");\r\n        if (choice[0])\r\n        {\r\n            name = `${name.split(\"(\")[0].trim()} (${choice[0].name})`\r\n            tests = `${tests.split(\"(\")[0].trim()} (${choice[0].name})`\r\n        }\r\n    }\r\n\r\n        this.item.updateSource({name, \"system.tests.value\" : tests})\r\n}",
    "yzN7ZNlgCiSVJqsU": "let sourceItem = this.effect.sourceItem;\r\n\r\nif (sourceItem)\r\n{\r\n\tthis.actor.applyEffect({effectUuids : [sourceItem.effects.contents[1].uuid]})\r\n\tthis.script.scriptNotification(\"Zastosowano po efektach\");\r\n}",
    "Z30zYayPryXOjT5N": "args.item.system.damage.value = \"SB + 6\";",
    "zadppy7FEbXvgUON": " let characteristics = {\r\n                    \"ws\" : 5,\r\n                    \"bs\" : 0,\r\n                    \"s\" : 0,\r\n                    \"t\" : 0,\r\n                    \"i\" : 0,\r\n                    \"ag\" : 10,\r\n                    \"dex\" : 10,\r\n                    \"int\" : 0,\r\n                    \"wp\" : 0,\r\n                    \"fel\" : 5\r\n                }\r\n                let skills = [\"Percepcja\", \"Zwinne Palce\", \"Skradanie (Miasto)\"]\r\n                let skillAdvancements = [10, 10, 10]\r\n                let talents = [\"Przestępca\", \"Etykieta (Przestępcy)\"]\r\n                let trappings = [\"Lina (10 metrów)\", \"Wytrychy\", \"Maska\"]\r\n                let items = []\r\n        \r\n                let updateObj = this.actor.toObject();\r\n                \r\n                for (let ch in characteristics)\r\n                {\r\n                    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n                }\r\n                \r\n                for (let index = 0; index < skills.length; index++)\r\n                {\r\n                    let skill = skills[index]\r\n                    let skillItem;\r\n                    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n                    if (skillItem)\r\n                        skillItem.system.advances.value += skillAdvancements[index]\r\n                    else \r\n                    {\r\n                        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n                        skillItem = skillItem.toObject();\r\n                        skillItem.system.advances.value = skillAdvancements[index];\r\n                        items.push(skillItem);\r\n                    }\r\n                }\r\n                \r\n                for (let talent of talents)\r\n                {\r\n                    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n                    if (talentItem)\r\n                    {\r\n                        items.push(talentItem.toObject());\r\n                    }\r\n                    else \r\n                    {\r\n                        ui.notifications.warn(`Nie znaleziono: ${talent}`, {permanent : true})\r\n                    }\r\n                }\r\n                \r\n                for (let trapping of trappings) \r\n                {\r\n                    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n                    if (trappingItem)\r\n                    {\r\n                        trappingItem = trappingItem.toObject()\r\n                \r\n                        equip(trappingItem)\r\n                \r\n                        items.push(trappingItem);\r\n                    }\r\n                    else \r\n                    {\r\n                        ui.notifications.warn(`Nie znaleziono: ${trapping}`, {permanent : true})\r\n                    }\r\n                }\r\n              \r\n                \r\n                await this.actor.update(updateObj)\r\n                this.actor.createEmbeddedDocuments(\"Item\", items);\r\n                \r\n                function equip(item)\r\n                {\r\n                    if (item.type == \"armour\")\r\n                        item.system.worn.value = true\r\n                    else if (item.type == \"weapon\")\r\n                        item.system.equipped = true\r\n                    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n                        item.system.worn = true\r\n                }",
    "zK38Rl5t9zbFi4Se": "if (args.opposedTest.result.hitloc.value == this.item.system.location.key && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n    this.script.scriptNotification(\"Otrzymano Stan Krwawienia\")\r\n}",
});
})