Hooks.on("init", async () => {
    await new Promise(resolve => setTimeout(resolve, 250));
    foundry.utils.mergeObject(game.wfrp4e.config.effectScripts, {
  "00ZCnahnTGvzG9KA": "//*** Wybite oko\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.weczkAMPlTjX7lqU\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item])",
  "01VFjGVxkjb5P1ve": "//*** Strzał w Dziesiątkę\r\nreturn args.item?.system?.isRanged && args.data.targets[0]?.actor?.sizeNum < 3",
  "03mJu59V4iByWlsO": "// The imbiber immediately\r\n// takes 3 Poisoned Conditions that cannot be resisted at first,\r\nawait this.actor.addCondition(\"poisoned\", 3)\r\n\r\n// recovers a number of Wounds equal to their Toughness Bonus, \r\nawait this.actor.modifyWounds(this.actor.system.characteristics.t.bonus)\r\n\r\n// and acquires the Regenerate Creature Trait.\r\nconst hasRegenerate = this.actor.has(\"Regeneracja\")\r\nif (hasRegenerate === undefined) {\r\n  let trait = await fromUuid(\"Compendium.wfrp4e-core.items.SfUUdOGjdYpr3KSR\");\r\n  await this.actor.createEmbeddedDocuments(\"Item\", [trait], {fromEffect: this.effect.id});\r\n}\r\n\r\nthis.script.scriptMessage(`<p><strong>${this.actor.prototypeToken.name}</strong> otrzymuje: \r\n    <ul>\r\n      <li>3 Stany Zatrucia, których początkowo nie można usunąć</li>\r\n      <li>odzyskano liczbę ran: ${this.actor.system.characteristics.t.bonus}</li>\r\n      <li>otrzymano cechę stworzenia \"Regeneracja\".</li>\r\n    </ul>\r\n    od Łaski Ranalda zależy, czy regeneracja okaże się silniejsza niż zatrucie.</p>\r\n    <p>Kiedy wszystkie Stany Zatrucia zostaną usunięte, usuwana jest również cecha stworzenia Regeneracja.</p>`, \r\n    { whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true })   \r\n",
  "06IaVCOC0RCJbxEf": "//*** Zgruchotane ucho\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.8piWcBKFlQ2J1E3A\")\r\nlet data = item.toObject();\r\ndata.system.location.key= this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])",
  "0abwNjpzo3SbEOeO": "if (args.applyAP && args.modifiers.ap.metal) \r\n{\r\n    args.modifiers.ap.ignored += args.modifiers.ap.metal\r\n    args.modifiers.ap.details.push(\"<strong>\" + this.effect.name + \"</strong>: Zignorowano Metalowy Pancerz (\" + args.modifiers.ap.metal + \")\");\r\n    args.modifiers.ap.metal = 0\r\n}",
  "0amHqfjTRp5ff6Op": "let wounds = this.effect.sourceActor.system.characteristics.wp.bonus;\r\nthis.actor.modifyWounds(wounds);\r\nthis.script.message(`Uleczone rany: $[wounds}`);",
  "0e7OkamNAaAk4Oit": "//*** Rozerwana łydka\r\nlet item1 = await fromUuid(\"Compendium.wfrp4e-core.items.3S4OYOZLauXctmev\")\r\nlet item2 = await fromUuid(\"Compendium.wfrp4e-core.items.7mCcI3q7hgWcmbBU\")\r\n\r\nlet data1 = item1.toObject();\r\ndata1.system.location.key = this.item.system.location.key\r\n\r\nlet data2 = item2.toObject();\r\ndata2.system.location.key = this.item.system.location.key\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data1, data2], {fromEffect: this.effect.id})\r\n",
  "0FNOq4J1AdPd2A0q": "//*** Starsza Pilotka\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Row\")) && !args.skill?.name.includes(game.i18n.localize(\"NAME.Sail\"));",
  "0FWto1oEr3jbWggw": "let spells = await warhammer.utility.findAllItems(\"spell\", \"Ładowanie Zaklęć\")\r\n\r\nlet text = (await game.wfrp4e.tables.rollTable(\"random-caster\", {hideDSN: true})).result\r\n\r\nlore = Array.from(text.matchAll(/{(.+?)}/gm))[0][1]\r\n\r\nif (text == \"Wybór GMa\")\r\n{\r\n    return this.script.notification(text)\r\n}\r\n\r\nif (spellsWithLore.length > 0)\r\n{\r\n    let spellsWithLore = spells.filter(i => game.wfrp4e.config.magicLores[i.system.lore.value] == lore)\r\n    let selectedSpell = spellsWithLore[Math.floor(CONFIG.Dice.randomUniform() * spellsWithLore.length)]\r\n    this.script.notification(selectedSpell.name);\r\n    this.actor.createEmbeddedDocuments(\"Item\", [selectedSpell])\r\n}\r\nelse\r\n{\r\n    ui.notifications.notify(`Nie udało się odnaleźć zaklęcia w Tradycji ${lore}. Spróbuj ponownie.`)\r\n}",
  "0H2syk6qc0sCY0pj": "if ( args.actor.has(game.i18n.localize(\"NAME.AA\"), \"talent\") ||\r\nargs.actor.has(game.i18n.localize(\"NAME.SecondSight\"), \"talent\") ) {\r\n\targs.modifiers.other.push({label : this.effect.name, value : 5, details : \"Cel posiada Target has Zmysł Magii lub Percepcję Magiczną\"});\r\n}",
  "0iTLDgFHO9Rgc010": "//*** Wrogość (x)\r\nargs.fields.modifier -= 20;",
  "0R0QAr3D024kWPfo": "//*** Mutacja\r\nlet table = game.wfrp4e.tables.findTable(\"mutatephys\");\r\nif (!table)\r\n{\r\n\treturn ui.notifications.error(\"Nieodnaleziono tabeli Mutacji, upewnij się, że tabla o kluczu `mutatephys` jest zaimportowana do świata.\")\r\n}\r\nlet result = (await table.roll()).results[0];\r\nlet uuid = `Compendium.${result.documentCollection}.${result.documentId}`\r\nlet item = await fromUuid(uuid);\r\n\r\nif (item)\r\n{\r\n    this.script.notification(`Dodano: ${item.name}`)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [item])\r\n}\r\nelse \r\n{\r\n    ui.notifications.error(\"Nie odnaleziono przedmiotu: \" + uuid)\r\n}",
  "0Uly7OmkH0zqYbxQ": "//*** Jarred Arm\r\nlet location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nlet roll = await new Roll(\"max(1, 1d10 - @system.characteristics.t.bonus)\", this.actor).roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas Trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
  "0vaYwAlMWTmOBl8k": "//*** Ogłuszenie\r\nif (!args.flags.strikeToStun)\r\n{\r\n    args.flags.strikeToStun = true\r\n    args.fields.modifier += 20;\r\n    args.fields.hitLocation = \"head\";\r\n}\r\nargs.fields.successBonus++;",
  "0YKQGbsKdHSmYGE7": "//*** Towarzyski\r\nif (args.skill?.name != game.i18n.localize(\"NAME.Gossip\"))\r\n{\r\n\treturn true;\r\n}\r\nelse \r\n{\r\n\targs.data.canReverse = true; // Kind of a kludge here, the talent Tests has a specific condition, but the description simply says \"any gossip test can be reversed\" so check it here instead of submission\r\n}\r\n    ",
  "11uCC0mK2uL783al": "//*** Zionięcie (Gaz) - Zębacz Jaskiniowy\r\nlet type = this.item.getFlag(\"wfrp4e\", \"breath\");\r\n\r\nif ([\"fire\", \"electricity\", \"poison\"].includes(type))\r\n{\r\n    args.applyAP = false;\r\n}",
  "190PHSHKGaJ74wsR": "//*** Doświadczony Wędrowiec (Wybrany Teren)\r\nif (!this.item.name.includes(\"(\") || this.item.system.tests.value.toLowerCase().includes(\"teren\") || this.item.system.tests.value.toLowerCase().includes(\"wybrany\"))\r\n{\r\n    let tests = this.item.system.tests.value\r\n    let name = this.item.name\r\n\r\n    // If name already specifies, make sure tests value reflects that\r\n    if (name.includes(\"(\") && !name.toLowerCase().includes(\"wybrany\"))\r\n    {\r\n        let terrain = name.split(\"(\")[1].split(\")\")[0]\r\n        tests = tests.replace(\"Wybrany Teren\", terrain)\r\n    }\r\n    else // If no sense specified, provide dialog choice\r\n    {\r\n        let choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n            coastal : \"Wybrzeża\",\r\n            deserts : \"Pustynie\",\r\n            marshes : \"Bagna\",\r\n            rocky : \"Teren Skalisty\",\r\n            tundra : \"Tundra\",\r\n            woodlands : \"Lasy\"\r\n        }, this.item.img), 1, \"Wybierz teren:\");\r\n        if (choice[0])\r\n        {\r\n            name = `${name.split(\"(\")[0].trim()} (${choice[0].name})`\r\n            tests = tests.replace(\"Wybrany Teren\", choice[0].name)\r\n        }\r\n    }\r\n\r\n    this.effect.updateSource({name})\r\n    this.item.updateSource({name, \"system.tests.value\" : tests})\r\n}",
  "1A87vGLh2PXH0rG0": "//*** Poliglota\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));",
  "1BT0MWM2cbhlEnrn": "//*** Diamond in the Rough\r\nlet characteristics = {\r\n    \"ws\" : 5,\r\n    \"bs\" : 5,\r\n    \"s\" : 5,\r\n    \"t\" : 0,\r\n    \"i\" : 5,\r\n    \"ag\" : 5,\r\n    \"dex\" : 5,\r\n    \"int\" : 0,\r\n    \"wp\" : 5,\r\n    \"fel\" : 5\r\n}\r\nlet items = []\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nlet talents = (await Promise.all([game.wfrp4e.tables.rollTable(\"talents\"), game.wfrp4e.tables.rollTable(\"talents\"), game.wfrp4e.tables.rollTable(\"talents\")])).map(i => i.text)\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie odnaleziono talentu: ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);",
  "1exiWlVUHsXDLLAH": "//*** Krąg śmierci\r\nthis.script.notification(`Nie można wkroczyć: ${this.effect.name}!`);",
  "1fQr1Dg7DX0vfz3r": "let healed = parseInt(this.effect.sourceTest.result.SL)\r\nthis.actor.modifyWounds(healed)\r\nthis.script.scriptMessage(`Uleczono Rany: ${healed}`)",
  "1IodsW9ImamYoEYz": "//*** Szybkobiegacz\r\nargs.actor.details.move.run += 4",
  "1jQq9v8fXK8zuEBU": "let damage = this.effect.sourceActor.hasCondition(\"fatigued\") ? 6 : 10;\r\n\r\nlet loc = \"body\"\r\n\r\nlet APatLoc = this.actor.system.status.armour[loc];\r\n\r\nlet metalAP = APatLoc.layers.reduce((metal, layer) => metal += ((layer.metal && !layer.magical) ? layer.value : 0), 0)\r\n\r\nlet APused = Math.max(0, APatLoc.value - metalAP); // remove metal AP at location;\r\n\r\ndamage -= (APused + this.actor.system.characteristics.t.bonus)\r\n\r\nlet msg = await this.actor.applyBasicDamage(damage, {suppressMsg : true, damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL});\r\nmsg += ` (Zignorowano metalowy pancerz: ${metalAP} PP na lokalizacji: ${game.wfrp4e.config.locations[loc]})`\r\nthis.script.scriptMessage(msg)\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"difficult\"}, appendTitle : ` - ${this.effect.name}`});\r\nawait test.roll();\r\nif (test.failed)\r\n\tthis.actor.addCondition(\"stunned\");",
  "1kB2su7hLRYDhZ2H": "//*** Paskudnie przecięty paluch\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\nif (!test.succeeded)\r\n{\r\n    let item = await fromUuid(\"Compendium.wfrp4e-core.items.ZhMADOqoo0y8Q9bx\")\r\n    let data = item.toObject();\r\n    if (this.item.system.location.key == \"rLeg\")\r\n    {\r\n        data.system.location.value = \"Prawy Palec U nogi\"\r\n\tdata.system.location.key = \"rToe\";\r\n    }\r\n    else if (this.item.system.location.key == \"lLeg\")\r\n    {\r\n        data.system.location.value = \"Lewu Palec U nogi\"\r\n\tdata.system.location.key = \"lToe\";\r\n    }\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data])\r\n}\r\nthis.effect.delete();",
  "1l7Jz2ZHbAWko7Vm": "//*** Ballock Knife\r\nargs.options.ballockKnife = true;",
  "1LDm3OB32skZe6Xv": "//*** Nienawiść (Grupa)\r\nreturn args.characteristic != \"wp\"",
  "1LDSzXeO5CzXgTOc": "return args.skill?.name.includes(game.i18n.localize(\"NAME.Channelling\")) || args.skill?.name == `${game.i18n.localize(\"NAME.Language\")} (${game.i18n.localize(\"SPEC.Magick\")})`",
  "1OpT3CXs07XFWWCT": "//*** Szuler\r\nargs.options.cardsharp = true;",
  "1PQPxFjmRlulHHzo": "//*** Flensed Muscle\r\nif (args.opposedTest.result.hitloc.value == this.item.system.location.key && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 2);\r\n}\r\n    ",
  "1wEjrgff7ASxKVmy": "//*** Nieubłagany\r\nif (args.effect.conditionId == \"bleeding\")\r\n    args.data.damage -= 1",
  "1wKVvxRTHOyV4Qdv": "//*** Wodniak\r\nreturn !args.skill?.name?.includes(game.i18n.localize(\"NAME.Sail\"))",
  "1wrPvP6lJwIAfmsl": "//*** Zgnilizna\r\nlet choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.locations), 1, \"Wybierz Lokację\");\r\n\r\nlet location = choice[0].id;\r\n\r\nlet itemTargeted = this.actor.items.get(this.effect.getFlag(\"wfrp4e\", \"itemTargets\")[0])\r\n\r\nif (itemTargeted)\r\n{\r\n    itemTargeted.update({[`system.APdamage.${location}`] : itemTargeted.system.APdamage[location] + 1})\r\n}",
  "1yOvw74jzFfaI87b": "//*** Paper Cartridge\r\nreturn args.options.reload\r\n",
  "1ZArMNUI8qqH6zkX": "let test = await args.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  \" - \" + this.effect.name, context : {failure: \"Otrzymano Stan Oszołoemienia\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    args.actor.addCondition(\"stunned\")\r\n}\r\n\r\n",
  "1ZrzpfVwPJHdwp23": "//*** Tarcza Myrmidii\r\nthis.actor.status.addArmour(1, {source: this.effect, magical : true})",
  "22bW97lkvCqisfHX": "//*** Zmysł Magii\r\nreturn args.type != \"channelling\" && !args.skill?.name.includes(game.i18n.localize(\"NAME.Channelling\"))",
  "23HgjCB1oecxANvA": "//*** Snajper\r\nif (args.item.range && args.item.range.bands)\r\n{\r\nargs.item.range.bands[game.i18n.localize(\"Long Range\")].modifier = 0\r\nargs.item.range.bands[game.i18n.localize(\"Extreme\")].modifier /= 2\r\n}",
  "23vWiHUjxtRQ3Efz": "//*** Naderwane mięśnie pleców\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.eWPN3CV2Eddwz8aM\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Plecy\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "2AOo7KUyzMrgIlgM": "//*** Corruption - Diebold Bedrohung\r\ngame.wfrp4e.utility.postCorruptionTest(this.item.system.specification.value, {speaker : {alias: this.actor.prototypeToken.name}})",
  "2cKarG9ToyW2ptCd": "if (this.item.system.quantity.value)\r\n{\r\n\tthis.item.update({\"system.quantity.value\" : this.item.system.quantity.value - 0.25})\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n\tactor.applyEffect({effectData : [this.item.effects.contents[1].convertToApplied()]})\r\n}\r\nelse\r\n{\r\n\tthis.script.scriptNotification(\"Nic nie zostało!\", \"error\")\r\n}",
  "2miWWeRrEpq1beG4": "//*** Rozszarpany biceps\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.qn4ZpvTQIX4rcJDl\");\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n",
  "2OqLHRqEBEjBm2LW": "//*** Magiczna tarcza (Metal)\r\nargs.fields.slBonus += this.actor.system.characteristics.wp.bonus",
  "2QB0LjueuJcIaHaC": "//*** Pancerz\r\nif (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = this.item.specifier;\r\n    if (!value)\r\n    {\r\n        value = await ValueDialog.create(\"Podaj wartość pancerza\", this.effect.name);\r\n    }\r\n    if (value)\r\n    {\r\n        this.item.updateSource({\"system.specification.value\" : value, name : this.item.baseName});\r\n    }\r\n}",
  "2Qi1hwLYhdE6v6Hs": "//*** Klątwa porażającego bólu\r\nif (![\"rLeg\", \"lLeg\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\")))\r\n\treturn true;\r\n\r\nif (args.options.dodge)\r\n{\r\n\targs.abort = true;\r\n\tthis.script.notification(\"Nie można unikać!\")\r\n}\r\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)",
  "2rzxQlL7A9ujZ9uK": "//*** Tarczownik\r\nif (args.opposedTest.result.winner == \"attacker\") {\r\n  if (args.opposedTest.defenderTest.weapon && args.opposedTest.defenderTest.item.properties.qualities.shield) {\r\n    ui.notifications.notify(`<b>${this.effect.name}</b>: Otrzymano Punkty Przewag: ${this.item.Advances}`)\r\n    this.actor.setAdvantage(this.item.Advances)\r\n  }\r\n}",
  "2sDH6RvoOAR40oqH": "//*** Grzybki Szalonego Kapelusznika\r\nif (![\"Goblin\", \"Ork\"].includes(this.actor.system.details.species.value)) {\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), { appendTitle: ` - ${this.effect.name}` })\r\n    await test.roll();\r\n    if (test.failed) {\r\n        let infection = await fromUuid(\"Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg\")\r\n        this.actor.createEmbeddedDocuments(\"Item\", [infection])\r\n    }\r\n}\r\n\r\n// Since wounds change when the effect is deleted, need to wait until after \r\n// the max wounds have been recalculated to apply damage\r\nwarhammer.utility.sleep(1000).then(async () => {\r\n    let roll = await new Roll(\"1d10\").roll();\r\n\r\n    roll.toMessage(this.script.getChatData());\r\n    this.script.message(await this.actor.applyBasicDamage(roll.total, { damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg: true }))\r\n\r\n})",
  "2vTVR0quRZQtjNfQ": "let currentCareer = this.actor.system.currentCareer;\r\nif (!currentCareer)\r\n{\r\n    return;\r\n}\r\n\r\nlet talents = [game.i18n.localize(\"NAME.AA\"),\r\n`${game.i18n.localize(\"NAME.ArcaneMagic\")} (${game.i18n.localize(\"SPEC.Any\")})`,\r\ngame.i18n.localize(\"NAME.ChaosMagic\") + \" \" +  \"(Tzeentch)\",\r\ngame.i18n.localize(\"NAME.FastHands\"),\r\ngame.i18n.localize(\"NAME.ID\"),\r\ngame.i18n.localize(\"NAME.MagicalSense\"),\r\ngame.i18n.localize(\"NAME.PettyMagic\"),\r\ngame.i18n.localize(\"NAME.SecondSight\"),\r\ngame.i18n.localize(\"NAME.WarWizard\"),\r\ngame.i18n.localize(\"NAME.Witch\")].filter(t => !currentCareer.system.talents.includes(t))\r\n\r\ncurrentCareer.system.talents = currentCareer.system.talents.concat(talents)",
  "2W9uMTT6iJhfQ044": "let skill = `${game.i18n.localize(\"NAME.Trade\")} (${this.item.parenthesesText})`\r\nlet currentCareer = this.actor.system.currentCareer;\r\nlet existingSkill = this.actor.itemTypes.skill.find(i => i.name == skill);\r\n\r\nif (!currentCareer) return\r\n\r\n\r\nlet inCurrentCareer = currentCareer.system.skills.concat(currentCareer.system.addedSkills).includes(skill);\r\nlet craftsmanAdded = this.actor.getFlag(\"wfrp4e\", \"craftsmanAdded\") || {};\r\nif (existingSkill && inCurrentCareer && !craftsmanAdded[existingSkill.name])\r\n{\r\n\texistingSkill.system.advances.costModifier = -5;\r\n}\r\nelse \r\n{\r\n\tcraftsmanAdded[skill] = true;\r\n\tcurrentCareer.system.addedSkills.push(skill);\r\n\tfoundry.utils.setProperty(this.actor, \"flags.wfrp4e.craftsmanAdded\", craftsmanAdded)\r\n}",
  "2WBq5gW780C6zfCp": "//*** Krwawiąca dłoń\r\nif (args.weapon && this.item.system.usesLocation(args.weapon))\r\n{\r\n    args.bleedingHand = true;\r\n    let success = await this.effect.manualScripts[0].execute({actor: this.actor})\r\n    if (!success)\r\n    {\r\n        args.abort = true;\r\n    }\r\n}",
  "2WSN306tL4apjRtD": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\")\r\nlet data = item.toObject();\r\ndata.name = data.name += ` (${game.i18n.localize(\"SPEC.Hearing\")})`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "2yctEihGmdCfTTVx": "//*** Pierwsza Pomoc\r\nargs.data.canReverse = true;\r\nargs.options.fieldDressing = true;",
  "2zeP2nMSURjxrqYz": "//*** Mikstura lecznicza\r\nlet wounds = this.actor.system.status.wounds\r\nif (wounds.value == 0)\r\n  return this.script.notification(\"Brak efektu, ponieważ Żywotność wynosi 0\", \"error\")\r\n\r\nthis.script.notification(`Wyleczone Punkty Żywotności: ${this.actor.characteristics.t.bonus}`)\r\nawait this.actor.modifyWounds(this.actor.characteristics.t.bonus)",
  "33US8YRgaMqYu2We": "//*** Sprzyjający wiatr\r\nreturn !args.options.handling",
  "3aEzK0DehSHtVykd": "//*** Zmasakrowana dłoń\r\nthis.effect.manualScripts[0].execute({actor : this.actor});",
  "3D5ImpMgpOTPucvv": "//*** Szuler\r\nif (args.test.options.cardsharp && args.test.succeeded)\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n   args.test.result.other.push(`<span class=\"hide-option\"><b>${this.effect.name}</b>: ${ones + args.test.successBonus + args.test.slBonus} PS</span>`)\r\n}",
  "3fdCQ3h3iVuhdDs9": "//*** Skryty\r\nargs.fields.slBonus += this.actor.characteristics.ag.bonus;",
  "3hfMQkUKYI4rCuBy": "//*** Mowa zwierząt\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.CharmAnimal\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.AnimalTraining\"));",
  "3IGO7xEjRjat937X": "let fatigue = this.actor.hasCondition(\"fatigued\")\r\nif (fatigue)\r\n{\r\n   this.script.scriptNotification(\"Usunięto Stan Zmęczenia, Efekt zdeaktywowany.\")\r\n    this.effect.update({disabled : true})\r\n   await this.actor.removeCondition(\"fatigued\")\r\n}",
  "3JEzEzF1SeYA9lsV": "//*** Klątwa porażającego bólu\r\nlet choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.locations, this.effect.img), 1, \"Wybierz Lokację\");\r\nif (choice[0])\r\n{\r\n    this.effect.updateSource({name : `${this.effect.name} (${choice[0].name})`})\r\nthis.effect.updateSource({\"flags.wfrp4e.location\" : choice[0].id})\r\n}\r\n\r\nlet location = choice[0].id;\r\n\r\nif ([\"lArm\", \"rArm\"].includes(location))\r\n{\r\n    let dropped = this.actor.itemTypes.weapon.filter(i => i.isEquipped & i.system.usesHands.includes(location));\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nif (location == \"body\")\r\n{\r\n    await this.actor.addCondition(\"fatigued\");\r\n    test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"hard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n        this.actor.addCondition(\"prone\");\r\n    }\r\n}\r\n\r\nif (location == \"head\")\r\n{\r\n    await this.actor.addCondition(\"stunned\");\r\n    test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"average\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n        this.actor.addCondition(\"unconscious\");\r\n    }\r\n}",
  "3jm0NoYpgB6ZuUSl": "//*** Atrakcyjny\r\nargs.options.useOnesAttractive = true;",
  "3l7MQSa10Kve2K3P": "//*** Pożoga zagłady U’zhula\r\nthis.script.message(await this.actor.applyBasicDamage(Math.ceil(CONFIG.Dice.randomUniform() * 10) + 6, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true}))\r\nthis.actor.addCondition(\"ablaze\");",
  "3LLiSgj6KGtgqcmo": "//*** Zwisający jęzor\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));",
  "3plV9WFqs2prfAdp": "//*** Geniusz Arytmetyczny\r\nreturn ![\"NAME.Evaluate\", \"NAME.Gamble\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)",
  "3tE8gFSl28EhCmo5": "//*** Kometa Kasandory\r\nawait args.actor.addCondition(\"ablaze\")\r\nawait args.actor.addCondition(\"prone\")",
  "3TesBGh8HnlGuafu": "//*** Niezdarność (Metal)\r\nlet modifier = this.effect.sourceTest?.result.overcast.usage.other.current || 0\r\n\r\nlet test = await this.actor.setupCharacteristic(\"dex\", {fields: {modifier}, skipTargets: true, appendTitle :  \" - \" + this.script.label});\r\n\r\ntest.roll();",
  "454x3Q95pLvZm0Kx": "//*** Hulaka\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.ConsumeAlcohol\");",
  "4FGKZk2f0xrmIDnp": "//*** Szybkie Czytanie\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Research\") && !args.skill?.name?.includes(game.i18n.localize(\"NAME.Language\"));",
  "4fnTKgl0HW9ZrWyJ": "this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty : \"average\"}}).then(async test =>\r\n{\r\n     await test.roll()\r\n     if (test.failed)\r\n     {\r\n         let char = Math.ceil(CONFIG.Dice.randomUniform() * 2) == 2 ? \"s\" : \"t\";\r\n         this.script.scriptMessage(`<strong>${this.actor.name}</strong> Utracono 1 punkt cechy: ${game.wfrp4e.config.characteristics[char]}`)\r\n         this.actor.update({[`system.characteristics.${char}.initial`] : this.actor.system.characteristics[char].initial - 1})\r\n     }\r\n})",
  "4HN98hMdQJxM35pA": "//*** Odcięta stopa\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.gz2xy41OSVZ8YBgI\");\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])\r\n",
  "4iuTz0uInAfMaoGl": "//*** Złamanie głowy (pomniejsze)\r\nreturn args.skill?.name?.includes(game.i18n.localize(\"NAME.Language\")) || args.type == \"cast\"",
  "4JVIy5xtVwvadoqv": "//*** Skoczny\r\nthis.actor.details.move.run *= 2",
  "4MQ7u4INxp51oyyR": "let characteristics = {\r\n    \"ws\" : 25,\r\n    \"bs\" : 10,\r\n    \"s\" : 15,\r\n    \"t\" : 15,\r\n    \"i\" : 25,\r\n    \"ag\" : 20,\r\n    \"dex\" : 0,\r\n    \"int\" : 10,\r\n    \"wp\" : 25,\r\n    \"fel\" : 10\r\n}\r\nlet skills = [\"Opanowanie\", \"Unik\", \"Zastraszanie\", \"Intuicja\", \"Dowodzenie\", \"Wiedza (Wojenna)\", \"Percepcja\"]\r\nlet skillAdvancements = [15, 15, 15, 15, 15, 10, 10]\r\nlet talents = [\"Zmysł Bitewny\", \"Bitewny Refleks\", \"Finta\", \"Inspirujący\", \"Nieugięty\", \"Wódz\"]\r\nlet trappings = [\"Broń ręczna\", \"Tarcza\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć talentu: ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć przedmiotu: ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}\r\n",
  "4pQW4WLyhjbZR85k": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields : {difficulty : \"average\"}, context : {failure: \"1 Corruption Point Gained\"}})\r\nawait test.roll();\r\nif (test.failed && this.actor.type == \"character\")\r\n{\r\n    this.actor.update({\"system.status.corruption.value\" : parseInt(this.actor.status.corruption.value) + 1})\r\n    this.script.scriptMessage(\"Otrzymano Punkt Zepsucia\", {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "52kbfuWrOh6dsTtd": "//*** Uczta kruków\r\nif (!this.actor.hasCondition(\"blinded\"))\r\n\tthis.actor.addCondition(\"blinded\", 1, {\"flags.wfrp4e.flockOfDoom\" : true})",
  "52mwb33mGrQjq89B": "//*** Mól Książkowy\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Research\");",
  "53HFDNuMnX1Aw1a4": "//*** Amputowany nos\r\nreturn [\"ws\", \"bs\", \"s\", \"ag\", \"dex\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)",
  "58rFc9HiBoX66J6p": "//*** Męczeństwo\r\nlet sourceActor = this.effect.sourceActor;\r\nlet damage = args.totalWoundLoss;\r\nlet tb = sourceActor.system.characteristics.t.bonus\r\nargs.abort = `<strong>${this.effect.name}</strong>: Zadano obrażenia: ${sourceActor.name}`;\r\n\r\nlet message = await sourceActor.applyBasicDamage(damage - tb, {damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true})\r\n\r\nthis.script.message(message.replace(`${tb} Bomnus Wt`, `${tb} × 2 Bonus Wt`))\r\nargs.abort = true;",
  "5DI6cHAg1LHo54Yv": "if (args.opposedTest.result.differenceSL >= 0 && args.opposedTest.result.differenceSL <= 2 && args.opposedTest.result.winner == \"attacker\")\r\n{ \r\n   this.actor.update({\"system.status.fortune.value\" : Math.max(0, (this.actor.system.status.fortune?.value - 1) || 0)})\r\n    this.script.scriptMessage(`Skradziono 1 Punkt Szczęścia od <strong>${this.actor.name}</strong>`, {blind : true, whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n\r\n}",
  "5dR7Erj3nwsxLAV7": "let characteristics = {\r\n    \"ws\" : 35,\r\n    \"bs\" : 10,\r\n    \"s\" : 25,\r\n    \"t\" : 30,\r\n    \"i\" : 30,\r\n    \"ag\" : 25,\r\n    \"dex\" : 0,\r\n    \"int\" : 15,\r\n    \"wp\" : 35,\r\n    \"fel\" : 15\r\n}\r\nlet skills = [\"Opanowanie\", \"Unik\", \"Zastraszanie\", \"Intuicja\", \"Dowodzenie\", \"Wiedza (Wojenna)\", \"Percepcja\"]\r\nlet skillAdvancements = [25, 15, 25, 25, 30, 20, 20]\r\nlet talents = [\"Zmysł Bitewny\", \"Bitewny Refleks\", \"Finta\", \"Inspirujący\", \"Szczęście\", \"Nieugięty\", \"Niewzruszony\", \"Wódz\"]\r\nlet trappings = [\"Broń ręczna\", \"Tarcza\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć talentu: ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć przedmiotu: ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "5Fe1ELaS6Gnvy0Cj": "return args.skill?.name.includes(game.i18n.localize(\"NAME.Channelling\")) || args.type == \"channelling\" || args.skill?.name == game.i18n.localize(\"NAME.Charm\") || args.skill?.name.includes(`${game.i18n.localize(\"NAME.Language\")} (${game.i18n.localize(\"SPEC.Magick\")})`) || args.type == \"cast\"",
  "5JvKJZPcd6Hz5zvn": "let characteristics = {\r\n    \"ws\" : 10,\r\n    \"bs\" : 0,\r\n    \"s\" : 10,\r\n    \"t\" : 10,\r\n    \"i\" : 20,\r\n    \"ag\" : 10,\r\n    \"dex\" : 0,\r\n    \"int\" : 0,\r\n    \"wp\" : 15,\r\n    \"fel\" : 0\r\n}\r\nlet skills = [\"Opanowanie\", \"Unik\", \"Zastraszanie\", \"Dowodzenie\"]\r\nlet skillAdvancements = [15, 15, 10, 5]\r\nlet talents = [\"Zmysł Bitewny\", \"Bitewny Refleks\", \"Finta\", \"Nieugięty\"]\r\nlet trappings = [\"Kolczuga\", \"Nogawice kolcze\", \"Czepiec kolczy\", \"Broń ręczna\", \"Tarcza\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć talentu: ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć przedmiotu: ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = this.effect.name + \" \" + updateObj.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "5JWC0l3JEpOsqbR9": "let characteristics = {\r\n    \"ws\" : 0,\r\n    \"bs\" : 5,\r\n    \"s\" : 0,\r\n    \"t\" : 0,\r\n    \"i\" : 10,\r\n    \"ag\" : 10,\r\n    \"dex\" : 0,\r\n    \"int\" : 0,\r\n    \"wp\" : 5,\r\n    \"fel\" : 0\r\n}\r\nlet skills = [\"Unik\", \"Percepcja\"]\r\nlet skillAdvancements = [10, 10]\r\nlet talents = [\"Chodu\", \"Strzelec Wyborowy\"]\r\nlet trappings = [\"Broń ręczna\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć talentu: ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Nie udało się znaleźć przedmiotu: ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "5M6IgCUncCwyxHok": "let etiquette = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.sYbgpSnRqSZWgwFP\")).toObject();\r\netiquette.name += ` (Słudzy Tzeentch)`;\r\n\r\nlet animosity = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.0VpT5yubw4UL7j6f\")).toObject();\r\nanimosity.system.specification.value = \"Słudzy Nurgle'a\";\r\n\r\nlet roll = await new Roll(\"ceil(1d10 / 3)\").roll();\r\n\r\nroll.toMessage(this.script.getChatData());\r\n\r\nlet mutations = [];\r\nlet msg = `<p><strong>Otrzymaono Mutację</strong></p>`\r\nfor(let i = 0; i < roll.total; i++)\r\n{\r\n    let item;\r\n    let uuid;\r\n    let result;\r\n    if (i % 2 == 0)\r\n    {\r\n        result = await game.wfrp4e.tables.rollTable(\"mutatemental\", {hideDSN: true}, \"Tzeentch\")\r\n    }\r\n    else \r\n    {\r\n        result = await game.wfrp4e.tables.rollTable(\"mutatephys\", {hideDSN: true}, \"Tzeentch\")\r\n    }\r\n    uuid = `Compendium.${result.object.documentCollection}.${result.object.documentId}`;\r\n    item = await fromUuid(uuid);\r\n    if (item)\r\n    {\r\n        msg += `<p>@UUID[${uuid}]{${item.name}}</p>`\r\n        mutations.push(item.toObject());\r\n    }\r\n}\r\nthis.actor.createEmbeddedDocuments(\"Item\", mutations.concat([etiquette, animosity]), {fromEffect : this.effect.id})\r\nthis.script.scriptMessage(msg);",
  "5MxRDXzUBPfp2KKD": "//*** Pomocny\r\nargs.options.useOnesSupportive = true;",
  "5ScjIdRUOxblHdWS": "const repaired_message = `<p>Zakończono naprawę: <em>${this.item.name}</em>.</p>`;\r\nconst test = 'Rzemiosło (Stolarstwo)';\r\nconst difficulty = 'challenging';\r\nconst target = 40;\r\n\r\nconst extendedTestData = {\r\n  name: this.item.name,\r\n  type: \"extendedTest\",\r\n  img: this.item.img,\r\n  system: {\r\n    SL: {\r\n      current: 0,\r\n      target: target\r\n    },\r\n    test: {\r\n      value: test\r\n    },\r\n    completion: {\r\n      value: \"remove\"\r\n    },\r\n    difficulty: {\r\n      value: difficulty\r\n    }\r\n  },\r\n  effects: [\r\n    {\r\n      name: `Napraw: ${this.item.name}`,\r\n      icon: this.item.img,\r\n      flags: {\r\n        wfrp4e: {\r\n          applicationData: {\r\n            type: \"document\",\r\n            documentType: \"Item\"\r\n          },\r\n          scriptData: [\r\n            {\r\n              label: this.item.name,\r\n              script: `\r\n              let id = this.item.flags.wfrp4e.fromEffect;\r\n              let effect = this.actor.appliedEffects.find(e => e.id === id);\r\n              this.script.scriptMessage(\"${repaired_message}\");\r\n              await effect.item.delete();\r\n            `,\r\n              trigger: \"deleteEffect\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n      }\r\n  ]\r\n};\r\n\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [extendedTestData], {fromEffect: this.effect.id});\r\n",
  "5sI9iYh5j2nx2XyT": "return !([game.i18n.localize(\"NAME.AnimalCare\"), game.i18n.localize(\"NAME.CharmAnimal\")].includes(args.item?.name) || args.item?.name.includes(game.i18n.localize(\"NAME.Ride\")) || args.item?.name.includes(game.i18n.localize(\"NAME.AnimalTraining\")));",
  "65xE9OV5sA1ZWT7j": "//*** Szuler Kościany\r\nif (args.test.options.diceman && args.test.succeeded)\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n   args.test.result.other.push(`<span class=\"hide-option\"><b>${this.effect.name}</b>: ${ones + args.test.successBonus + args.test.slBonus} PS</span>`)\r\n}",
  "6Aqq4F4Xui923sc6": "// Imbibing this substance grants the user the Painless Creature Trait.\r\nconst hasColdBlooded = this.actor.has(\"Zimnokrwisty\")\r\nif (hasColdBlooded === undefined) \r\n{\r\n  let item = await fromUuid(\"Compendium.wfrp4e-core.items.mCh1KK9jomwFZcLB\");\r\n  this.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect: this.effect.id});\r\n  \r\n  this.script.scriptMessage(`<p><strong>${this.actor.prototypeToken.name}</strong> otrzymuje Cechę Stworzeń \"Zimnokrwisty\" i może odwrócić dowolny nieudany test oparty na Sile Woli.</p>\r\n  <p>Jeśli postać otrzyma Stan Zaskoczenie, ten stan nie znika za pierwszym razem, gdy pownien być usunięty (zwykle na koniec Rundy, gdy ofiara jest zaatakowana).</p>`, \r\n  {whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true })   \r\n}",
  "6BmvV9c03FkfisnE": "// Apply changes when the mask is worn\r\n\r\nif (args.equipped) {  \r\n  this.actor.createEmbeddedDocuments(\"ActiveEffect\", [this.item.effects.contents[1]?.convertToApplied()])  \r\n  this.script.scriptMessage(`<strong>${this.item.name}</strong> została założona przez ${this.actor.name}. <br>\r\n      Otzymano +1 poziom Zepsucia, jeśli test na ekspozycję zakończy się niepowodzeniem, co będzie musiało zostać ręcznie zaaplikowane.<br>\r\n      Jeśli maska jest noszona przez ponad godzinę lub wykorzystane są jej efekty, postać jest wystawiona na @Corruption[moderate]{Przeciętne Zepsucie}`,\r\n      {whisper: ChatMessage.getWhisperRecipients(\"GM\")}) \r\n}\r\n\r\n// Notify of lingering effects when mask is removed\r\nelse if (!args.equipped)\r\n{\r\n    await this.item.effects.contents[0].delete();\r\n    await this.item.update({name : this.item.name += \" (Wykorzystana)\"})\r\n    this.script.scriptMessage(`<strong>${this.item.name}</strong> noszona przez ${this.actor.name} została zdjęta i utraciła swoje właściwości. Jednak jej efekty trwają przez [[1d10+4]] dni, po czym powinny zostać ręcznie usunięte.`, \r\n    {whisper: ChatMessage.getWhisperRecipients(\"GM\")}\r\n    )\r\n    \r\n}",
  "6elUNF58TaiYjxcx": "let test = await this.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  \" - \" + this.effect.name, context : {failure: \"Otrzymano Stan Oszołoemienia\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"stunned\");\r\n}",
  "6EXkbVTRBhKTEu81": "//*** Amputowane oko\r\nif (!args.flags.bothEyes)\r\n{\r\n\targs.flags.bothEyes = true;\r\n\targs.fields.modifier -= 30\r\n}",
  "6Fe8M5MdklKS2olx": "//*** Wrogość (x)\r\nreturn args.characteristic != \"fel\"",
  "6fElmBxTjdAaubbK": "//*** Cios w udo\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"average\"}});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}\r\n",
  "6H6vNjzvMGl2ZqCR": "if (args.totalWoundLoss > 0)\r\n     this.script.scriptMessage(`<b>Ostrze Nurglitch: ${args.actor.name}</b> musi zdać <b>Prosty (+40) Test Odporności</b> lub otrzyma @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Ropiejącą Ranę}`, {whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
  "6hAgggYpNR3r4QWC": "//*** Nienawistne popędy\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Q2MCUrG2HppMcvN0\")\r\nitem = item.toObject()\r\nlet species = args.actor.Species || \" twojego gatunku\"\r\nitem.name = `Wrogość (wszyscy oprócz ${species})`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "6jcTzK1XEuWqAacN": "//*** Stłuczony obojczyk\r\nargs.abort = true;\r\nthis.script.notification(`Nie można używać: ${game.wfrp4e.config.locations[this.effect.getFlag(\"wfrp4e\", \"location\")]}!`, \"error\")",
  "6JrUjs3g5x6bFnj3": "let bite = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")\r\nlet sense = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\")\r\nlet biteData = bite.toObject();\r\nlet senseData = sense.toObject();\r\n\r\nbiteData.system.specification.value = 6 - this.actor.characteristics.s.bonus;\r\nsenseData.name = senseData.name += game.i18n.localize(\"SPEC.Smell\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [biteData, senseData], {fromEffect : this.effect.id})",
  "6kifXp2jXEaQVJsg": "//*** Tarcza Aqshy\r\nlet useWard = await Dialog.wait({\r\n\ttitle : this.effect.name,\r\n\tcontent : `<p>Czy wziąć pod uwagę Ochronę otrzymaną z: <strong>${this.effect.name}</strong>?`,\r\n\tbuttons : {\r\n\t\tyes : {\r\n\t\t\tlabel : \"Tak\",\r\n\t\t\tcallback: () => {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tno : {\r\n\t\t\tlabel: \"Nie\",\r\n\t\t\tcallback: () => {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\nif (useWard)\r\n\targs.ward = 9;",
  "6Mjy0jDqczA8BxhS": "//*** Prosto Między Oczy\r\nreturn ![\"roll\", \"none\"].includes(args.fields.hitLocation)",
  "6mpw9cGseG4W4eyd": "//*** Lodowaty Uścisk\r\nif (this.actor.system.status.advantage.value >= 2)\r\n{\r\n    await this.actor.modifyAdvantage(-2);\r\n    this.script.notification(\"Zmniejszono Punkty Przewag\")\r\n}\r\nelse \r\n{\r\n    return this.script.notification(\"Brak Wymaganych Punktów Przewag!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item)\r\nawait test.roll();",
  "6qUKKep5vhFYmo1J": "//*** Zmysł Magii\r\nreturn args.type == \"channelling\" || args.skill?.name.includes(game.i18n.localize(\"NAME.Channelling\"))",
  "6QZUX7ZrFxOzqI0b": "let regenerate = this.actor.items.getName('Regeneracja')\r\n\r\nif (regenerate)\r\n{\r\n    let effect = regenerate.effects.contents[0]\r\n    let scriptData = effect.getFlag(\"wfrp4e\", \"scriptData\");\r\n    \r\n    scriptData[0].script = scriptData[0].script.replace(\"1d10\", \"1d10 * 2\")\r\n}",
  "6tjn0RH4VyOPFneS": "//*** Mocne Plecy\r\nreturn [\"NAME.Row\", \"NAME.Swim\"].map(i => game.i18n.localize(i)).includes(args.skill?.name);",
  "6uldpFvKOCoW92cC": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.uqGxFOEqeurwkAO3\")\r\nitem = item.toObject()\r\n\r\nitem.system.specification.value = 10;\r\nitem.name += \" (Ogień)\"\r\nsetProperty(item, \"flags.wfrp4e.breath\",  \"fire\")\r\n\r\nItem.create(item, {parent : this.actor, fromEffect: this.effect.id})",
  "6V3qHON3mcerlBlB": "//*** Twarz topielca\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\");\r\n}",
  "6Ws3ieQ7pG5poUyT": "//*** Rzucanie Czarów\r\nif (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create({text : \"Podaj Tradycję Magiczną\", title : this.effect.name}, \"\", Object.values(game.wfrp4e.config.magicLores));\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
  "6xTtJEhRc4OjcDTf": "//*** Klątwa pecha\r\nif (getProperty(args.data, \"system.status.fortune.value\"))\r\n{\r\n\tthis.script.notification(\"Nie można zmienić liczby Punktów Szczęścia!\");\r\n\tdelete args.data.system.status.wounds.value;\r\n}",
  "6ZS1rQLkNvMDO0Fp": "let roll = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\nif (args.test.isFumble && roll == 1 && !args.test.result.misfire)\r\n{\r\n  args.test.result.misfire = game.i18n.localize(\"Misfire\") + \" (Wyrzucono 1)\"\r\n  args.test.result.misfireDamage = eval(parseInt(args.test.result.roll.toString().split('').pop()) + args.test.item.Damage)\r\n}\r\nelse if (args.test.isFumble && roll != 1)\r\n{\r\n    args.test.result.other.push(\"Rzut na Niewybuch: \" + roll)\r\n}\r\n\r\n",
  "7Ck0fkzE4WQ62qVe": "if (args.item.type  == \"skill\" && args.item.name == game.i18n.localize(`NAME.Melee (${game.i18n.localize(\"SPEC.Basic\")})`))\r\n{\r\n     args.item.system.modifier.value += 20;\r\n}",
  "7e8FgQUF2oANANmx": "//*** Cios Poniżej Pasa\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.MeleeBrawling\") || args.item?.weaponGroup?.value == \"brawling\"",
  "7F3miqRA0ceMUBIu": "//*** Defraudant\r\nreturn args.characteristic != \"int\" || args.skill",
  "7F6aGxZJjwxm5e5P": "if (args.test.result.castOutcome == \"failure\")\r\n{\r\n    ValueDialog.create(\"Wprowadź utracone punkty żywotności, aby zyskać liczbę PS\", this.effect.name, \"0\").then(async value => {\r\n        value = Math.clamped(value, 0, 3)\r\n        if (value == 0)\r\n        {\r\n            return;          \r\n        }\r\n        else if (Number.isNumeric(value))\r\n        {\r\n            this.script.scriptNotification(`Utrcone Punkty Żywotności: ${value}`)\r\n            this.actor.modifyWounds(-1 * value)\r\n            await this.item.system.toggleEquip();\r\n            args.test.addSL(value);\r\n            args.test.preData.other.push(`<strong>${this.effect.name}</strong>: +${value} PS`)\r\n        }\r\n    })\r\n}",
  "7f6OsttTzE7Hvzfk": "//*** Skrócenie Dystansu\r\nif (this.actor.statuses.has(\"infighting\")) // Only add +10 if already infighting\r\n    args.prefillModifiers.modifier += 10; \r\n\r\n\r\nargs.prefillModifiers.successBonus += 1; \r\n",
  "7H6wYyJ6cpaoc2QQ": "//*** Korzeń mandragory\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Cool\");",
  "7JW9t8AYSDkkzG2V": "// Apply changes when the mask is worn\r\n\r\nif (args.equipped) \r\n{  \r\n  this.actor.createEmbeddedDocuments(\"ActiveEffect\", [this.item.effects.contents[1]?.convertToApplied()])  \r\n  this.script.scriptMessage(`<strong>${this.item.name}</strong> została założona przez ${this.actor.name}. <br>\r\n      Jeśli maska jest noszona przez ponad godzinę lub wykorzystane są jej efekty, postać jest wystawiona na @Corruption[moderate]{Przeciętne Zepsucie}`,\r\n      {whisper: ChatMessage.getWhisperRecipients(\"GM\")}) \r\n}\r\n\r\n// Notify of lingering effects when mask is removed\r\nelse if (!args.equipped)\r\n{\r\n    await this.item.effects.contents[0].delete();\r\n    await this.item.update({name : this.item.name += \" (Wykorzystana)\"})\r\n    this.script.scriptMessage(`<strong>${this.item.name}</strong> noszona przez ${this.actor.name} została zdjęta i utraciła swoje właściwości. Jednak jej efekty trwają przez [[1d10+4]] dni, po czym powinny zostać ręcznie usunięte.`, \r\n    {whisper: ChatMessage.getWhisperRecipients(\"GM\")}\r\n    )\r\n    \r\n}",
  "7n3SEAGRA5ESK8gV": "//*** Rozbrojenie\r\nargs.options.disarm = true;",
  "7wBWUw05q0igh508": "// Imbibing this substance grants the user the Painless Creature Trait.\r\nconst hasPainless = this.actor.has(\"Nie Czuje Bólu\");\r\nif (hasPainless === undefined) \r\n{\r\n  let item = await fromUuid(\"Compendium.wfrp4e-core.items.wMwSRDmgiF2IdCJr\");\r\n  let data = item.toObject()\r\n  this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n  \r\n  this.script.scriptMessage(\r\n  `<p><strong>${this.actor.prototypeToken.name}</strong>: Otrzymano cechę stworzenia \"Nie Czuje Bólu\". Ten efekt trwa przez godzinę, po czym znika, a wszystkie powstrzymywane dotychczas efekty ran uderzają jednocześnie.</p>\r\n    <p>Uwaga: ten efekt nie chroni przed otrzymaniem trafienia krytycznego lub śmierci. Po prostu pozwala zignorować część efektów wynikających z Ran Krytycznych.</p>`, \r\n    { whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true})\r\n}",
  "7WR2hJjHPhHhHxAq": "//*** Zestaw na zatrucia\r\nlet poisoned = args.actor.hasCondition(\"poisoned\")\r\nif (poisoned)\r\n{\r\n   this.script.notification(`Usunięto liczbę stanów Zatrucia: ${poisoned.conditionValue}`)\r\n   poisoned.delete();  \r\n}\r\nelse\r\n  this.script.notification(`Brak stanów Zatrucia`)",
  "7ZoFUMDG2WJd8RMg": "this.script.scriptMessage(`Otrzymano <strong>${this.effect.name}</strong> Bonus`);",
  "84IB8CWa55XzoAkv": "return ([game.i18n.localize(\"NAME.AnimalCare\"), game.i18n.localize(\"NAME.CharmAnimal\")].includes(args.item?.name) || args.item?.name.includes(game.i18n.localize(\"NAME.Ride\")) || args.item?.name.includes(game.i18n.localize(\"NAME.AnimalTraining\")));",
  "87rrZ3ojHrXa3lCn": "//*** Błogosławieństwo Uzdrawiania\r\nthis.actor.modifyWounds(1)",
  "8araLuwmBq8GKEw3": "let APIgnored = args.AP.layers.reduce((prev, current) => prev + ((current.weakpoints && !current.ignored) ? current.value : 0), 0)\r\n\r\nif (APIgnored)\r\n{\r\n    args.modifiers.ap.ignored += APIgnored\r\n    args.modifiers.ap.details.push(`<strong>${this.effect.name}</strong>: zignorowano PP z wadą \"Wrażliwe Punkty\" (${APIgnored})`)\r\n}",
  "8ByuHnUZ4RNTdGVv": "let strLoss = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\nlet tghLoss = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n\r\nif (!this.actor.has(game.i18n.localize(\"NAME.Undead\")) && !this.actor.has(game.i18n.localize(\"NAME.Daemonic\"))) \r\n{\r\n    this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), { appendTitle: \" - \" + this.effect.name, fields: { difficulty: \"average\" }, context: { failure: `Utracono ${strLoss} punktów Siły oraz ${tghLoss} punktów Wytrzymałości` } }).then(async test => {\r\n        await test.roll();\r\n        if (test.failed) {\r\n            this.actor.update({ \"system.characteristics.s.initial\": this.actor.system.characteristics.s.initial - strLoss, \"system.characteristics.t.initial\": this.actor.system.characteristics.t.initial - tghLoss })\r\n        }\r\n    })\r\n\r\n}\r\nelse {\r\n    this.script.scriptNotification(`<strong>${this.actor.name}</strong> jest odprony na: ${this.effect.name}`)\r\n}\r\n",
  "8GyJgdHVBaLrHCY8": "//*** Zionięcie (Gaz) - Zębacz Jaskiniowy\r\nlet type = this.item.getFlag(\"wfrp4e\", \"breath\")\r\nlet types = {\r\n    none : \"Brak\",\r\n    cold : \"Zimno\",\r\n    corrosion : \"Kwas\",\r\n    fire : \"Ogień\",\r\n    electricity : \"Elektryczność\",\r\n    poison : \"Trucizna\",\r\n    smoke : \"Dym\",\r\n    various : \"Różne\"\r\n}\r\nif (!type)\r\n{\r\n    type = (await ItemDialog.create(ItemDialog.objectToArray(types, this.item.img), 1, \"Wybierz rodzaj Zionięcia\"))[0]?.id;\r\n    this.item.updateSource({\"flags.wfrp4e.breath\" : type})\r\n}\r\n\r\nif (!this.item.name.includes(\"(\") && types[type] && type != \"none\")\r\n{\r\n    this.item.updateSource({name : this.item.name += ` (${types[type]})`, \"system.specification.value\" : this.item.system.specification.value.replace(\"(Typ)\", \"\").trim()})\r\n}",
  "8hIyWDyfbgGAig65": "//*** Percepcja Magiczna\r\nreturn [\"ws\", \"bs\", \"s\", \"t\", \"ag\", \"dex\"].includes(args.characteristic)",
  "8K9tpCwvFC9INk5V": "//*** Dziwnokorzeń\r\nif ([\"t\", \"wp\"].includes(args.characteristic))\r\n{\r\n\targs.fields.modifier += 10;\r\n}\r\nelse if ([\"ag\", \"i\", \"int\"].includes(args.characteristic))\r\n{\r\n\targs.fields.modifier -= 10;\r\n}",
  "8LmUVQxOwTLSeabg": "//*** Shieldsman\r\nreturn args.data.targets.length > 0 || !args.weapon?.system.qualities.value.find(i => i.name == \"shield\") // Should count even if they don't have the skill",
  "8N3Uqjq1ZxPxo4pk": "//*** Pilot Rzeczny\r\nreturn !args.skill?.name?.includes(game.i18n.localize(\"NAME.Lore\"))",
  "8noxHUQKR55Kx1YN": "//*** Czysta Dusza\r\nthis.actor.system.status.corruption.max += 1",
  "8oE0DTzz0krOfFlV": "//*** Włócznia Myrmidii\r\nargs.item.system.qualities.value.push({name : \"magical\"})\r\nargs.item.system.qualities.value.push({name : \"impact\"})\r\n",
  "8RNziYGGb4sp3BGQ": "//*** Drakefire Shot\r\nif (!args.test.weapon?.name.includes(\"Drakefire\"))\r\n{\r\n    args.test.result.misfire = game.i18n.localize(\"Misfire\");\r\n    args.test.result.misfireDamage = (0, eval)(parseInt(args.test.result.roll.toString().split('').pop()) + args.test.weapon.system.Damage);\r\n}",
  "8rq4GL5d5nCn4kO7": "//*** Panaceum\r\nlet caster = this.effect.sourceActor\r\nif (caster)\r\n{\r\n    let healed = caster.characteristics.wp.bonus\r\n    this.actor.modifyWounds(healed);\r\n    this.script.message(`<strong>${this.actor.prototypeToken.name}</strong> Odzyskuje Punkty Żywotności: ${healed}`)\r\n}",
  "8ShLVT0bK1eQpinj": "//*** Przecięte ścięgna\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.k00PimCWkff11IA0\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])",
  "8ThudCYRqkjQIwJH": "//*** Starfire Shafts\r\nif (args.opposedTest.attackerTest.result.critical)\r\n{\r\n   args.actor.addCondition(\"ablaze\")\r\n}",
  "8tyMXDfHR8AJBdDu": "let weakpointsAP = args.AP.layers.filter(i => !i.ignored && i.weakpoints).reduce((ap, layer) => ap + layer.value, 0);\r\n\r\nif (weakpointsAP > 0)\r\n{\r\n    args.modifiers.ap.ignored += weakpointsAP;\r\n    args.modifiers.ap.details.push(`${this.effect.name} - Ignoruje Wrażliwe Punkty (${weakpointsAP})`);\r\n}",
  "8vpAtJ93GIeye1qj": "//*** Młot na czarownice\r\nreturn args.type == \"cast\"",
  "8wG9l4T9fc1bM0TN": "//*** Przerażający wygląd (Guślarstwo)\r\nlet item = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.kJNAY1YRaCy9IgmT\")).toObject();\r\nitem.system.specification.value = 1;\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "8WJsecxdndaHRxxS": "//*** Purpurowy całun\r\nthis.actor.status.addArmour(this.actor.characteristics.wp.bonus, {source: this.effect, magical : true})",
  "8xqYrBIf1Zhlwizg": "const repaired_message = `<p>Zakończono podnoszenie <em>kotwicy</em>.</p>`;\r\nconst test = 'Siła';\r\nconst difficulty = 'vhard';\r\nconst target = 20;\r\n\r\nconst extendedTestData = {\r\n  name: this.item.name,\r\n  type: \"extendedTest\",\r\n  img: this.item.img,\r\n  system: {\r\n    SL: {\r\n      current: 0,\r\n      target: target\r\n    },\r\n    test: {\r\n      value: test\r\n    },\r\n    completion: {\r\n      value: \"remove\"\r\n    },\r\n    difficulty: {\r\n      value: difficulty\r\n    }\r\n  },\r\n  effects: [\r\n    {\r\n      name: `Podnieś kotwicę ${this.item.name}`,\r\n      icon: this.item.img,\r\n      flags: {\r\n        wfrp4e: {\r\n          applicationData: {\r\n            type: \"document\",\r\n            documentType: \"Item\"\r\n          },\r\n          scriptData: [\r\n            {\r\n              label: this.item.name,\r\n              script: `\r\n              let id = this.item.flags.wfrp4e.fromEffect;\r\n              let effect = this.actor.appliedEffects.find(e => e.id === id);\r\n              this.script.scriptMessage(\"${repaired_message}\");\r\n              await effect.item.delete();\r\n            `,\r\n              trigger: \"deleteEffect\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n      }\r\n  ]\r\n};\r\n\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [extendedTestData], {fromEffect: this.effect.id});\r\n",
  "8ZAUBSH9CM9OTpTL": "//*** Basilisk's Baleful Bile\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Perception\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields : {difficulty : \"easy\"}});\r\nawait test.roll();\r\n\r\nif (test.succeeded)\r\n{\r\n    this.actor.addCondition(\"stunned\")   \r\n}\r\nelse if (test.failed)\r\n{\r\n    this.actor.addCondition(\"poisoned\", 2);\r\n}",
  "8zTkDVziBPaNbMQX": "let filters = [\r\n    {\r\n        property : \"type\",\r\n        value : \"spell\"\r\n    },\r\n    {\r\n        property : \"system.lore.value\",\r\n        value : \"petty\"\r\n    }\r\n]\r\n\r\nlet petty = await game.wfrp4e.apps.ItemDialog.createFromFilters(filters, 6, \"Wybierz 6 Zaklęć Magii Prostej\")\r\n\r\n\r\nfilters = [\r\n    {\r\n        property : \"type\",\r\n        value : \"spell\"\r\n    },\r\n    {\r\n        property : \"system.lore.value\",\r\n        value : \"\"\r\n    }\r\n]\r\n\r\nlet arcane = await game.wfrp4e.apps.ItemDialog.createFromFilters(filters, 9, \"Wybierz 9 Zaklęć Magii Tajemnej\")\r\n\r\nlet items = petty.concat(arcane).map(i => i.toObject())\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);",
  "91S2GnBFYFbxmOCK": "//*** Szał Bojowy\r\nthis.actor.characteristics.s.bonus += 1\r\nthis.actor.characteristics.s.calculationBonusModifier -= 1",
  "93K85NnVwjVNXlZq": "//*** Wytwórca (Dowolne Rzemiosło)\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Trade\"));",
  "956dUb5sd6OtbWZR": "//*** Odporny na (Choroby) - Doktor\r\nargs.fields.successBonus++;",
  "96Y1yIH1lRjTs5hL": "//*** Chwiejne morale\r\nif (args.test.succeeded)\r\n    return\r\n\r\nif (args.test.characteristicKey == \"wp\")\r\n     this.actor.addCondition(\"broken\")",
  "9A7rYY3FKi5XLihG": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.5QcrpLQWWrsbKR79\")\r\nlet data = item.toObject();\r\ndata.system.tests.value = data.system.tests.value.replace(\"monet\", \"metalowych przedmiotów\");\r\ndata.system.description.value += \"<p>Ten talent jest rozszerzony również na dowolny metalowy obiekt ze względu na <strong>Metallic Affinity</strong></p>\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "9EVj4bmZJex45Mt7": "//*** Rączy jeleń\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Athletics\");",
  "9eWR4mdaoCSQawDT": "//*** Zerwane mięśnie\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\");\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n",
  "9fK07tqqZyPg7dpx": "//*** Animal Carcass\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields : {difficulty: \"veasy\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.script.notification(\"Otrzymano <strong>Ropiejącą Ranę</strong>\")\r\n    let item = await fromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\")\r\n    this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()])\r\n}\r\nelse \r\n{\r\n  this.script.notification(\"Uniknięto <strong>Ropiejącej Rany</strong>\")\r\n}\r\n",
  "9JnPK1jNUEso7Pv8": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\")\r\nlet data = item.toObject();\r\ndata.name += ` (${game.i18n.localize(\"SPEC.Smell\")})`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "9MDi3ok9gPwtbALf": "//*** Złamanie korpusu (pomniejsze)\r\nargs.actor.details.move.value /= 2",
  "9MwRUzRinhq1IjhG": "//*** # Macki\r\nargs.actor.addCondition(\"grappling\");",
  "9ob2lPnk3PDot9Tx": "//*** Zguba demonów\r\nthis.actor.addCondition(\"blinded\", this.effect.sourceTest.result.SL)",
  "9qWUuEF8F5nehF1y": "//*** Umagicznienie broni\r\nargs.item.system.qualities.value = args.item.system.qualities.value.concat([{name : \"magical\"}, {name : \"unbreakable\"}])\r\nargs.item.system.damage.value += ` + ${this.effect.sourceActor.system.characteristics.wp.bonus}`",
  "9RFoasDcFnYZ1txR": "//*** Ogromne oko\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Perception\");",
  "9VfeubiCV83LN9iY": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\")\r\nlet data = item.toObject();\r\ndata.name += ` (Podczas Szarży)`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "9WZa63lr0K3SsP4G": "//*** Katya's Cordial\r\nlet sourceItem = this.effect.sourceItem;\r\n\r\nif (sourceItem)\r\n{\r\n\tthis.actor.applyEffect({effectUuids : [sourceItem.effects.contents[2].uuid]})\r\n\tthis.script.notification(\"Applied after effects\");\r\n}",
  "9Yn9uViEjcuaESJ2": "if (this.item.getFlag(\"wfrp4e\", \"failedCool\"))\r\n{\r\n    this.item.name += \" (Brak PP)\"\r\n    this.item.system.AP = {\r\n        \"head\": 0,\r\n        \"lArm\": 0,\r\n        \"rArm\": 0,\r\n        \"lLeg\": 0,\r\n        \"rLeg\": 0,\r\n        \"body\": 0\r\n      }\r\n}",
  "9ZFPDCk8M2TQxh7x": "//*** Mądrość sowy\r\nargs.fields.modifier += 20\r\n",
  "a02tlRCXpaoaDjSN": "let careers = await game.wfrp4e.utility.findAll(\"career\", \"\", true);\r\ncareers.forEach(c => {\r\n    if (!c.id)\r\n    {\r\n        c.id = c._id;\r\n    }\r\n});\r\nlet choice = await ItemDialog.create(careers, 1, \"Wybierz profesję dla 'Podwójne Życie'\");\r\nif (choice[0])\r\n{\r\n    let career = await fromUuid(choice[0].uuid);\r\n    let data = career.toObject();\r\n    setProperty(data, \"flags.wfrp4e.doubleLife\", true);\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n    this.effect.updateSource({name : this.effect.name + ` (${data.name})`})\r\n}",
  "A0OK0qAMmnf8iNJf": "if (args.test.result.SL < 0)\r\n{\r\n    this.script.scriptMessage(`Otrzymano punkty zepsucia: ${Math.abs(args.test.result.SL)}`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    if (args.test.failed && this.actor.type == \"character\")\r\n    {\r\n        this.actor.update({\"system.status.corruption.value\" : parseInt(this.actor.status.corruption.value) + Math.abs(args.test.result.SL)})\r\n    }\r\n}",
  "A1odAcuRbq9797ZB": "let choice1 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Biała (Podstawowa)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 10\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\nlet choice2 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Biała (Drzewcowa)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 10\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\n\r\nlet choice = await Dialog.wait({\r\n    title : \"Choice\",\r\n    content : \r\n    `<p>\r\n    Wybierz Umiejętność, której chcesz używać\r\n    </p>\r\n    <ol>\r\n    <li>Broń Biała (Podstawowa)</li>\r\n    <li>Broń Biała (Drzewcowa)</li>\r\n    </ol> \r\n    `,\r\n    buttons : {\r\n        1 : {\r\n            label : \"Podstawowa\",\r\n            callback : () => {\r\n                return choice1;\r\n            }\r\n        },\r\n        2 : {\r\n            label : \"Drzewcowa\",\r\n            callback : () => {\r\n                return choice2;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nlet updateObj = this.actor.toObject();\r\nlet items = []\r\nfor (let c of choice)\r\n{\r\n    let existing \r\n    if (c.type == \"skill\")\r\n    {\r\n        existing = updateObj.items.find(i => i.name == c.name && i.type == c.type)\r\n        if (existing && c.diff?.system?.advances?.value)\r\n        {\r\n            existing.system.advances.value += c.diff.system.advances.value\r\n        }\r\n    }\r\n\r\n    if (!existing)\r\n    {\r\n        let item = await game.wfrp4e.utility.find(c.name, c.type)\r\n        if (item)\r\n        {\r\n            item = item.toObject()\r\n            equip(item);\r\n                items.push(mergeObject(item, (c.diff || {})))\r\n        }\r\n        else\r\n            ui.notifications.warn(`Nie odnaleziono umiejętności ${c.name}`, {permanent : true})\r\n    }\r\n\r\n}\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "A3fvV69RS1lYgma0": "if (this.actor.type == \"character\")  \r\n  this.actor.corruptionDialog(\"minor\")\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\nif(test.failed)\r\n{\r\n    await this.actor.addCondition(\"unconscious\");\r\n    let secondTest = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {fields : {difficulty : \"easy\"}, skipTargets: true, appendTitle :  \" - Rozpacz\"})\r\n    await secondTest.roll();\r\n    if(secondTest.failed)\r\n    {\r\n         await this.actor.addCondition(\"fatigued\");\r\n    }\r\n}",
  "A3MW0UksYrHGa0Qw": "//*** Amputowana dłoń\r\nreturn [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic);",
  "a4Aza4a9v8JMU8dC": "const talents = await Promise.all([\"Szał Bojowy\", \"Odporność na Magię\"].map(game.wfrp4e.utility.findTalent))\r\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {fromEffect : this.effect.id})",
  "A6DcKPzAGntzSCil": "//*** Winded\r\nlet roll = await new Roll(\"1d10\").roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
  "a6gacHsvgwtsIFSQ": "//*** Mól Książkowy\r\nif (args.test.item && args.test.item.name == game.i18n.localize(\"NAME.Research\"))\r\n    args.test.preData.canReverse = true",
  "a7pEvCycVnFBXGAQ": "//*** Strefa zamętu\r\nlet test = await this.actor.setupCharacteristic(\"i\", {skipTargets: true, appendTitle :  \" - Oszołomienie\", fields : {difficulty : \"easy\"}})\r\nawait test.roll();\r\n\r\nif (!test.succeeded)\r\n{\r\n\tthis.actor.addCondition(\"stunned\");\r\n}",
  "a8i0sA1RBnD8nHZt": "//*** Kuźnia Chamonu\r\nlet caster = this.effect.sourceActor\r\nlet targetedItem = this.actor.items.get(this.effect.flags.wfrp4e.itemTargets[0])\r\n\r\nlet qualities = foundry.utils.deepClone(game.wfrp4e.config.itemQualities);\r\nlet flaws = foundry.utils.deepClone(game.wfrp4e.config.itemFlaws);\r\n\r\nif (targetedItem.type == \"weapon\")\r\n{\r\n    foundry.utils.mergeObject(qualities, game.wfrp4e.config.weaponQualities)\r\n    foundry.utils.mergeObject(flaws, game.wfrp4e.config.weaponFlaws)\r\n}\r\nelse if (targetedItem.type == \"armour\")\r\n{\r\n    foundry.utils.mergeObject(qualities, game.wfrp4e.config.armorQualities)\r\n    foundry.utils.mergeObject(flaws, game.wfrp4e.config.armorFlaws)\r\n}\r\n\r\nfor(let q in qualities)\r\n{\r\n    // If the weapon already has a flaw, don't put it in the dialog\r\n    if (targetedItem.system.properties.qualities[q])\r\n    {\r\n        delete qualities[q]\r\n    }\r\n}\r\nfor(let f in flaws)\r\n{\r\n    // If a weapon doesn't have a flaw, don't put it in the dialog\r\n    if (!targetedItem.system.properties.flaws[f])\r\n    {\r\n        delete flaws[f]\r\n    }\r\n}\r\n            \r\nlet added = await ItemDialog.create(ItemDialog.objectToArray(qualities), \"unlimited\", \"Wybierz Zalety do dodania\");\r\nlet removed = []\r\nif (!foundry.utils.isEmpty(flaws))\r\n{\r\n    removed = await ItemDialog.create(ItemDialog.objectToArray(flaws), \"unlimited\", \"Wybierz Wady do usunięcia\");\r\n}\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.propertiesChanged\" : {added : added.map(i => i.id), removed : removed.map(i => i.id)}})\r\n",
  "a8RabrnJ08O07rDX": "//*** Czarny lotos\r\nif (args.totalWoundLoss > 0)\r\n{\r\n    // I'm assuming the endurance test specified is for the end-round check\r\n    await args.actor.addCondition(\"poisoned\", 2);\r\n}",
  "aAvJrAKLzXhS9qN6": "//*** Wspinacz\r\nreturn args.item?.name == game.i18n.localize(\"NAME.Climb\")",
  "abLWYtNTu1UVDQAs": "//*** Clutch of Eyes\r\nif (args.opposedTest.result.hitloc.value == this.effect.flags.wfrp4e.location) // e.g. 'head', rLeg, 'lArm'\r\n{\r\n     this.script.message(`Otrzymano Stan @Condition[Oślepienie] ponieważ trafiono w: <strong>${this.item.name}</strong>`);\r\n     this.actor.addCondition(\"blinded\");\r\n}",
  "ACgKpKrEEHoNGG0h": "return !args.skill?.name.includes(\"Splatanie Magii\") && args.type != \"channelling\"",
  "ACtDCTLZXmd5uXjX": "let halve;\r\nif (args.opposedTest.attackerTest.item?.type != \"spell\")\r\n{\r\n    halve = await Dialog.confirm({title : this.effect.name, content : \"Obrażenia obniżone o połowę? (Zmniejsza obrażenia, które nie pochodzą od ognia, zimna i magii)\"})\r\n}\r\nelse\r\n{\r\n    halve = false;\r\n}\r\n\r\nif (halve)\r\n{\r\n    args.totalWoundLoss /= 2;\r\n    args.modifiers.other.push({label : this.effect.name, details : \"Zmniejszono o Połowę\", value : \"× 0.5\"})\r\n}",
  "aCVtaW8ag1WibcAr": "//*** Wyssanie\r\nargs.attacker.modifyWounds(1)\r\nthis.script.message(`<strong>${args.attacker.prototypeToken.name}</strong> Odzyskuje 1 Punkt Żywotności.`)",
  "Adgs6Zs0FdefO6qx": "//*** Starsza Pilotka\r\nif (args.test.options.pilot && args.test.result.reversed)\r\n{\r\n\targs.test.data.result.SL = \"+\" + Math.min(1, Number(args.test.data.result.SL))\r\n\targs.test.result.other.push(`<b>${this.effect.name}</b>: PS ograniczone do 1`)\r\n}",
  "afdmOvPGMpEdZvCb": "//*** Amputowane ucho\r\nreturn (args.skill?.name == game.i18n.localize(\"NAME.Perception\") || args.characteristic == \"fel\")",
  "Ah2wyywkL8hjJNXM": "//*** Leczenie\r\nargs.options.healWounds = true;",
  "ahbA7o5G9dzMFl76": "//*** Regeneracja\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.SfUUdOGjdYpr3KSR\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "AHZ8f7dfN8jNsYk6": "//*** Snajper\r\nlet token = this.actor.getActiveTokens()[0];\r\nlet target = args.data.targets[0];\r\nlet weapon = args.weapon;\r\n\r\nif(!target || !token)\r\n{\r\n    return;\r\n}\r\n\r\nlet distance = canvas.grid.measureDistances([{ ray: new Ray({ x: token.center.x, y: token.center.y }, { x: target.center.x, y: target.center.y }) }], { gridSpaces: true })[0]\r\nlet currentBand\r\n\r\nfor (let band in weapon.range.bands) \r\n{\r\n  if (distance >= weapon.range.bands[band].range[0] && distance <= weapon.range.bands[band].range[1]) \r\n  {\r\n    currentBand = band;\r\n    break;\r\n  }\r\n}\r\n\r\nreturn [game.i18n.localize(\"Long Range\"), game.i18n.localize(\"Extreme\")].includes(currentBand)",
  "AI6bFrjWk4NH9FBd": "//*** Pochwycenie (Zwierzęta)\r\nthis.actor.addCondition(\"entangled\", this.effect.sourceTest.result.overcast.usage.other.current)",
  "aMHGjWyn6BXCI4pw": "//*** Grzybki Szalonego Kapelusznika\r\nlet frenzy = await fromUuid(\"Compendium.wfrp4e-core.items.Item.hXcfygzujgyMN1uI\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [frenzy], {fromEffect: this.effect.id})",
  "AMI2wDJqsIZsoq1e": "if (args.opposedTest.result.differenceSL >= 0 && args.opposedTest.result.differenceSL <= 2 && args.opposedTest.result.winner == \"attacker\")\r\n{ \r\n    this.script.scriptMessage(`Emituje chmurę śmierdzącego proszku. Aktywuj Efekt <strong>Kary do Ogłady</strong> na @UUID[${this.actor.uuid}].`, {blind : true, whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "AmpDbT0BkDHeaRzf": "//*** Zimowy chłód\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\");\r\nlet data = item.toObject();\r\ndata.system.specification.value = 1;\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "AMxezwtYnWCF6Oza": "return args.skill?.name == \"Broń Zasięgowa (Prochowa)\"",
  "ApaLcUhuty3EzJoP": "let fortunePoints = this.effect.sourceTest.result.overcast.usage.other.current\r\nlet current = this.actor.status.fortune.value\r\n\r\nthis.actor.update({\"system.status.fortune.value\" : fortunePoints + current})\r\n\r\nthis.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b> Punkty Szczęścia wzrosły z ${current} do ${fortunePoints + current}`)",
  "AqHLHp4kH6KULk3e": "//*** Grzybki Szalonego Kapelusznika\r\nif (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n    let effectData = this.item.effects.contents[0].convertToApplied();\r\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.notification(\"Nic nie zostało!\", \"error\")\r\n}",
  "AS7CstSosuCrwZ19": "//*** Lampa sztormowa\r\nthis.actor.getActiveTokens().forEach(t => t.document.update({light : {\r\n      \"dim\": 20,\r\n      \"bright\": 10,\r\n      \"angle\": 360,\r\n      \"alpha\": 0.4,\r\n      \"animation\": {\r\n          \"speed\": 3,\r\n          \"intensity\": 3,\r\n          \"type\": \"torch\",\r\n      },\r\n      \"color\": \"#ffcc66\",\r\n  }}));",
  "AV2Kj6jgmIc45zKi": "//*** Płytowe Nagolenniki\r\nreturn args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));",
  "AWgZnm9xLyIWCDnp": "//*** Krzepki\r\nlet robust = args.modifiers.other.find(i => i.key == \"robust\")\r\nif (robust)\r\n{\r\n\trobust.value--;\r\n}\r\nelse \r\n{\r\n\targs.modifiers.other.push({key: \"robust\", label : this.effect.name, value : -1})\r\n}\r\n",
  "ayIbw2Vw2t9xg33P": "//*** Strzaskana klatka piersiowa\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.EaqlLRQigwnsEAXX\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect: this.effect.id})",
  "AyNb5sj6FD2Z3Q5T": "//*** Odcięte ramię\r\nthis.actor.addCondition(\"dead\")\r\nthis.actor.setWounds(0);\r\nthis.script.message(await game.wfrp4e.tables.formatChatRoll(\"scatter\"))",
  "AyS3iLljxHRKsHg4": "//*** Żar serc\r\nlet broken = this.actor.hasCondition(\"broken\");\r\nlet fatigued = this.actor.hasCondition(\"fatigued\");\r\nawait broken?.delete();\r\nawait fatigued?.delete()\r\nlet drilled = await fromUuid(\"Compendium.wfrp4e-core.items.Item.J9MK0AIaTbvd5oF6\")\r\nlet fearless = await fromUuid(\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\")\r\nlet stout = await fromUuid(\"Compendium.wfrp4e-core.items.Item.IogM5gnsoOX63w7j\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [drilled, fearless, stout], {fromEffect : this.effect.id})",
  "AZGXrZOQ4EzjxRL9": "//*** Ukojenie Rhyi\r\nreturn true;",
  "b1zMefdoZYtzCm7i": "//*** Prosto Między Oczy\r\nreturn [\"roll\", \"none\"].includes(args.fields.hitLocation) || args.item?.attackType != \"ranged\"",
  "b2WaqRna5CFXmbDG": "//*** Rączy jeleń\r\nargs.options.stag = true;",
  "b5prg1FLjCAvBjLy": "//*** Zgruchotana dłoń\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.zyocWSzEZEC826NS\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])\r\n\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty: \"hard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    await this.actor.addCondition(\"prone\")\r\n    await this.actor.addCondition(\"stunned\")\r\n}",
  "B6ZbY3bxTPg6nCng": "//*** Łapówkarz\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Bribery\");",
  "B87v1twc65qyvUWi": "//*** Podbite oko\r\nargs.fields.modifier += 10 * this.effect.conditionValue",
  "B950b0XnIUYCdVwu": "let test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\n\r\nif (test.succeeded)\r\n{\r\n    if (args.totalWoundLoss <= parseInt(test.result.SL))\r\n    {\r\n        args.abort = `<strong>${this.effect.name}</strong>: Atak odbity i odwzajemniony`\r\n    }\r\n    args.modifiers.other.push({label : this.effect.name, value : -1 * parseInt(test.result.SL)})\r\n}",
  "bBdXzBmxgFFBwMMS": "//*** Strzał Przebijający\r\nif(args.opposedTest.attackerTest.item?.isRanged && args.applyAP && !args.sureShot)\r\n{\r\n   if (args.modifiers.ap.value)\r\n   {\r\n    args.sureShot = true;\r\n    args.modifiers.ap.details.push(`${this.effect.name} (Ignoruje ${this.item.Advances})`)\r\n    args.modifiers.ap.ignored += this.item.Advances;\r\n   }\r\n}",
  "BD7bVTU2pVoRSRBe": "let symptoms = {\r\n    convulsions : \"Konwulsje\",\r\n    coughsandsneezes : \"Kaszel i Katar\",\r\n    fever : \"Gorączka\",\r\n    flux : \"Biegunka\",\r\n    nausea : \"Mdłości\"\r\n}\r\n\r\nlet roll = await (new Roll(`max(0, 1d10 - ${this.actor.characteristics.wp.bonus})`).roll())\r\nroll.toMessage(this.script.getChatData());\r\n\r\nlet choices = await ItemDialog.create(ItemDialog.objectToArray(symptoms), roll.total, \"Wybierz Symptom\");\r\n\r\nif (choices.length)\r\n{\r\n    let symptomEffects = duplicate(game.wfrp4e.config.symptomEffects)\r\n    let added = []\r\n    for(let choice of choices)\r\n    {\r\n        let symptom = symptomEffects[choice.id];\r\n        symptom.origin = this.effect.uuid;\r\n        added.push(symptom);\r\n    }\r\n    this.actor.createEmbeddedDocuments(\"ActiveEffect\", added)\r\n}\r\nelse \r\n{\r\n    this.effect.delete();\r\n}\r\n\r\n",
  "bEVlJOOA1kLlzpWx": "let characteristics = {\r\n    \"ws\" : 10,\r\n    \"bs\" : 0,\r\n    \"s\" : 5,\r\n    \"t\" : 15,\r\n    \"i\" : 20,\r\n    \"ag\" : 15,\r\n    \"dex\" : 20,\r\n    \"int\" : 35,\r\n    \"wp\" : 30,\r\n    \"fel\" : 10\r\n}\r\nlet skills = [\"Splatanie Magii\", \"Opanowanie\", \"Unik\", \"Występy (Gawędziarstwo)\", \"Intuicja\", \"Język (Magiczny)\", \"Dowodzenie\", \"Wiedza (Magia)\", \"Wiedza (Teologia)\", \"Percepcja\"]\r\nlet skillAdvancements = [20, 25, 20, 25, 30, 25, 15, 20, 10, 30]\r\nlet talents = [\"Zmysł Magii\", \"Magia Tajemna (Dowolna Tradycja)\", \"Precyzyjne Inkantowanie\", \"Precyzyjne Inkantowanie\", \"Szczęście\", \"Wykrywanie Magii\", \"Groźny\", \"Magia Prosta\", \"Percepcja Magiczna\", \"Szósty Zmysł\"]\r\nlet trappings = [\"Broń ręczna\", \"Kostur\", \"Rytualna szata zawierająca wiele ornamentów i zdobień\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        items.push({name : trapping, type : \"trapping\", \"system.trappingType.value\" : \"clothingAccessories\"})\r\n        //ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "bhXUW7IJtEaUGAoV": "//*** Fractured Bone\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();  \r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\");\r\n}\r\n  ",
  "bLkt8VpTTPoTxW0W": "//*** Ziejąca rana korpusu\r\nif (args.opposedTest.result.hitloc.value == \"body\" && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n    this.script.notification(\"Dodano Stan Krwawienie\")\r\n}\r\n",
  "bMEFHPCei2evnZZw": "// Victims that take at least 1 Wound from a Fell Dagger\r\n// immediately take a Poisoned Condition \r\n// resisted with a Difficult (-10) Endurance Test. \r\n\r\n// TODO: Add Venom strength to message\r\n\r\nif (args.totalWoundLoss > 0) \r\n{\r\n  args.actor.addCondition(\"poisoned\")\r\n  this.script.scriptMessage(`\r\n      <strong>${this.effect.name}</strong>:<br>\r\n      <strong>${args.actor.name}</strong>: otrzymano Stan @Condition[Zatrucie], który może zostać odparty <strong>Wymagającym (-10) Testem Odporności </strong>.`, \r\n      {whisper: ChatMessage.getWhisperRecipients(\"GM\")})\r\n}\r\n",
  "brNRqfpPqD2Ki0cM": "//*** Klątwa pecha\r\nargs.prefillModifiers.modifier -= 10",
  "bRtZH0xRh8dgqMeW": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = 7 - this.actor.characteristics.s.bonus\r\ndata.name = item.name.replace(\"()\", \"\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "btPrQkGRKUkhNe3N": "//*** Aptekarz\r\nreturn args.skill?.name == \"Rzemiosło (Aptekarstwo)\";",
  "BtyFhdGMKiMamGhM": "let test = await args.actor.setupSkill(\"Unik\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nlet damage = parseInt(this.effect.sourceTest.result.SL)\r\n\r\nif (test.succeded)\r\n{\r\n   damage =  damage + 8 - parseInt(test.result.SL)\r\n}\r\n\r\nelse \r\n{\r\n   damage = damage + 10\r\n   this.actor.addCondition(\"entangled\", 3)\r\n}\r\nthis.script.scriptMessage(await this.actor.applyBasicDamage(damage, {loc : \"roll\", suppressMsg: true}))\r\n",
  "bWr8leucbWslBCYG": "//*** Wspinacz\r\nreturn args.characteristic != \"s\"",
  "bwtQOSWn120NICkf": "//*** Pole cierniowe\r\nlet test = await this.actor.setupCharacteristic(\"ag\", {fields : {difficulty : \"hard\"}});\r\nawait test.roll();\r\n\r\nif (test.failed)\r\n{\r\n   await this.actor.addCondition(\"bleeding\")\r\n   await this.actor.addCondition(\"entangled\")\r\n}",
  "bwx9wuEOJPF7btD1": "//*** Wyczucie Kierunku\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Navigation\");",
  "ByhEa1BxQOyrOmqg": "//*** Podbite oko\r\nreturn args.item?.attackType == 'melee'",
  "bzaoWcieMFaU5B5l": "//*** Amputowany palec u ręki\r\nreturn !this.actor.flags.useless[this.item.system.location.key] || [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic)",
  "BzDLuxBNw1QNIacg": "//*** Zdradliwość Tzeentcha\r\nif (args.item.type == \"skill\")\r\n   args.item.system.advances.value = 0\r\n\r\nif (args.item.type == \"talent\")\r\n    args.item.system.tests.value = \"\"\r\n\r\nif (args.item.type == \"weapon\") \r\n   args.item.system.qualities.value = []",
  "c3KA1knL2NYNUEww": "//*** Numizmatyka\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Evaluate\");",
  "cAioHYtlxuOCwRLh": "//*** Incendiary\r\nlet ablaze = Number(args.opposedTest.attackerTest.result.SL) + 1\r\nargs.actor.addCondition(\"ablaze\", ablaze)",
  "CCK1iIfPmB398ziT": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Athletics\"), {fields : {difficulty : \"difficult\"}, skipTargets: true, appendTitle :  \" - Poruszanie się\"})\r\ntest.roll();",
  "CDASLC4fWKSGQKf9": "//*** Uczta kruków\r\nlet blinded = this.actor.hasCondition(\"blinded\");\r\nif (blinded?.getFlag(\"wfrp4e\", \"flockOfDoom\"))\r\n{\r\n    blinded.delete();\r\n}",
  "cDBhmHn5kjgWBAlT": "//*** Oplątanie\r\nlet num = (this.effect.sourceTest.result.overcast.usage.other.current || 1)\r\n\r\nthis.actor.addCondition(\"entangled\", num)",
  "ch5SD2XOQfcYo0X5": "//*** Zabójca\r\nif (args.sizeDiff <= -2 && args.opposedTest.attackerTest.result.critical)\r\n        args.damageMultiplier = Math.abs(args.sizeDiff)\r\n\r\n      let sBonusDiff = args.opposedTest.defenderTest.actor.characteristics.t.bonus - args.opposedTest.attackerTest.actor.characteristics.s.bonus\r\n     let weapon = args.opposedTest.attackerTest.item\r\n      if (sBonusDiff > 0 && weapon && weapon.damage.value.includes(\"SB\"))\r\n      {\r\n        args.damage += sBonusDiff\r\n        args.breakdown.other.push({label : this.effect.name, value : sBonusDiff});\r\n      }",
  "CHnaBPHk6HdFS512": "let arm = await fromUuid(\"Compendium.wfrp4e-core.items.MnMZv7ZXoRqoH9dS\");\r\nlet leg = await fromUuid(\"Compendium.wfrp4e-core.items.k00PimCWkff11IA0\");\r\n\r\nlet choice = await ItemDialog.create([arm, leg], 1, \"Wybierz Kończynę\")\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", choice, {fromEffect: this.effect.id})",
  "chUpiI3el8IO8MSs": "//*** Wampiryczny\r\nif (args.opposedTest.attackerTest.item?.name.includes(\"Ugryzienie\"))\r\n{\r\n    let woundsGained = args.totalWoundLoss;\r\n    this.script.message(`Otrzymano Rany: ${woundsGained}`, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })\r\n    this.actor.modifyWounds(woundsGained)\r\n}",
  "CiFeduksZJ6PRulx": "//*** Woltyżerka\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Ride\")} (${game.i18n.localize(\"SPEC.Horse\")})` || (args.options.dodge && this.actor.isMounted);",
  "CIxZYkHggBQ6EsHP": "this.script.scriptNotification(\"Efekt wykorzystany!\");\r\nthis.effect.delete();",
  "cJFDnq1HI4gXWcJo": "//*** Ochrona\r\nif (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create({text: \"Podaj Wartość Cechy Stworzenia Ochrona\", title : this.effect.name});\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
  "Cjj4iLkdY1NaZRCi": "//*** Niebiańska tarcza\r\nif ((args.opposedTest.attackerTest.item && args.opposedTest.attackerTest.item.isMelee) || (args.opposedTest.attackerTest.item && !args.opposedTest.attackerTest.item.name.includes(\"Broń Zasięgowa\")))\r\n{\r\n    let choice = await Dialog.wait({\r\n        title: this.effect.name,\r\n        content: `<p><strong>${this.effect.name}</strong>: Zadać obrażenia atakującemu?`,\r\n        buttons: {\r\n            yes: {\r\n                label: \"Tak\",\r\n                callback: () => {\r\n                    return true;\r\n                }\r\n            },\r\n            no: {\r\n                label: \"Nie\",\r\n                callback: () => {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    if (choice)\r\n    {\r\n        this.script.message(await args.attacker.applyBasicDamage(this.actor.system.characteristics.wp.bonus, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true}));\r\n    }\r\n}",
  "cK1Jysfu5IMUUH0C": "//*** Lśniąca szata\r\nif (!args.ward)\r\n{\r\n\targs.ward = (this.effect.getFlag(\"wfrp4e\", \"ward\") || 0);\r\n\tif (args.wardRoll >= args.ward && args.ward > 3)\r\n    {\r\n        let newWard = Math.max(3, args.ward - 1)\r\n        this.script.message(\"<strong>Ochrona</strong> zwiększona do: \" + newWard)\r\n        this.effect.setFlag(\"wfrp4e\", \"ward\", newWard)\r\n    }\r\n\r\n}",
  "CkE8NZOhzPkuRrKJ": "//*** Przecięte ścięgno\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.MnMZv7ZXoRqoH9dS\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])\r\n\r\n\r\n\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty: \"hard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n\tthis.actor.addCondition(\"unconscious\")\r\n}",
  "CM43kvw5mIIE1OsB": "//*** Amputowany palec u ręki\r\nlet key = this.item.system.location.key\r\n\r\nlet lostFingers = this.actor.flags.useless[key] || 0;\r\n\r\nlostFingers += 1\r\n\r\nthis.actor.flags.useless[key] = lostFingers;\r\n\r\nif (lostFingers >= 4)\r\n{\r\n\tthis.actor.flags.useless[key[0] + \"Arm\"] = true;\r\n}",
  "CMUFtmNA1kkD1ay7": "//*** Lampa sztormowa\r\nthis.actor.getActiveTokens().forEach(t => t.document.update({light : {\r\n      \"dim\": 30,\r\n      \"bright\": 20,\r\n      \"angle\": 90,\r\n      \"alpha\": 0.6,\r\n      \"animation\": {\r\n          \"speed\": 3,\r\n          \"intensity\": 3,\r\n          \"type\": \"torch\",\r\n      },\r\n      \"color\": \"#ffcc66\",\r\n  }}));",
  "CoImIH9OCMx9DfQZ": "//*** Złamana szczęka\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.nbhn2wX35b7Jrcbg\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Szczęka\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "cOuukVo8WakDZIUj": "//*** Rapid Reload\r\nargs.prefillModifiers.slBonus += 1",
  "csLKDJKZaUK9vwLT": "//*** Cios w krzyż\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.7rBhIRo96Mydo0Cv\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Plecy\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n",
  "cTYNaKbepMwqYsZ8": "//*** Zatrucie Krwi\r\nlet difficulty = \"\"\r\nif (this.effect.name.includes(\"Umiarkowany\"))\r\n    difficulty = \"easy\"\r\nelse if (this.effect.name.includes(\"Poważny\"))\r\n    difficulty = \"average\"\r\nelse\r\n    difficulty = \"veasy\"\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {context : {failure : this.actor.name + \" umiera z powodu Uwiądu\"}, fields: {difficulty}, appendTitle : \" - Uwiąd\"})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"dead\");\r\n}\r\n",
  "cUnbADgOQ4fMKgrH": "//*** Nienawiść (Grupa)\r\nlet group\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.5hH73j2NgPdsLCZN\");\r\nlet data = item.toObject();\r\n\r\nif (this.item.name.includes(\"(\"))\r\n{\r\n\tgroup = this.item.parenthesesText\r\n}\r\n\r\nelse \r\n{\r\n\tgroup = await ValueDialog.create({text : \"Wybierz grupę dażoną nienawiścią\", title : \"Obiekt Nienawiści\"})\r\n\r\n\tthis.item.updateSource({name : this.item.name + ` (${group})`, \"system.tests.value\" : this.item.system.tests.value.replace(\"Grupa\", group)})\r\n\tthis.effect.updateSource({name : this.effect.name + ` (${group})`})\r\n}\r\n\r\n\r\ndata.name = data.name.replace(\"x\", group);\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id});",
  "cuqCtQsfLBBAGjnu": "//*** Odporność na Magię\r\nargs.fields.slBonus -= (Number(this.item.specification.value) || 0)",
  "cV9JiAgUPOeUHKnS": "//*** Ruchliwe dłonie\r\nargs.fields.successBonus++;\r\nif (args.skill?.name != game.i18n.localize(\"NAME.SleightOfHand\"))\r\n{\r\n    args.fields.modifier += 10;\r\n}",
  "CW5Vlr57OaMkKJ8Q": "//*** Wymiot - Troll\r\nif (this.actor.system.status.advantage.value >= 3)\r\n{\r\n    this.actor.modifyAdvantage(-3);\r\n    this.script.notification(\"Odjęto Punkty Przewag\")\r\n}\r\nelse \r\n{\r\n    return this.script.notification(\"Niewystarczająca liczba Punktów Przewag!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item)\r\nawait test.roll();",
  "CWNGrg7se91RC95g": "if (args.totalWoundLoss > 0) {\r\n  args.opposedTest.result.other.push(\r\n  `@Corruption[minor]{Wystawienie na Umiarkowane Zepsucie}`\r\n  )\r\n  this.script.scriptMessage(`<strong>${this.effect.name}</strong>: \r\n      @Corruption[moderate]{Wystawienie na Umiarkowane Zepsucie} <br/>\r\n      <strong>${args.actor.prototypeToken.name}</strong> musi wykonać test na \r\n      <strong>Zepsucie (Umiarkowane)</strong>`, \r\n      {whisper: ChatMessage.getWhisperRecipients(\"GM\")}\r\n  )\r\n}",
  "cysQDjlDzT8HdNeo": "//*** Gunner\r\n args.prefillModifiers.slBonus += 1",
  "d29mu8vRt9AQUm0L": "//*** Idylla\r\nthis.actor.characteristics.i.value = Math.min(this.actor.characteristics.i.value, 10);\r\nthis.actor.characteristics.i.bonus = 1;\r\n\r\nfor(let skill of this.actor.itemTypes.skill.filter(i => i.system.characteristic.value == \"i\"))\r\n{\r\n    skill.system.total.value= Math.min(skill.system.total.value, 10)\r\n}",
  "d6mVm08o8SeklAcW": "//*** Magiczna ochrona (Demonologia)\r\nthis.actor.system.status.ward.value = 9;",
  "d9iU08yvqcffF026": "//*** Stłuczony obojczyk\r\nreturn args.weapon.system.usesHands.includes(this.effect.getFlag(\"wfrp4e\", \"location\"))",
  "dAMtbn3uQwF8KpKU": "//*** Etykieta (Grupa Społeczna)\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Charm\") && args.skill?.name != game.i18n.localize(\"NAME.Gossip\");",
  "DANLE5HxrkTNelhl": "//*** Grzybki Szalonego Kapelusznika\r\nargs.wounds += 4;",
  "DBafsY1HrclJRTtA": "//*** Młot na czarownice\r\nreturn args.type != \"cast\"",
  "dbOSvpgcPjsc2uvq": "//*** Mądrość sowy\r\nlet menacing = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.0hn6UaKq8CoZP2zD\")).toObject();\r\nlet sense = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")).toObject();\r\n\r\nsense.name += \" (Wzrok)\";\r\nsense.system.tests.value = sense.system.tests.value.replace(\"Zmysł\", \"Wzrok\")\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [menacing, sense], {fromEffect : this.effect.id})",
  "DcSJNRBXE9ZBBY7T": "//*** Rozbłysk\r\nthis.actor.addCondition(\"blinded\", Math.max(0, this.effect.sourceTest.result.SL))",
  "dcwY8dCd3PNCEzk6": "//*** Trzecie proroctwo Amul\r\nlet current = this.actor.status.fate.value\r\n\r\nthis.actor.update({\"system.status.fate.value\" : current + 1})\r\n\r\nthis.script.message(`<b>${this.actor.prototypeToken.name}</b> Punkty Szczęścia zwiększone z ${current} do ${current + 1}`)",
  "dfEgat3jz4EtWszH": "//*** Ulicznik\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Stealth\")} (${game.i18n.localize(\"SPEC.Urban\")})`",
  "dfnCK8jCPXNLM7Gh": "//*** Pożoga zagłady U’zhula\r\nlet aoeDamage = this.effect.sourceTest.result.damage - 5 // Easily handle magic missile damage by just subtracting 5 from the item's (which has +10 base)\r\n\r\nthis.script.message(await this.actor.applyBasicDamage(aoeDamage, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg : true}))\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Dodge\"), {skipTargets: true, appendTitle :  ` - Podpalenie`})\r\n\r\nawait test.roll();\r\n\r\nif (!test.succeeded)\r\n{\r\n    this.actor.addCondition(\"ablaze\");\r\n}",
  "DHxUKY9LMyifFgCi": "return args.skill?.name == \"Rzemiosło (Aptekarstwo)\" || args.skill?.name == \"Rzemiosło (Alchemia)\"",
  "DhZqJso1JWYtGrKk": "//*** Kometa Sigmara\r\nthis.actor.addCondition(\"ablaze\")\r\nlet damage = this.effect.sourceTest.result.damage + this.effect.sourceTest.result.additionalDamage\r\nthis.script.message(await this.actor.applyBasicDamage(damage, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg : true}))",
  "dIxYt421K010eogY": "let modifier = 0\r\nif (this.effect.name.includes(\"Umiarkowan\"))\r\n    modifier = -20\r\nelse\r\n    modifier = -10\r\nargs.fields.modifier += modifier",
  "dkiNmwFXztIVbuxg": "//*** Biczownik\r\nlet currentCareer = this.actor.system.currentCareer;\r\n\r\nif (!currentCareer || currentCareer.system.talents.includes(game.i18n.localize(\"NAME.Frenzy\")))\r\n{\r\n    return\r\n}\r\n\r\ncurrentCareer.system.talents.push(game.i18n.localize(\"NAME.Frenzy\"));",
  "dkY7WRYjFVh8GB0m": "//*** Podbite oko\r\nreturn ['ws', 'bs', 'ag'].includes(args.characteristic)",
  "DL9vYNft9aXdV2aW": "//*** Kły i Pazury\r\nlet tooth = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")\r\ntooth = tooth.toObject()\r\ntooth.system.specification.value = 3\r\ntooth.system.qualities.value = [{name : \"magical\"}]\r\n \r\nlet claw = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\")\r\nclaw = claw.toObject()\r\nclaw.system.specification.value = 4\r\nclaw.system.qualities.value = [{name : \"magical\"}]\r\nclaw.name = \"Szpony\"\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [tooth, claw], {fromEffect : this.effect.id})",
  "dM449AU0FQRnOc3l": "if (args.opposedTest.result.hitloc.value == \"head\")\r\n{\r\n  args.abort = \"Pudło - Brak Głowy\"\r\n}",
  "dM8FbRH2V8CpOkXw": "//*** Połamane żebra\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.QluSTTTq3viHJJUh\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Żebra\";\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "DmbWR9s5I8LHBwxB": "let column = await ValueDialog.create(\"Wybierz kolumnę, aby rzucić i określić głowę Bestii\", \"Wybierz Kolumnę\", \"\", [\"Niepodzielny\", \"Khorne\", \"Nurgle\", \"Slaanesh\", \"Tzeentch\"]);\r\n\r\nif (column)\r\n{\r\n    let result = await game.wfrp4e.tables.rollTable(\"beasthead\", {}, column);\r\n    this.script.scriptMessage(`<strong>${result.title}</strong><br>${result.result}`);\r\n    let uuid = `Compendium.${result.object.documentCollection}.${result.object.documentId}`;\r\n    let item = await fromUuid(uuid);\r\n    if (item)\r\n    {\r\n        this.actor.createEmbeddedDocuments(\"Item\", [item])\r\n        this.item.delete();\r\n    }\r\n}",
  "DMQ0taEpBUJU5njV": "//*** Klątwa pecha\r\nargs.actor.status.fortune.value = 0",
  "DpdSEHM6NMN1ey6h": "//*** Ochrona\r\nif (parseInt(this.item.system.specification.value) > 0)\r\n{\r\n\tthis.actor.system.status.ward.value = parseInt(this.item.system.specification.value);\r\n}",
  "dqvHDMlcitLx1pUx": "//*** Korzeń mandragory\r\nthis.actor.system.details.move.value /= 2;",
  "dSmRhZ6o1bUcOSF9": "//*** Władcza Postura\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Leadership\");",
  "dtFvpY96RPzNnphq": "return !(args.skill?.name.includes(\"Broń Biała (Podstawowa)\") || (args.type == \"weapon\" && args.item?.system.weaponGroup.value == \"basic\"))",
  "DTiHS6RfwhF4THbf": "//*** Z Bata\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Drive\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.Ride\"));",
  "DuM5l2Yb4bdvDeaG": "//*** Distract\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Athletics\")",
  "DWBxvzfWGcG7PVNP": "//*** Amputowany palec u ręki\r\nlet letter = this.item.system.location.key[0]; // \"l\" or \"r\";\r\n\r\nthis.item.updateSource({\"system.location.key\" : letter + \"Finger\"})\r\n\r\n// We want the location to be Right or Left Hand, but the key to be rFinger or lFinger",
  "dwSgcFxKN3S0hLJL": "//*** Cios Poniżej Pasa\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.MeleeBrawling\") && args.item?.weaponGroup?.value != \"brawling\"",
  "dXGosSxdoYbET2O8": "//*** Zmora\r\nawait this.actor.addCondition(\"fatigued\");\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"))\r\n\r\nawait test.roll();\r\n\r\nif (!test.succeeded)\r\n{\r\n    await this.actor.addCondition(\"fatigued\");\r\n    await this.actor.addCondition(\"broken\");\r\n}",
  "DxQnamsb2AuW0p2e": "//*** Przyrządzanie Mikstur\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Lore\"));",
  "DyZ1jH88EAp1ueOK": "//*** Skręcenie\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\ndata.system.location.value = data.system.location.value.replace(\"Ręka\", \"Nadgarstek\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n",
  "e0TuMgYuI7ZtGoQr": "//*** Pożoga zagłady U’zhula\r\nargs.applyAP = false;\r\n\r\nawait args.actor.addCondition(\"ablaze\", 2);\r\nawait args.actor.addCondition(\"prone\");",
  "E1vUepgop09FF5wy": "//*** Furia\r\nif (this.actor.system.status.advantage.value == 0)\r\n{\r\n    return this.script.notification(\"Niewystarczająca liczba Punktów Przewag!\", \"error\")\r\n}\r\n\r\nlet hatred = await fromUuid(\"Compendium.wfrp4e-core.items.Item.aE3pyW20Orvdjzj0\")\r\nlet frenzy = await fromUuid(\"Compendium.wfrp4e-core.items.Item.yRhhOlt18COq4e1q\");\r\n\r\nif (this.actor.system.status.advantage.value >= 3)\r\n{\r\n    this.script.notification(`Dodano: ${frenzy.name}`)\r\n    this.actor.setAdvantage(0)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [frenzy])\r\n}\r\nelse if (this.actor.system.status.advantage.value >= 1)\r\n{\r\n    let data = hatred.toObject();\r\n    data.system.specification.value = \"Przeciwnicy w bliskim zasięgu\"\r\n    this.script.notification(`Dodano: ${hatred.name}`)\r\n    this.actor.setAdvantage(0)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data])\r\n}",
  "e34s1XxHckAWfwHt": "//*** Zbicie Broni\r\nif (args.test.options.beatBlade && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Utracone Punkty Przewagi Przeciwnika: ${Number(args.test.result.SL) + 1}`)\r\n}",
  "E4CHDe1xfmcV3oGv": "//*** Wyczucie Kierunku\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Navigation\");",
  "E6DMqfDeczqmVMFV": "//*** Prawdomówność\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields : {difficulty : \"average\"}})\r\n\r\nawait test.roll();",
  "E7D4bxz8gy4e1wL7": "return [\"Skradanie (Wieś)\", \"Tropienie\", \"Sztuka Przetrwania\", \"Pływanie\", \"Percepcja\", \"Intuicja\"].includes(args.item?.name);",
  "e7IxnxePdXSy6L4E": "//*** Massive Intellect\r\nif (args.opposedTest.result.hitloc.value == \"head\")\r\n{\r\n     this.script.message(`<b>${this.actor.prototypeToken.name}</b>: otrzymano @Table[crithead]{Ranę Krytyczną Głowy}, jeśli jeszcze nie została zadana.`)\r\n}",
  "EaSNOmXUxAkUHnm5": "//*** Rana brzucha\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect: this.effect.id})",
  "eAtqyBd1HsDWuBuI": "//*** Amputowany ząb\r\nthis.actor.system.characteristics.fel.modifier -= parseInt(this.item.system.location.value) || 1",
  "ebDQH0MdGAG02CHl": "//*** Odcięty palec\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.SYjWiKDzMS6CtROJ\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nif (this.item.system.location.key == \"rArm\")\r\n{\r\n\tdata.system.location.value = \"Prawa Ręka\"\r\n\tdata.system.location.key = \"rHand\"\r\n}\r\nelse if (this.item.system.location.key == \"lArm\")\r\n{\r\n\tdata.system.location.value = \"Lewa Ręka\"\r\n\tdata.system.location.key = \"lHand\"\r\n}\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data])",
  "ed7Sud9HM3uB2j6b": "ChatMessage.create({content : \"<em>Krzycz lub Umieraj!</em>\", speaker : ChatMessage.getSpeaker({token: this.actor.getActiveTokens()[0]?.document, actor: this.actor})}, {chatBubble : true})\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = 2;\r\nthis.script.scriptNotification(\"Dodano: \" + data.name);\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id});\r\ngame.wfrp4e.utility.postFear(2, this.actor.prototypeToken.name)",
  "EdTChmSouS0MSmk5": "//*** Korzeń mandragory\r\nlet test = await this.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.succeeded)\r\n{\r\n    this.script.message(\"Można wykonać Akcję lub Ruch w tej rundzie (wybierz jedno)\")\r\n}\r\nelse \r\n{\r\n    this.script.message(\"Nie można wykonać Akcji ani Ruchu w tej rundzie\")\r\n}",
  "egDtqMxe3iekc6hv": "let trait = args.opposedTest.attackerTest.item\r\nlet woundLossEffect = this.item.effects.get(\"7Amhi75wLv0PvGjd\")\r\nif (trait && trait.name.includes(\"Ugryzenie\") && woundLossEffect)\r\n{\r\n    args.actor.applyEffect({effectUuids : woundLossEffect.uuid})\r\n}",
  "eh1J3s0s4A2AxoFp": "//*** Shieldmaiden's Devotion\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\");\r\nlet data = item.toObject();\r\ndata.name += \" (Wróg)\";\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "eHgk3HZ6eyLFTZ9o": "//*** Złe zamiary\r\nreturn !args.item?.system.magicMissile?.value && !args.item?.system.attackType",
  "EJaBfqADqlo92Fx6": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.oGbDwnLOn3isPJpO\")\r\nlet data = item.toObject();\r\ndata.name += \" (Do ustalenia)\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "EJObiSth3WdcJOXN": "if (args.test.characteristicKey == \"wp\" && args.test.failed && args.test.result.SL <= -3)\r\n{\r\n    this.script.scriptNotification(\"Dodano: Powalenie\");\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "ekjJQHyMbZT2vqdc": "let uses = this.item.getFlag(\"wfrp4e\", \"uses\") || 0;\r\nuses++;\r\nthis.script.scriptNotification(`Wykorzystano: ${uses}`)\r\nthis.item.setFlag(\"wfrp4e\", \"uses\", uses);\r\nif (uses >= 3)\r\n{\r\n\tthis.effect.update({\"flags.wfrp4e.applicationData.type\" : \"other\"})\r\n\tthis.script.scriptNotification(`Zurzyty`);\r\n}\r\n",
  "EKkdyp51Wf4csw2B": "//*** Bitewna Furia\r\nreturn this.actor.statuses.has(\"frenzy\");",
  "EmmG49pMOPHRwDzR": "   let roll = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n   if (args.test.isFumble && roll == 1 && !args.test.result.misfire)\r\n  {\r\n          args.test.result.misfire = game.i18n.localize(\"Misfire\") + \" (Wyrzucono 1)\"\r\n          args.test.result.misfireDamage = eval(parseInt(args.test.result.roll.toString().split('').pop()) + args.test.item.Damage)\r\n  }\r\n  else if (args.test.isFumble && roll != 1)\r\n      args.test.result.other.push(\"Rzut na niewypał: \" + roll)\r\n",
  "EmXwcuycEH8slEn5": "//*** Painful Cut\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}})\r\nawait test.roll();\r\nif(test.failed)\r\n{\r\n    this.actor.addCondition(\"unconscious\")\r\n}",
  "ENGmwaItRXO5s0XY": "await this.actor.modifyWounds(this.actor.system.characteristics.t.bonus * 3)\r\nthis.script.scriptMessage(`Uleczone Rany: ${this.actor.system.characteristics.t.bonus * 3}`)\r\n\r\nthis.actor.hasCondition(\"bleeding\")?.delete()\r\nthis.actor.hasCondition(\"fatigued\")?.delete()\r\n",
  "EpdMj9d9SYPeP44q": "//*** Skryty\r\nreturn args.characteristic != \"ag\"  && args.item?.id != this.item?.id",
  "ePPgxQOqL1Uhz2k9": "let choice1 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Zasięgowa (Łuk)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 10\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        type : \"weapon\",\r\n        name : \"Łuk długi\",\r\n    },\r\n    {\r\n        type : \"ammunition\",\r\n        name : \"Strzała\",\r\n    }\r\n]\r\nlet choice2 = [\r\n]\r\n\r\nlet choice = await Dialog.wait({\r\n    title : \"Opcjonalne\",\r\n    content : \r\n    `<p>\r\n    Dodać opcjonalne przedmioty?\r\n    </p>\r\n    <ol>\r\n    <li>Broń Zasięgowa (Łuk) +10 oraz długi łuk z 12 strzałami</li>\r\n    </ol> \r\n    `,\r\n    buttons : {\r\n        1 : {\r\n            label : \"Tak\",\r\n            callback : () => {\r\n                return choice1;\r\n            }\r\n        },\r\n        2 : {\r\n            label : \"Nie\",\r\n            callback : () => {\r\n                return choice2;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nlet updateObj = this.actor.toObject();\r\nlet items = []\r\nfor (let c of choice)\r\n{\r\n    let existing \r\n    if (c.type == \"skill\")\r\n    {\r\n        existing = updateObj.items.find(i => i.name == c.name && i.type == c.type)\r\n        if (existing && c.diff?.system?.advances?.value)\r\n        {\r\n            existing.system.advances.value += c.diff.system.advances.value\r\n        }\r\n    }\r\n\r\n    if (!existing)\r\n    {\r\n        let item = await game.wfrp4e.utility.find(c.name, c.type)\r\n        if (item)\r\n        {\r\n            item = item.toObject()\r\n            equip(item);\r\n                items.push(mergeObject(item, (c.diff || {})))\r\n        }\r\n        else\r\n            ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n\r\n}\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "EQ5dtGW5kQhtAb87": "//*** Zwichnięte kolano\r\nawait this.actor.addCondition(\"prone\")\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty : \"hard\"}, skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n\tawait this.actor.addCondition(\"stunned\")\r\n}",
  "eqxE7nBO13yJS7hc": "//*** Przypalenie\r\nlet roll = (await new Roll(\"1d10\").roll())\r\nroll.toMessage({flavor: \"Uleczono Rany\", speaker : {alias : this.actor.name}})\r\n\r\nthis.actor.modifyWounds(roll.total)\r\n\r\nthis.actor.hasCondition(\"bleeding\")?.delete();",
  "ErgOwSiVnm9VLVHN": "//*** Dar Ulryka\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.DrNUTPeodEgpWTnT\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "ERxrWzSpw8qwxFVi": "//*** Ochrona Phâ\r\nthis.script.notification(`Nie można wejść: ${this.effect.name}!`); this.actor.addCondition(\"broken\");",
  "esuLwq4g5T8k1kLT": "//*** Młot Sigmara\r\nawait args.actor.addCondition(\"ablaze\"); await args.actor.addCondition(\"prone\");",
  "Et4tPHlrkueLqP3T": "//*** Zniedołężniały\r\nif (args.item.type == \"skill\") args.item.system.modifier.value -= 10",
  "EU5j0hnDTG9Z6d1e": "//*** Low Blow!\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}})\r\nawait test.roll();\r\nif(test.failed)\r\n{\r\n    this.actor.addCondition(\"stunned\", 2)\r\n}",
  "EVBSHEC5nmmj2X41": "//*** Mieszkaniec Lasu\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Climb\")  && !args.skill?.name?.includes(game.i18n.localize(\"NAME.Stealth\"));",
  "Ew3C2WmLCtc1KT46": "//*** Skryty\r\nreturn args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\")) || args.item?.id == this.item?.id",
  "EwD053Fyy46b59ZI": "//*** Katya's Cordial\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.6l3jvIAvrKxt0lA9\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect: this.effect.id})",
  "eWWLmA2xINR321aK": "//*** Młot Sigmara\r\nargs.item.system.qualities.value.push({name : \"magical\"})",
  "EYny6z5oTOhxGDfb": "//*** Zerwanie mięśni głowy (pomniejsze)\r\nargs.fields.modifier -= 10;\r\n",
  "ezGqDoC9hNRBnFTB": "//*** Weteran wielu przygód\r\nlet choices = await Promise.all([warhammer.utility.findItemId(\"1zaqojk0Oq1m8vYv\"), warhammer.utility.findItemId(\"zIuarD5mB0EF0ji0\")])\r\nlet items = await game.wfrp4e.apps.ItemDialog.create(choices, 1, \"Wybierz broń\")\r\nitems = items.map(i => i.toObject())\r\n\r\nitems.forEach(i => equip(i))\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.data.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.data.equipped = true\r\n    else if (item.type == \"trapping\" && item.data.trappingType.value == \"clothingAccessories\")\r\n        item.data.worn = true\r\n}",
  "f062aa2BNClx08D6": "let test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\n    await test.roll();\r\n    if (test.failed) \r\n    {\r\n      let toughnessLost = parseInt(this.effect.sourceTest.result.SL)\r\n\r\n      let currentModifier = this.actor.characteristics.t.modifier\r\n\r\n      await this.actor.update({ \"system.characteristics.t.modifier\": currentModifier - toughnessLost })\r\n      this.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b> utracone punkty Wytrzymałości: ${toughnessLost}`)\r\n      if (this.actor.system.characteristics.t.value <= 0)\r\n      {\r\n          this.actor.addCondition(\"dead\");\r\n      }\r\n\r\n    }",
  "F2u4L4o0r1LTWeWK": "//*** Groza\r\nif (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create({text : \"Podaj Wartość Grozy\", title : this.effect.name});\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
  "f3rXusHh6VIpVPUl": "//*** Złamanie głowy (pomniejsze)\r\nreturn !args.skill?.name?.includes(game.i18n.localize(\"NAME.Language\")) && args.type != \"cast\"",
  "f4vvAGQ8OGoEbrgy": "let SL = args.opposedTest.attackerTest.result.SL - args.opposedTest.attackerTest.item.cn.value\r\nlet difficulty = \"challenging\"\r\nif (SL >= 1)\r\n   difficulty = \"difficult\"\r\nif (SL >= 2)\r\n   difficulty = \"hard\"\r\nif (SL >= 3)\r\n   difficulty = \"vhard\"\r\n   \r\n\r\nlet test = await args.actor.setupCharacteristic(\"wp\", {fields: {difficulty}, skipTargets: true, appendTitle :  \" - \" + this.effect.name, context : {failure: \"Otrzymano Stan Oszołomienie\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    args.actor.addCondition(\"stunned\");\r\n}",
  "f5Mp3kXwCFdPkW6N": "//*** Słuch Absolutny\r\nreturn args.skill?.name != `${game.i18n.localize(\"NAME.Entertain\")} (${game.i18n.localize(\"SPEC.Sing\")})` && args.skill?.name != `${game.i18n.localize(\"NAME.Entertain\")} (${game.i18n.localize(\"SPEC.Singing\")})` && !args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));",
  "f6WnrJvoNkfoNN9Y": "//*** Podbite oko\r\nreturn args.item?.attackType != 'melee'",
  "f7WZvYle9iqefRsh": "//*** Beat Blade\r\nreturn args.weapon?.system?.attackType != \"melee\"",
  "faRFSsrQylQRZFLk": "//*** Krwawiąca dłoń\r\nreturn args.bleedingHand || !args.weapon || !this.actor.hasCondition(\"bleeding\")",
  "fcY3pa72dELnOFXV": "//*** Paper Cartridge\r\nreturn !args.options.reload\r\n",
  "fEFfHFeJxkR0aIJK": "if (args.opposedTest.result.differenceSL >= 0 && args.opposedTest.result.differenceSL <= 3 && args.opposedTest.result.winner == \"attacker\")\r\n{ \r\n    this.script.scriptMessage(`Wszyscy w zasięgu 20 metrów otrzymują 1 Ranę oraz muszą wykonać <strong>Wymagający (-10) Test Odporności</strong> lub otrzymają Stan @Condition[Ogłuszenie]`, {blind : true,  whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}\r\n    ",
  "fEyKQqCjDwml3DXO": "//*** Krwotok wewnętrzny\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.M8XyRs9DN12XsFTQ\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect: this.effect.id})",
  "FiD3mvWIBHNNIuO9": "if (args.opposedTest.result.hitloc.value == \"body\")\r\n{\r\n   if ((await new Roll(\"1d2\").roll()).total == 1)\r\n   {\r\n       args.opposedTest.result.hitloc.value = \"head\"\r\n       this.script.scriptMessage(`Miejsce Trafienia zmienione na głowę`)\r\n   }\r\n}",
  "fiF9sM5UpcHMYa33": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.vMYEkrWj0ip6ZOdv\");\r\nlet data = item.toObject();\r\ndata.name += \" (Trucizny, Choroby, Chaos)\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", Array(this.effect.sourceTest.result.overcast.usage.other.current).fill(data), {fromEffect: this.effect.id})",
  "fIUxKZMWJ8HMPmH9": "//*** Ameliorative Elixir\r\nreturn [\"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)",
  "fkFmNcesqqNTMhVn": "//*** Strzaskane kolano\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.2iult41Jehz0F1O8\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key;\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "FkTwk8hfHpRLbAp2": "//*** Utrata równowagi\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "FmLx9pwOkzqqU7Ph": "//*** Wibrysy\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Track\");",
  "fP2edYbj6QjPPAjL": "return [\"Oswajanie\", \"Odporność\", \"Sztuka Przetrwania\"].includes(args.skill?.name)",
  "FqevMs0ukQ9WuUHl": "// Each time the blade is used, the GM should secretly roll a d10.\r\n// On a 1, its poison has run dry, \r\n// and the next time it is employed it will shatter.\r\n\r\nif (this.item.getFlag(\"wfrp4e\", \"brittle\"))\r\n{\r\n    ChatMessage.create({content: `<strong>${this.item.name}</strong> ulega rozbiciu!`})\r\n    this.item.update({name : `${this.item.name} (Rozbity)`})\r\n}",
  "FSqUqSByMiztYOQM": "//*** Scrap and Powder\r\nif (args.totalWoundLoss > 0)\r\n     this.script.message(`<b>Infekcja: ${args.actor.name}</b> musi zdać <b>Prosty (+40) Test Odporności</b> lub otrzyma @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Ropiejącą Ranę}`, {whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
  "ft0LaRWZT5WtnptP": "//*** Petryfikujące Spojrzenie\r\nlet advantage = this.actor.system.status.advantage.value;\r\nif (advantage > 0)\r\n{\r\n    await this.actor.setAdvantage(0);\r\n    this.script.notification(\"Zmniejszono Punkty Przewag\")\r\n}\r\nelse \r\n{\r\n    return this.script.notification(\"Niewystarczająca liczba Punktów Przewag!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item, {fields : {slBonus : advantage}})\r\nawait test.roll();",
  "fve7tiyF5X9B7mHJ": "//*** Odporność na Magię\r\nargs.fields.slBonus -= 2;",
  "Fvlc4RkeF4dHjW3m": "//*** Wypędzenie\r\nlet caster = this.effect.sourceActor\r\nif (caster && (this.actor.has(game.i18n.localize(\"NAME.Undead\")) || this.actor.has(game.i18n.localize(\"NAME.Daemonic\")))) {\r\n    let wp = caster.system.characteristics.wp.value\r\n    if (wp > this.actor.system.characteristics.t.value) {\r\n        if (this.actor.has(game.i18n.localize(\"NAME.Unstable\"))) {\r\n            this.actor.update({ \"system.status.wounds.value\": 0 })\r\n            this.actor.addCondition(\"dead\")\r\n        }\r\n        else {\r\n            fromUuid(\"Compendium.wfrp4e-core.items.D0ImWEIMSDgElsnl\").then(item => {\r\n                this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], { fromEffect: this.effect.id })\r\n                ChatMessage.create({ content: `${this.actor.prototypeToken.name}: otrzymano ${game.i18n.localize(\"NAME.Unstable\")}`, speaker: { alias: caster.name } })\r\n            })\r\n        }\r\n    }\r\n}",
  "FXuyiJoXdAh6WhRK": "//*** Roughrider\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Ride\")} (${game.i18n.localize(\"SPEC.Horse\")})` && game.combat?.active",
  "FXwfqF0jpXlBQ9Y3": "//*** Reversal\r\nreturn args.item?.system?.isMelee && this.actor.attacker",
  "fYLSe6CrYciap5y8": "//*** Wilk morski\r\nlet characteristics = {\r\n    \"ws\" : 0,\r\n    \"bs\" : 0,\r\n    \"s\" : 10,\r\n    \"t\" : 10,\r\n    \"i\" : 0,\r\n    \"ag\" : 10,\r\n    \"dex\" : 0,\r\n    \"int\" : 0,\r\n    \"wp\" : 0,\r\n    \"fel\" : 0\r\n}\r\nlet skills = [game.i18n.localize(\"NAME.ConsumeAlcohol\"), game.i18n.localize(\"NAME.Row\"), game.i18n.localize(\"NAME.Sail\"), game.i18n.localize(\"NAME.Swim\")]\r\nlet skillAdvancements = [10, 10, 10, 10]\r\nlet talents = []\r\nlet trappings = []\r\nlet items = []\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "FYUPfYyTYZkxRLFT": "//*** Urodzony Żeglarz\r\nreturn ![\"NAME.Endurance\", \"NAME.Cool\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)",
  "FZFOC7bip0oiWEzk": "//*** Uszkodzona tętnica\r\nif (args.opposedTest.result.hitloc.value == this.item.system.location.key && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 2);\r\n    this.script.notification(\"Otrzymano Krwawienie\")\r\n}",
  "fzTB7t3x4bLmAXji": "let roll = await new Roll(\"1d10 + 1\").roll()\r\nawait roll.toMessage(this.script.getChatData());\r\nthis.script.scriptNotification(`Uleczone Rany: ${roll.total}`)\r\nthis.actor.corruptionDialog(\"moderate\")\r\nawait this.actor.modifyWounds(roll.total)",
  "g07HI7vyqiFXPB0o": "// A Drinker must take a Difficult (-10) Endurance Test.\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"difficult\"}})\r\nawait test.roll()\r\n// If they fail, they acquire 2 Poisoned Conditions. \r\nif (test.failed) \r\n{\r\n    this.actor.addCondition(\"poisoned\", 2)\r\n    this.script.scriptMessage(`<p><strong>${this.actor.prototypeToken.name}</strong> otrzymuje 2 Poziomy Stanu @Condition[Zatrucie].</p>\r\n        <p>Każde stworzenie cechą Zwierzęcy, która ugryzie ofiarę i otrzyma obrażenia, nie ugryzie ponownie podczas trwającego starcia, chociaż stworzenie może nadal atakować na inne sposoby.</p>`, \r\n    {\r\n      whisper: ChatMessage.getWhisperRecipients(\"GM\"), \r\n      blind: true \r\n    })\r\n}\r\n  // If they succeed, for a number of rounds equal to 3+ their SL, they have the Corrosive Blood Creature Trait.\r\nelse if (test.succeeded) \r\n{\r\n    // Don't attempt to add Corrosive Blood if actor already has it\r\n    const hasCorrosiveBlood = this.actor.has(\"Kwasowa Krew\")\r\n    if (hasCorrosiveBlood !== undefined) return   \r\n\r\n    let item = await fromUuid(\"Compendium.wfrp4e-core.items.M5QSWOYt2Rbv2yxW\")\r\n    let data = item.toObject()\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n    \r\n    const duration = 3 + parseInt(test.result.SL)\r\n    this.script.scriptMessage(`<p><strong>${this.actor.prototypeToken.name}</strong> otrzymuje Kwasową Krew na liczbę rund: ${duration}.</p>`, \r\n      { whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true })    \r\n}",
  "g0SzfsLyW7aD2F19": "//*** Etiquette (Criminals) - Rudi Klumpenklug\r\nif (this.item.system.tests.value.includes(\"(Grupa Społeczna)\"))\r\n{\r\n    let tests = this.item.system.tests.value\r\n    let name = this.item.name\r\n\r\n    // If name already specifies, make sure tests value reflects that\r\n    if (name.includes(\"(\") && !name.includes(\"(Grupa Społeczna)\"))\r\n    {\r\n        let group = name.split(\"(\")[1].split(\")\")[0]\r\n        tests = `${tests.split(\"(\")[0].trim()} (${group})`\r\n    }\r\n    else\r\n    {\r\n        let value = await ValueDialog.create({text : \"Napisz, czyjej Etykiety dotyczy talentu\", title : this.effect.name});\r\n        if (value)\r\n        {\r\n            name = `${name.split(\"(\")[0].trim()} (${value})`\r\n            tests = this.item.system.tests.value.replace(\"Grupa Społeczna\", value);\r\n        }\r\n    }\r\n    this.item.updateSource({name, \"system.tests.value\" : tests})\r\n    this.item.updateSource({\"name\" : name});\r\n}",
  "g4t56A09yrpZaJQ2": "//*** Szpony furii\r\n    let amberTalons = foundry.utils.deepClone(game.wfrp4e.config.systemItems.unarmed);\r\n    amberTalons.name = \"Szpony Furii\";\r\n    amberTalons.img = this.effect.img;\r\n    amberTalons.system.damage.value = \"SB + WPB\"\r\n    amberTalons.system.equipped = true;\r\n    amberTalons.system.qualities.value.push({name : \"magical\"})\r\n    amberTalons.effects.push({\r\n        label : \"Szpony Furii\",\r\n        transfer: false,\r\n        img : \"modules/wfrp4e-core/icons/spells/amber-talons.png\" ,\r\n        system: {\r\n          transferData : {\r\n                  documentType : \"Item\"\r\n              },\r\n              scriptData : [{\r\n                  trigger : \"applyDamage\",\r\n                  script : \"if (args.totalWoundLoss >= 1)\\n{ \\n    args.actor.addCondition(\\\"bleeding\\\")\\n}\"\r\n              }]\r\n          }\r\n      })\r\n    this.actor.createEmbeddedDocuments(\"Item\", [amberTalons], {fromEffect: this.effect.id})",
  "G7sFEnJlXZvfXL3V": "//*** Czarny lotos\r\nif (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n    let effectData = this.item.effects.contents[1].convertToApplied();\r\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.notification(\"Nic nie zostało!\", \"error\")\r\n}",
  "GAO8AozttWOyRkta": "//*** Amputowana dłoń\r\nif (!args.flags.lostHand)\r\n{\r\n\targs.fields.lostHand = true;\r\n\targs.fields.modifier += -20;\r\n}",
  "GbPEy22VuCNzlNv2": "//*** Woltyżerka\r\nreturn !this.actor.isMounted || (!args.skill?.name?.includes(game.i18n.localize(\"NAME.Ride\")) && !args.options.dodge)",
  "Gc8S5TYlVdV8NnOT": "//*** Wrzeszcząca czaszka\r\nlet test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name, context: { failure: \"Otrzymano Stan Panika\", success: \"Uniknięto otrzymania Stanu Panika\" } })\r\n\r\n await test.roll();\r\n\r\n if (!test.succeeded)\r\n {\r\n    args.actor.addCondition(\"broken\");\r\n }",
  "GcIQtshex11AMmh2": "//*** Pepperbox\r\nif (this.item.system.isEquipped)\r\n{\r\n    let removeRepeater = false\r\n    if(!this.item.system.offhand.value) // main\r\n    {\r\n        let offhandUsed = this.actor.itemTypes.weapon.find(i => i.system.isEquipped && i.system.offhand.value)\r\n        if (offhandUsed)\r\n        {\r\n            removeRepeater = true;\r\n        }\r\n    }\r\n    else // offhand\r\n    {\r\n        let mainhandUsed = this.actor.itemTypes.weapon.find(i => i.system.isEquipped && !i.system.offhand.value)\r\n        if (mainhandUsed)\r\n        {\r\n           removeRepeater = true;\r\n        }\r\n    }\r\n    \r\n    if (removeRepeater)\r\n    {\r\n        this.item.system.qualities.value = this.item.system.qualities.value.filter(i => i.name != \"repeater\")\r\n    }\r\n}",
  "GEfWIFBSrXt0ldBM": "//*** Torn Apart\r\n(await new Roll(\"1d10\").roll()).toMessage(this.script.getChatData())\r\nawait this.actor.addCondition(\"dead\")",
  "GFaTz8f6PBNWrlad": "let test = await this.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context : {failure : `<strong>Zdezorientowany</strong>: Determine behaviour by @Table[bewilder] Table.`}})\r\nawait test.roll();\r\nreturn test.failed",
  "GFkVnx4m9OwYsKGH": "//*** Oburęczność\r\nargs.actor.flags.ambi+= 1",
  "gh2KS1prBKcsSK6M": "//*** Drakefire Pistol\r\nif (args.opposedTest.attackerTest.result.critical)\r\n   args.actor.addCondition(\"ablaze\")",
  "GjkxWj9wCAclM9WA": "let effects = foundry.utils.deepClone(this.item.effects.contents.filter(e => e.active));\r\n\r\neffects.splice(effects.length - 1);\r\n\r\nif (effects.length == 0)\r\n{\r\n    return this.script.scriptNotification(\"Wszystkie efekty zostały zastosowane. Zresetuj, aby je ponownie wybrać\")\r\n}\r\nlet choice = await ItemDialog.create(effects, 1, \"Wybierz moc, którą chcesz zastosować\");\r\n\r\nif (choice[0])\r\n{\r\n    choice[0].update({disabled : true})\r\n    let effect = choice[0].convertToApplied();\r\n    effect.name += ` (${this.effect.name})`\r\n    this.actor.createEmbeddedDocuments(\"ActiveEffect\", [effect]);\r\n}",
  "gKIPujyuFSn0No9v": "for(let e of this.item.effects.contents)\r\n{\r\n    e.update({disabled: false})\r\n}\r\nthis.script.scriptNotification(\"Resetuj moce\")",
  "gKPL3t4vlZAsvtGr": "//*** Szczur Tunelowy\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Stealth\")} (${game.i18n.localize(\"SPEC.Underground\")})`",
  "gMIenSmLklAkB2Zm": "//*** Jad\r\nif (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create({text : \"Podaj Siłe Jadu\", title : this.effect.name}, \"\", Object.values(game.wfrp4e.config.difficultyNames));\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
  "gnVpxOeBZpNF4HIF": "//*** Aqshy-Infused Powder\r\nif (args.test.result.roll.toString().includes(\"9\") || args.test.result.roll.toString().includes(\"8\"))\r\n{\r\n    args.test.result.fumble = game.i18n.localize(\"Fumble\")\r\n}",
  "GOq4TcnWbfyfCo2V": "this.script.scriptNotification(`Uleczone Rany: ${this.actor.characteristics.t.bonus * 2}`)\r\nawait this.actor.modifyWounds(this.actor.characteristics.t.bonus * 2)\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - Skutki Uboczne`,fields : {difficulty : \"difficult\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    let roll = await new Roll(\"1d10\").roll();\r\n    await roll.toMessage(this.script.getChatData())\r\n    if (roll.total <= 3)\r\n    {\r\n        this.actor.addCondition(\"blinded\", 3)\r\n    }\r\n    else if (roll.total <= 6)\r\n    {\r\n        this.actor.addCondition(\"broken\");\r\n    }\r\n    else if (roll.total <= 9)\r\n    {\r\n        this.actor.addCondition(\"stunned\");\r\n    }\r\n    else if (roll.total == 10)\r\n    {\r\n        this.actor.addConditon(\"unconscious\")\r\n    }\r\n}",
  "gPQrszvIgGlW9yM4": "//*** Zimnokrwisty\r\nif (args.test.characteristicKey == \"wp\")\r\n   args.test.preData.canReverse = true",
  "gqZLfIr6svrtdwdC": "//*** Ruchliwe dłonie\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.SleightOfHand\") && args.skill?.name != game.i18n.localize(\"NAME.MeleeBrawling\") && args.weapon?.system?.weaponGroup?.value != \"brawling\"",
  "GrF6tQ08jgKmUH4i": "//*** Zerwanie mięśni nogi (pomniejsze)\r\nreturn ![\"ws\", \"bs\", \"s\", \"ag\", \"i\"].includes(args.characteristic)",
  "GRfCxtYzmEx2LYU7": "if (args.totalWoundLoss >= 1)\r\n{\r\n    let roll = await new Roll(\"1d10\").roll();\r\n    await roll.toMessage(this.script.getChatData());\r\n    if (roll.total == 9)\r\n    {\r\n        this.script.scriptMessage(`Dwa @UUID[Compendium.wfrp4e-eis.actors.iDy8SDTwJSlCzZMl]{Niebieskie Horrory Tzeentch} rozrywają na strzępy ${this.actor.name}' wydostając się na świat.`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    }\r\n}",
  "GTZUO73pUJKpM1JB": "//*** Zniszczenie ożywieńca\r\n    let roll = await new Roll(\"1d10\").roll();\r\n    game.dice3d?.showForRoll(roll);\r\n    this.script.message(await this.actor.applyBasicDamage(roll.total, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg : true}))\r\n",
  "GUkpYdPwoC5pc9BT": "//*** Crew Commander\r\nreturn !args.weapon?.system.properties.flaws.crewed",
  "GuUCErVbk5hrFzR3": "//*** Twardziel\r\nargs.multiplier.tb += 1",
  "GZFsuynUhgZqwTGo": "//*** Blackbriar Javelin\r\nif (args.totalWoundLoss >= 1)\r\n{\r\n    let test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context: { failure: \"Gained a Poisoned Condition\", success: \"Resisted the poison\" }})\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n        args.actor.addCondition(\"poisoned\");\r\n    }\r\n}\r\n    ",
  "GzSFlqL1YrIK1dxh": "let items = await Promise.all([\"Compendium.wfrp4e-wom.items.Item.EjGYZ4CgX2jZW7Ot\",\r\n\"Compendium.wfrp4e-wom.items.Item.O2v9RQiFf0obskP5\",\r\n\"Compendium.wfrp4e-wom.items.Item.2cv6hhZ57iV6z5Il\",\r\n\"Compendium.wfrp4e-wom.items.Item.YgDEUO0G0XcqQJqg\",\r\n\"Compendium.wfrp4e-wom.items.Item.J6K5TPxI8qIGQKKH\",\r\n\"Compendium.wfrp4e-wom.items.Item.K9FPtiDLwTkC7FuO\",\r\n\"Compendium.wfrp4e-wom.items.Item.CkMYRYCLrkMnyVm5\",\r\n\"Compendium.wfrp4e-wom.items.Item.0Xdm4r7l2EwC4fcg\"].map(fromUuid));\r\n\r\nlet choice = await game.wfrp4e.apps.ItemDialog.create(items, 1, \"Wybierz Wiatr Magii\")\r\n//this.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nthis.item.update(choice[0]?.toObject(), {diff: false, recursive : false});\r\n\r\n//this.actor.items.getName(this.effect.item.name).delete() // For some reason this.effect.item.delete() throws an error\r\n\r\n",
  "GzsuEg7gZy1f0ljy": "//*** Fakstoryl\r\nlet bleeding = this.actor.hasCondition(\"bleeding\")\r\nif (bleeding)\r\n{\r\n   this.script.notification(`Usunięte Stany Krwawienia: ${bleeding.conditionValue}`)\r\n   bleeding.delete();  \r\n}\r\nelse \r\n{\r\n   this.script.notification(`Brak stanów krwawienia`)\r\n}",
  "H06Ysj7oPiemW7S6": "//*** Przestępca\r\nif (args.test.options.income && !args.test.options.criminal)\r\n{\r\n    args.test.options.criminal = true;\r\n    let currentCareer = args.test.actor.system.currentCareer;\r\n    let coin = {1 : \"b\", 2 : \"s\", 3 : \"s\", 4 : \"g\"}[currentCareer.system.level.value] // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\r\n    let term = {1 : \"bp\", 2 : \"ss\", 3 : \"ss\", 4 : \"gc\"}[currentCareer.system.level.value] // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\r\n    let dieAmount = {1 : \"2d10\", 2 : \"1d10\", 3 : \"2d10\", 4 : \"1\"}[currentCareer.system.level.value] // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\r\n    dieAmount = parseInt(dieAmount[0]) * this.item.system.Advances;     // Multilpy that first letter by your standing (Brass 4 = 8d10 pennies)\r\n    if (coin != \"g\") // Don't roll for gold, just use standing value\r\n    {\r\n        dieAmount = dieAmount + \"d10\";\r\n    }\r\n    let moneyEarned = (await new Roll(dieAmount.toString()).roll()).total;\r\n    let moneyString = `${moneyEarned}${coin}`\r\n    let transactionString = `${moneyEarned}${term}`\r\n\r\n    this.script.message(`<a class=\"money-drag\" data-amt=\"${moneyString}\"><strong>Zarobiono dodatkowe pieniądze: ${game.wfrp4e.market.amountToString(game.wfrp4e.market.parseMoneyTransactionString(transactionString))}</strong></a>`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "h0DfPwUUOBjyAHMZ": "//*** Helmet with impressive feather - Misodoctakleidist ‘Doc’ Ashfield\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Perception\");",
  "H2CJvApKMnfGNNoo": " if (args.test.item?.type == \"skill\" && args.test.item.name.includes(game.i18n.localize(\"NAME.Stealth\")))\r\n{ \r\n     args.test.result.description = \"Zdumiewająca porażka\";\r\n     args.test.result.outcome = \"failure\";\r\n       ChatMessage.create({content : \"<em>PISK</em>\", speaker : ChatMessage.getSpeaker({token: this.actor.getActiveTokens()[0]?.document, actor: this.actor})}, {chatBubble : true})\r\n        AudioHelper.play({ src: `${game.settings.get(\"wfrp4e\", \"soundPath\")}squeek.wav` }, true);\r\n}",
  "H3pZ9UeIzIz3luKh": "args.actor.addCondition(\"bleeding\")\r\n\r\nthis.actor.setFlag(\"wfrp4e\", \"isAttached\", args.actor.name)\r\n\r\nthis.script.scriptMessage(`Doczepia się do <strong>${args.actor.name}</strong>`)",
  "H3Wls12aVWAWTp9J": "//*** Quick Strike\r\nthis.actor.setupCharacteristic(\"i\", {skipTargets: true, appendTitle :  \" - \" + this.effect.name}).then(test => {\r\n    test.roll();\r\n})",
  "h766UvswLCsxcMow": "let characteristics = {\r\n  \"ws\" : 5,\r\n  \"bs\" : 0,\r\n  \"s\" : -15,\r\n  \"t\" : 0,\r\n  \"i\" : 20,\r\n  \"ag\" : 0,\r\n  \"dex\" : 0,\r\n  \"int\" : 5,\r\n  \"wp\" : 10,\r\n  \"fel\" : 10\r\n}\r\nlet skills = [\"Charyzma\", \"Zastraszanie\", \"Broń Biała (Podstawowa)\"]\r\nlet skillAdvancements = [7, 60, 7]\r\nlet talents = [\"Groźny\", \"Cień\"]\r\nlet traits = [\"Dekoncentrujący\"]\r\nlet trappings = []\r\nlet items = [];\r\nlet spells = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n  updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n  let skill = skills[index]\r\n  let skillItem;\r\n  skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n  if (skillItem)\r\n      skillItem.system.advances.value += skillAdvancements[index]\r\n  else \r\n  {\r\n      skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n      skillItem = skillItem.toObject();\r\n      skillItem.system.advances.value = skillAdvancements[index];\r\n      items.push(skillItem);\r\n  }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n  let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n  if (talentItem)\r\n  {\r\n      items.push(talentItem.toObject());\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n  }\r\n}\r\n\r\nconst traitRegex = /(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm\r\nfor (let trait of traits)\r\n{\r\n  let traitMatches = trait.matchAll(traitRegex).next().value\r\n  let traitName = traitMatches[1]\r\n  let traitItem;\r\n  try {\r\n      traitItem = await WFRP_Utility.findItem(traitName, \"trait\")\r\n  }\r\n  catch { }\r\n  if (!traitItem) {\r\n      ui.notifications.warn(`Could not find ${trait}`, {permanent : true})\r\n  }\r\n  traitItem = traitItem.toObject()\r\n  items.push(traitItem)\r\n\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n  let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n  if (trappingItem)\r\n  {\r\n      trappingItem = trappingItem.toObject()\r\n\r\n      equip(trappingItem)\r\n\r\n      items.push(trappingItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n  }\r\n}\r\n\r\nfor (let spell of spells) \r\n{\r\n  let spellItem = await game.wfrp4e.utility.findItem(spell)\r\n  if (spellItem)\r\n  {\r\n      spellItem = spellItem.toObject()\r\n\r\n      items.push(spellItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${spell}`, {permanent : true})\r\n  }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\n\r\nfunction equip(item)\r\n{\r\n  if (item.type == \"armour\")\r\n      item.worn = true\r\n  else if (item.type == \"weapon\")\r\n      item.equipped = true\r\n  else if (item.type == \"trapping\" && item.trappingType?.value == \"clothingAccessories\")\r\n      item.worn = true\r\n}",
  "hA8PzeiCsHqqlUZm": "this.actor.createEmbeddedDocuments(\"ActiveEffect\", [game.wfrp4e.config.symptomEffects[\"nausea\"]])\r\nthis.script.scriptMessage(`Otrzymano symptom: @Symptom[Mdłości] na [[1d10]] godzin`, {whisper: ChatMessage.getWhisperRecipients(\"GM\")})",
  "HASsi6wYHVALExWq": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context: { failure: \"1 Corruption Point Gained\" } })\r\nawait test.roll();\r\n\r\nif (test.failed && args.actor.type == \"character\") \r\n{\r\n    let msg = \"\"\r\n    msg += `<p><b>${this.actor.prototypeToken.name}</b>: Otrzymano punkt Zepsucia</p>`\r\n    if (test.result.roll % 11 == 0 || test.result.roll == 100)\r\n    {\r\n        msg +=  `<b>${args.actor.prototypeToken.name}</b>: Otrzymano mutację (@Table[expandedmutatephys]{Fizyczna} or @Table[expandedmutatemental]{Psychiczna}) oraz Talent: @UUID[Compendium.wfrp4e-core.items.hiU7vhBOVpVI8c7C]{Magia Chaosu (Tzeentch)}`\r\n    }\r\n    this.script.scriptMessage(msg, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    await this.actor.update({ \"system.status.corruption.value\": parseInt(args.actor.status.corruption.value) + 1 })\r\n}",
  "Hcpn1gU58DIKIhty": "if (args.item.type  == \"skill\" && args.item.name == \"Broń Biała (Korbacz)\")\r\n{\r\n     args.item.system.modifier.value += 10;\r\n}",
  "hCzxUyO6mjLNIpaM": "//*** Pieszczota Laniph\r\nlet woundsGained = Math.min(args.totalWoundLoss, args.actor.status.wounds.value)\r\n\r\nwoundsGained = Math.floor(woundsGained / 2)\r\n\r\nargs.attacker.update({ \"system.status.wounds.value\": args.attacker.status.wounds.value + woundsGained })\r\n\r\nthis.script.message(`Uleczono Rany: ${woundsGained}`)",
  "hDC6lroDEPVBituR": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\n\r\nif (test.failed)\r\n{\r\n    this.actor.update({\"system.status.corruption.value\" : parseInt(this.actor.status.corruption.value) + 1})\r\n    this.script.scriptMessage(\"Otrzymano Punkt Zepsucia\", {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    if (test.result.roll % 11 == 0 || test.result.roll == 100)\r\n    {\r\n        this.script.scriptMessage(`<strong>Pech</strong>: Natychmiast otrzymujesz 1 @Table[mutatemental]{Mutację Psychiczną}, oraz nie możesz podjąć się krótko-terminowej ambicji przez następne [[1d10]] tygodni.`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    }\r\n}",
  "hhv7PrRdlf9sfC82": "//*** Weteran wielu przygód\r\nlet characteristics = {\r\n    \"ws\" : 5,\r\n    \"bs\" : 0,\r\n    \"s\" : 5,\r\n    \"t\" : 5,\r\n    \"i\" : 10,\r\n    \"ag\" : 0,\r\n    \"dex\" : 0,\r\n    \"int\" : 0,\r\n    \"wp\" : 0,\r\n    \"fel\" : 0\r\n}\r\nlet skills = [\"Opanowanie\", \"Unik\"]\r\nlet skillAdvancements = [10, 10]\r\nlet talents = [\"Bitewny Refleks\"]\r\nlet trappings = [\"Skórzana kurta\", \"Skórzany hełm\", \"Skórzane nogawice\", \"Tarcza\"]\r\nlet items = []\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "HiMBS6GeOwEydWYN": "//*** Wyborny Wspinacz\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Climb\");",
  "HJ2X4ZtXei0BXbxf": "//*** Weteran wielu przygód\r\n        let choices = await Promise.all([warhammer.utility.findItemId(\"PzimjNx9Ojq4g6mV\"), warhammer.utility.findItemId(\"rOPmyLWa37e7s9v6\")])\r\n        let items = await game.wfrp4e.apps.ItemDialog.create(choices, 1, \"Wybierz umiejętność\")\r\n\r\n        items = items.map(i => i.toObject())\r\n        items.forEach(i => i.system.advances.value = 20)\r\n\r\nitems.forEach(i => equip(i))\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.data.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.data.equipped = true\r\n    else if (item.type == \"trapping\" && item.data.trappingType.value == \"clothingAccessories\")\r\n        item.data.worn = true\r\n}",
  "hK0YMJfYbpbJZizO": "//*** Lampa sztormowa\r\nthis.actor.getActiveTokens().forEach(t => t.document.update({light : {\r\n      \"dim\": 0,\r\n      \"bright\": 0,\r\n      \"angle\": 360,\r\n      \"alpha\": 0.5,\r\n      \"animation\": {\r\n          \"speed\": 0,\r\n          \"intensity\": 0,\r\n          \"type\": \"none\",\r\n      },\r\n      \"color\": \"\",\r\n  }}));",
  "HKhyn0kijKfzW6cw": "//*** Stubbed Toe\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}})\r\nawait test.roll();\r\nthis.item.updateSource({\"flags.wfrp4e.passed\" : test.succeeded})",
  "hlHKeFWrOA8CsLr9": "//*** Starsza Pilotka\r\nargs.data.canReverse = true;\r\nargs.options.pilot = true;",
  "HMC6hPND9DWLFfZE": "//*** Znawca (Wiedza)\r\nif (this.item.name.includes(\"(\"))\r\n{\r\n\treturn;\r\n}\r\n\r\nlet index = game.packs\r\n.filter(i => i.metadata.type == \"Item\")\r\n.reduce((acc, pack) => acc.concat(pack.index.contents), [])\r\n.filter(i => i.type == \"skill\" && i.name.includes(game.i18n.localize(\"NAME.Lore\")))\r\n.map(i => {\r\n\ti.id = i._id\r\n\treturn i\r\n})\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz rodzaj wiedzy\")\r\nlet text;\r\nif (!choice[0])\r\n{\r\n    let custom = await Dialog.wait({\r\n        title : \"Wpisz rodzaj wiedzy\",\r\n        content : \"<input type='text'>\",\r\n        buttons : {\r\n            confirm : {\r\n                label : game.i18n.localize(\"Confirm\"),\r\n                callback : (dlg) => {\r\n                    return dlg.find(\"input\")[0].value\r\n                }\r\n            }\r\n        },\r\n        default : \"confirm\",\r\n        close : () => {\r\n            return \"\"\r\n        }\r\n    })   \r\n    text = custom || \"\"\r\n}\r\nelse \r\n{\r\n    text = game.wfrp4e.utility.extractParenthesesText(choice[0].name)\r\n}\r\n\r\nawait this.item.updateSource({name : this.item.name + ` (${text})`, \"system.tests.value\" : this.item.system.tests.value.replace(\"chosen Lore\", text)})\r\nawait this.effect.updateSource({name : this.effect.name + ` (${text})`})",
  "HmImVzvw6ecBy99l": "//*** Poważna rana klatki piersiowej\r\nif (args.opposedTest.result.hitloc.value == \"body\" && args.totalWoundLoss > 0) \r\n{\r\n    args.actor.addCondition(\"bleeding\", 2)\r\n    this.script.notification(\"Otrzymano Stan Krwawienia\")\r\n}",
  "hmk8zV1LTElHUI8A": "let msg = `<b>${this.actor.prototypeToken.name}</b>: Otrzymano 1 Ranę.<br>`\r\n  if (this.actor.status.wounds.value <= 1)\r\n  {\r\n    msg += `<b>${this.actor.prototypeToken.name}</b>: Otrzymano Stan @Condition[Utrata Przytomności].<br>`\r\n    await this.actor.addCondition(\"unconscious\")\r\n  }\r\n  this.script.scriptMessage(msg)\r\n  this.actor.modifyWounds(-1)",
  "hnsmzvcuiUYB065I": "this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {appendTitle: ` - ${this.effect.name}`, context: { failure : \"Nie może uciec z walki\"}}).then(test => test.roll())",
  "HoNTnPphrJISSQr1": "ChatMessage.create({content : \"<em>Przemów i objaw się mnie</em>\", speaker : ChatMessage.getSpeaker({token: this.actor.getActiveTokens()[0]?.document, actor: this.actor})}, {chatBubble : true})",
  "HOt2hHOiHDZ7oBgW": "//*** Klątwa porażającego bólu\r\nif ([\"rLeg\", \"lLeg\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\")))\r\n{\r\n\targs.actor.details.move.value /= 2\r\n}\r\n",
  "hpwJRAhCsXTp9bd9": "let choice1 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Biała (Podstawowa)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 20\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\nlet choice2 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Biała (Drzewcowa)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 20\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\n\r\nlet choice3 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Biała (Dwuręczna)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 20\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\n\r\nlet choice = await Dialog.wait({\r\n        title : \"Wybór\",\r\n        content : \r\n        `<p>\r\n        Wybierz opcję\r\n        </p>\r\n        <ol>\r\n        <li>Broń Biała (Podstawowa)</li>\r\n        <li>Broń Biała (Drzewcowa)</li>\r\n        <li>Broń Biała (Dwuręczna)</li>\r\n        </ol> \r\n        `,\r\n        buttons : {\r\n            1 : {\r\n                label : \"Podstawowa\",\r\n                callback : () => {\r\n                    return choice1\r\n                }\r\n            },\r\n            2 : {\r\n                label : \"Drzewcowa\",\r\n                callback : () => {\r\n                    return choice2\r\n                }\r\n            },\r\n            3 : {\r\n                label : \"Dwuręczna\",\r\n                callback : () => {\r\n                    return choice3\r\n                }\r\n            }\r\n    }\r\n})\r\n\r\nlet updateObj = this.actor.toObject();\r\nlet items = []\r\nfor (let c of choice)\r\n{\r\n    let existing \r\n    if (c.type == \"skill\")\r\n    {\r\n        existing = updateObj.items.find(i => i.name == c.name && i.type == c.type)\r\n        if (existing && c.diff?.system?.advances?.value)\r\n        {\r\n            existing.system.advances.value += c.diff.system.advances.value\r\n        }\r\n    }\r\n\r\n    if (!existing)\r\n    {\r\n        let item = await game.wfrp4e.utility.find(c.name, c.type)\r\n        if (item)\r\n        {\r\n            item = item.toObject()\r\n            equip(item);\r\n                items.push(mergeObject(item, (c.diff || {})))\r\n        }\r\n        else\r\n            ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n\r\n}\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}\r\n",
  "hR1qD2kpFHF8JT8h": "//*** Precyzyjne Inkantowanie\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Language\")} (${game.i18n.localize(\"SPEC.Magick\")})`",
  "HrOBAXsEX073ReKl": "//*** Słuch Absolutny\r\nlet skill = `${game.i18n.localize(\"NAME.Entertain\")} (${game.i18n.localize(\"SPEC.Singing\")})`;\r\nlet currentCareer = this.actor.system.currentCareer;\r\nlet existingSkill = this.actor.itemTypes.skill.find(i => i.name == skill);\r\n\r\nif (!currentCareer) return\r\n\r\n\r\nlet inCurrentCareer = currentCareer.system.skills.concat(currentCareer.system.addedSkills).includes(skill);\r\nlet perfectPitchAdded = this.actor.getFlag(\"wfrp4e\", \"perfectPitchAdded\") || {};\r\nif (existingSkill && inCurrentCareer && !perfectPitchAdded[existingSkill.name])\r\n{\r\n\texistingSkill.system.advances.costModifier = -5;\r\n}\r\nelse \r\n{\r\n\tperfectPitchAdded[skill] = true;\r\n\tcurrentCareer.system.addedSkills.push(skill);\r\n\tfoundry.utils.setProperty(this.actor, \"flags.wfrp4e.perfectPitchAdded\", perfectPitchAdded)\r\n}\r\n\r\n\r\n",
  "HrYchgkdZBiu1yPF": "//*** Wyborny Wspinacz\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Climb\");",
  "HXJKkmpfxQUOnWOS": "//*** Bastard Sword\r\nif (!this.item.system.twohanded.value)\r\n{\r\n    this.item.system.flaws.value = this.item.system.flaws.value.concat([{name : \"tiring\"}, {name : \"slow\"}])\r\n}",
  "hZAax4emLahEEqcZ": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = 7 - this.actor.characteristics.s.bonus\r\ndata.name = item.name.replace(\"()\", \"(Kły)\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "I0Jo6cbNAJtXUloc": "//*** Waleczność\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.J9MK0AIaTbvd5oF6\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {fromEffect : this.effect.id});",
  "I0oRZ7AWde5KI5jw": "//*** Focusing Philtre\r\nreturn ![\"t\", \"int\"].includes(args.characteristic)",
  "I1J2m5uud84N50Lk": "if ([\"cast\", \"channelling\", \"pray\"].includes(args.type))\r\n{\r\n\targs.abort = true;\r\n\tthis.script.scriptNotification(\"Nie można rzucić zaklęć ani modlitw\");\r\n}\r\nelse return true;",
  "i5AN97A7IOeygEFA": "if (args.applyAP && args.modifiers.ap.metal) \r\n{\r\n    args.modifiers.ap.ignored += args.modifiers.ap.metal\r\n    args.modifiers.other.push({value : args.modifiers.ap.metal, label : this.effect.name, details : \"Dodano PP Metalowego Pancerza do Obrażeń\" })\r\n    args.modifiers.ap.details.push(\"<strong>\" + this.effect.name + \"</strong>: Zignorowano Metalowy Pancerz (\" + args.modifiers.ap.metal + \")\");\r\n    args.modifiers.ap.metal = 0\r\n}",
  "I7ieW0hNYvvX0KFg": "//*** Chirurgia\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Heal\");",
  "I9QAPKbaXwMMMBT4": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {fields : {difficulty: \"average\"}, skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\nif(test.failed)\r\n{\r\n    await this.actor.addCondition(\"stunned\");\r\n    let secondTest = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {fields : {difficulty: \"easy\"}, skipTargets: true, appendTitle :  \" - Rozpacz\"})\r\n    await secondTest.roll();\r\n    if(secondTest.failed)\r\n    {\r\n        this.effect.updateSource({name : \"Smak Śmierci\"})\r\n         await this.actor.addCondition(\"fatigued\");\r\n    }\r\n    else \r\n    {\r\n        return false;\r\n    }\r\n}",
  "IAGla7HJlYN0wa4H": "if (args.test.characteristicKey == \"wp\") \r\n{\r\n    if (args.test.failed)\r\n    {\r\n        this.actor.addSystemEffect(\"convulsions\")\r\n        this.script.scriptMessage(`Test siły woli nie powiódł się, <b>${this.actor.prototypeToken.name}</b>: Otrzymano @Symptom[Konwulsje] na [[1d10]] godzin`)\r\n    }\r\n}",
  "id9ZdkERMZnZTWXt": "if (args.extendedTest?.getFlag(\"wfrp4e\", \"fear\"))\r\n{\r\n\tthis.script.scriptNotification(\"Niewrażliwy na Strach\");\r\n\targs.extendedTest.delete();\r\n\targs.abort = true;\r\n}\r\nreturn args.options.terror || args.extendedTest?.getFlag(\"wfrp4e\", \"fear\")",
  "IfEu1hO8sKEZBpvg": "//*** Fear - Blaue Augen\r\nlet value = parseInt(this.item.specification.value)\r\nlet name = this.actor.prototypeToken.name\r\n\r\nif (game.user.isGM && game.user.targets.size)\r\n{\r\n  game.user.targets.forEach(t => {\r\n    t.actor.applyFear(value, name)\r\n  })\r\n  game.user.updateTokenTargets([]);\r\n}\r\nelse \r\n{\r\n  game.wfrp4e.utility.postFear(value, name)\r\n}",
  "IG4zYqtN9fRSYE7q": "//*** Gorejący miecz Rhuin\r\nargs.actor.addCondition(\"ablaze\");",
  "igVAVU7DOuzhNG14": "//*** Zakażony\r\nreturn args.item?.system.isMelee",
  "IKiZv9YSFmKmHo6a": "//*** Ognista korona\r\nreturn args.spell?.system.lore.value == \"fire\"",
  "iM4B3IZ4VtpZsl09": "//*** Mały\r\nargs.size = \"sml\"",
  "iM6JLF8jDXMViReZ": "return ![\"Otwieranie Zamków\", \"Zwinne Palce\", \"Splatanie Magii (Ulgu)\"].includes(args.skill?.name)\r\n",
  "iMDZLr7ueJWBnilj": "//*** Celny Strzał\r\nargs.actor.flags.rangedDamageIncrease += 1",
  "imKVsCy8rya2gkwO": "// Any Characteristic penalties due to failed Consume Alcohol Tests\r\n// or the state of being Stinking Drunk are eliminated. \r\nawait this.actor.removeSystemEffect(\"consumealcohol1\")\r\nawait this.actor.removeSystemEffect(\"consumealcohol2\")\r\nawait this.actor.removeSystemEffect(\"consumealcohol3\")\r\nawait this.actor.removeSystemEffect(\"stinkingdrunk1\")\r\n\r\n// The drinker is thereafter Fatigued \r\n// for a number of hours equal to 10 minus their Toughness Bonus — \r\n// nothing but time and rest can eliminate this penalty.\r\nawait this.actor.addCondition(\"fatigued\")\r\nconst duration = 10 - parseInt(this.actor.system.characteristics.t.bonus)\r\nthis.effect.updateSource({\"duration.hours\" : duration});\r\nthis.script.scriptMessage(`<p><strong>${this.actor.prototypeToken.name}</strong> stracił wszystkie kary związane z alkoholem i zyskuje Stan Zmęczenie na liczbę godzin: ${duration}.</p>`, \r\n{\r\n  whisper: ChatMessage.getWhisperRecipients(\"GM\"), \r\n  blind: true \r\n})    ",
  "iMu8BZ7eHMAbPEO1": "let healed = args.totalWoundLoss\r\n\r\nthis.script.scriptMessage(`<b>this.actor.prototypeToken.name</b>Uleczone Rany: ${healed}`);\r\n\r\nthis.actor.modifyWounds(healed)",
  "iNAQJa5HyaEckknX": "let test = await this.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\n\r\n\r\nlet opposedResult = test.opposedMessages[0]?.getOppose()?.resultMessage?.getOpposedTest()?.result\r\n\r\nif (opposedResult?.winner == \"attacker\")\r\n{\r\n    let spells = this.actor.itemTypes.spell;\r\n    if (spells.length)\r\n    {\r\n        let chosen = spells[Math.floor(CONFIG.Dice.randomUniform() * spells.length)]\r\n        this.script.scriptMessage(`Utracono dostęp do: <strong>${chosen.name}</strong>`)\r\n        chosen.update({name : chosen.name += \" (UTRACONO)\"})\r\n    }\r\n}\r\n\r\n\r\n",
  "inPxRSx0CDj1nwAm": "//*** Gorejący miecz Rhuin\r\nif (args.test.result.fumble && !this.actor.itemTypes.talent.find(i => i.name == \"Magia Tajemna (Ogień)\"))\r\n{\r\n    this.actor.addCondition(\"ablaze\");\r\n}",
  "ioeTj5mx8jlA5EX5": "//*** Wymiot - Troll\r\nargs.actor.addCondition(\"stunned\")",
  "ipkkRffJh61WE7zR": "//*** Amputowana noga\r\nif (!args.flags.amputatedFootOrLeg)\r\n{\r\n\targs.flags.amputatedFootOrLeg= true;\r\n\targs.fields.modifier -= 20;\r\n}",
  "IPPDvZdE8kn3H9z7": "let test = await this.actor.setupSkill(\"Unik\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`});\r\nawait test.roll();\r\n\r\nif (test.failed)\r\n{\r\n   await this.actor.addCondition(\"grappling\")\r\n}",
  "IR5URcjnCuWBFMoN": "// If a full dose is imbibed, \r\n// the victim must pass a Hard (-20) Endurance Test.\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty: \"hard\"}})\r\nawait test.roll()\r\nif (test.failed)\r\n{\r\n    this.script.scriptMessage(`<p><strong>${this.actor.prototypeToken.name}</strong> nie zauważa nic poza tym, że staje się zmęczony trochę wcześniej niż zwykle. W tym momencie nadal można uratować ofiarę potężnym antidotum lub magicznym środkiem.</p>\r\n    <p>Kiedy zapadnie w sen, jest to prawie niemożliwe. W tym momencie postać musi wykonać <strong>Trudny (-20) Test Odporności</strong>. Jeśli się nie powiedzie, nigdy się nie obudzi.</p>`, \r\n    {\r\n      whisper: ChatMessage.getWhisperRecipients(\"GM\"), \r\n      blind: true \r\n    })\r\n}\r\nreturn test.failed;",
  "IR86DuMbVdbGOJYt": "//*** Oślepienie\r\nthis.actor.addCondition(\"blinded\")",
  "IsLAvY9ikR1cOJWw": "//*** Mocne Plecy\r\nreturn ![\"NAME.Row\", \"NAME.Swim\"].map(i => game.i18n.localize(i)).includes(args.skill?.name);",
  "IslMfFgpgQq2brpu": "//*** On Deadly Ground\r\nif (this.actor.hasCondition(\"broken\"))\r\n{\r\n    this.actor.removeCondition(\"broken\")\r\n    this.script.notification(`Nie można otrzymać stanu Panika`);\r\n}",
  "iT0h3VZLEBQnn5Bx": "//*** Hulaka\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Charm\") && args.skill?.name != game.i18n.localize(\"NAME.Gossip\") && args.skill?.name != game.i18n.localize(\"NAME.ConsumeAlcohol\");",
  "IukS0clr1yAleacc": "//*** Amputowany palec u nogi\r\nthis.actor.system.characteristics.ag.modifier -= parseInt(this.item.system.location.value) || 1\r\n\r\nthis.actor.system.characteristics.ws.modifier -= parseInt(this.item.system.location.value) || 1",
  "IupskvzvoGyD2H5o": "//*** Błogosławieństwo (Boska Tradycja)\r\nif (this.actor.type != \"character\")\r\n{\r\n    return;\r\n}\r\n\r\nlet god = await ValueDialog.create({text : \"Wybierz Bóstwo\", title :  \"Błogosławieństwo (Boska Tradycja)\"})\r\n\r\nif (god)\r\n{\r\n    let prayers = await warhammer.utility.findAllItems(\"prayer\", \"Ładuję błogosławienia...\")\r\n    let blessings = prayers.filter(p => p.system.god.value.split(\",\").map(i => i.trim().toLowerCase()).includes(god.toLowerCase()) && p.system.type.value == \"blessing\")\r\n    let godBlessings = game.wfrp4e.config.godBlessings[god.toLowerCase()] || [];\r\n    if (god == \"Stara Wiara\")\r\n    {\r\n        blessings = await ItemDialog.create(prayers.filter(i => i.system.type.value == \"blessing\"), 6, {text : \"Wybierz 6 Błogosławieństw\", title :  \"Blessed\"})\r\n    }\r\n    if (godBlessings.length)\r\n    {\r\n        blessings = blessings.concat(await Promise.all(godBlessings.filter(bls => !(blessings.map(i => i.uuid).includes(bls.uuid))).map(fromUuid)));\r\n    }\r\n    if (blessings.length)\r\n    {\r\n        this.script.notification(\"Dodaję: \" + blessings.map(i => i.name).join(\", \"))\r\n        await this.actor.createEmbeddedDocuments(\"Item\", blessings, {fromEffect : this.effect.id})\r\n    }\r\n    else \r\n    {\r\n        this.script.notification(`Nie mogłem znaleźć żadnych błogosławieństw związanych z ${god}.`)\r\n    }\r\n    this.item.updateSource({name : this.item.name.replace(\"Boska Tradycja\", god)})\r\n    await this.actor.update({\"system.details.god.value\": god})\r\n}",
  "iuSoKntfJ4eAPafQ": "let spells = await game.wfrp4e.utility.findAll(\"spell\", \"Wyszukuję zaklęcia...\");\r\nspells = spells.filter(s => [\"fire\", \"heavens\", \"beasts\", \"shadow\", \"light\", \"life\", \"death\", \"metal\"].includes(s.system.lore.value)).sort((a, b) => a.system.lore.value > b.system.lore.value ?  1 : -1)\r\n\r\nlet choice = await ItemDialog.create(spells, 1, \"Wybierz Zaklęcie\");\r\nif (choice[0])\r\n{\r\n    this.actor.createEmbeddedDocuments(\"Item\", choice, {fromEffect: this.effect.id})\r\n}\r\n",
  "iVhi3Z6zPaf1bf8g": "//*** Wrogość (x)\r\nreturn [\"t\", \"i\", \"ag\", \"dex\", \"int\", \"wp\"].includes(args.characteristic)",
  "IzoOmDywGLqLNljN": "//*** Czarownica!\r\nlet skill = `Język (Magiczny)`;\r\nlet currentCareer = this.actor.system.currentCareer;\r\nlet existingSkill = this.actor.itemTypes.skill.find(i => i.name == skill);\r\n\r\nif (!currentCareer) return\r\n\r\n\r\nlet inCurrentCareer = currentCareer.system.skills.concat(currentCareer.system.addedSkills).includes(skill);\r\nlet witchAdded = actor.getFlag(\"wfrp4e\", \"witchAdded\") || {};\r\nif (existingSkill && inCurrentCareer && !witchAdded[existingSkill.name])\r\n{\r\n\texistingSkill.system.advances.costModifier = -5;\r\n}\r\nelse \r\n{\r\n\twitchAdded[skill] = true;\r\n\tcurrentCareer.system.addedSkills.push(skill);\r\n\tfoundry.utils.setProperty(this.actor, \"flags.wfrp4e.witchAdded\", witchAdded)\r\n}",
  "J0IWUhxada2ONowP": "//*** Słuch Absolutny\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Entertain\")} (${game.i18n.localize(\"SPEC.Sing\")})` || args.skill?.name == `${game.i18n.localize(\"NAME.Entertain\")} (${game.i18n.localize(\"SPEC.Singing\")})` || args.skill?.name.includes(game.i18n.localize(\"SPEC.Magick\")) || args.skill?.name.includes(game.i18n.localize(\"SPEC.Eltharin\") || args.skill?.name.includes(game.i18n.localize(\"SPEC.Cathayan\")));",
  "j1AmrY1SxFJQyapo": "//*** Sneaky Stabbin'\r\nif (this.actor.status.advantage.value > 0 && args.item.system.attackType)\r\n{\r\n    args.item.system.qualities.value.push({name : \"penetrating\"})\r\n}",
  "j3zDMWkns32Yrxn3": "//*** Lśniąca szata\r\nthis.effect.updateSource({\"flags.wfrp4e.ward\" :  9})",
  "j6Bf1iivH8cqSnnK": "//*** Ballock Knife\r\nlet target = args.data.targets[0]\r\nreturn target?.actor.hasCondition(\"prone\") || target.hasCondition(\"surprised\")",
  "j98hvy6r9G2Vjmid": "if (args.totalWoundLoss > 0) \r\n{\r\n  args.opposedTest.result.other.push(\r\n  `@Corruption[minor]{Wystawienie na pomniejsze zepsucie}`\r\n  )\r\n  this.script.scriptMessage(\r\n  `<strong>${this.effect.name}</strong>: \r\n    @Corruption[minor]{Pomniejsze Zepsucie} <br/>\r\n    <strong>${args.actor.prototypeToken.name}</strong> musi wykonać  \r\n    <strong>Przeciętny (+20) Test na Pomniejsze Zepsucie</strong>`, \r\n    {whisper: ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "jdS2u1tQPYeO55WI": "//*** Zionięcie (Gaz) - Zębacz Jaskiniowy\r\nlet type = this.item.getFlag(\"wfrp4e\", \"breath\");\r\n\r\nif (type == \"cold\")\r\n{\r\n\tlet stunned = Math.max(1, Math.trunc(args.totalWoundLoss / 5))\r\n\tawait args.actor.addCondition(\"stunned\", stunned);\r\n}\r\n\r\nif (type == \"corrosion\")\r\n{\r\n    let damageItems = await Dialog.confirm({title : this.item.name, content : `<p>Uszkodzić wszystkie noszone przedmioty?</p>`})\r\n\tif (damageItems)\r\n\t{\r\n\t\tlet msg = ``\r\n\t\tlet weapons = args.actor.itemTypes.weapon.filter(i => i.isEquipped);\r\n\t\tlet armour = args.actor.itemTypes.armour.filter(i => i.isEquipped);\r\n\t\tlet trappings = args.actor.itemTypes.trapping.filter(i => i.isEquipped);\r\n\t\tfor(let item of weapons)\r\n\t\t{\r\n\t\t\tif (item.system.properties.qualities.shield)\r\n\t\t\t{\r\n\t\t\t\tawait item.system.damageItem(1, \"shield\");\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tawait item.system.damageItem(1);\r\n\t\t\t}\r\n\t\t\tmsg += `<p><strong>${item.name}</strong>: uszkodzono o 1</p>`\r\n\t\t}\r\n\t\tfor(let item of armour)\r\n\t\t{\r\n\t\t\tawait item.system.damageItem(1);\r\n\t\t\tmsg += `<p><strong>${item.name}</strong>: uszkodzono o 1</p>`\r\n\t\t}\r\n\t\tfor(let item of trappings)\r\n\t\t{\r\n\t\t\tawait item.system.damageItem(1);\r\n\t\t\tmsg += `<p><strong>${item.name}</strong>: uszkodzono o 1</p>`\r\n\t\t}\r\n\t\tif (msg)\r\n\t\t{\r\n\t\t\tthis.script.message(msg, {speaker : {alias : args.actor.name}});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nif (type == \"fire\")\r\n{\r\n\tawait args.actor.addCondition(\"ablaze\");\r\n}\r\n\r\nif (type == \"electricity\")\r\n{\r\n\tawait args.actor.addCondition(\"stunned\");\r\n}\r\n\r\nif (type == \"poison\")\r\n{\r\n\tawait args.actor.addCondition(\"poisoned\");\r\n}\r\n\r\nif (type == \"warpfire\")\r\n{\r\n\tawait this.actor.corruptionDialog(\"moderate\")\r\n\tthis.actor.applyEffect({effectUuids : this.item.effects.getName(\"Warpfire\").uuid})\t\r\n}",
  "JEbs0WlqhKNDOo5A": "//*** Bolesne cięcie\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"unconscious\")\r\n}\r\n",
  "JeThJbOf6Xmbtgo1": "this.script.scriptMessage(await this.actor.applyBasicDamage(8 + parseInt(this.effect.sourceTest.result.SL), {suppressMsg : true}))\r\n\r\nlet test = await this.actor.setupSkill(\"Atletyka\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "JFgXyb6bKjZJLmF8": "//*** Stubbed Toe\r\nreturn args.characteristic == \"ag\"",
  "jfk5VDKMTIf4ee0v": "//*** Jad - Snotling\r\nif (args.totalWoundLoss > 0)\r\n    args.actor.addCondition(\"poisoned\")",
  "jFwema0iwzBphxie": "//*** Wyssanie życia\r\nlet woundsGained = Math.min(args.actor.status.wounds.value, args.totalWoundLoss)\r\nwoundsGained = Math.ceil(woundsGained / 2)\r\n\r\nargs.attacker.update({\"system.status.wounds.value\" : args.attacker.system.status.wounds.value + woundsGained})\r\n\r\nargs.actor.addCondition(\"fatigued\")\r\nargs.attacker.hasCondition(\"fatigued\")?.delete();\r\n\r\nthis.script.message(`<b>${args.attacker.prototypeToken.name}</b> Uleczono Rany: ${woundsGained}`);",
  "jGDk7avWFSnyFoql": "let broken = this.actor.hasCondition(\"broken\");\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.IAWyzDfC286a9MPz\");\r\n\r\nif (broken && !broken.getFlag(\"wfrp4e\", \"blasted-mind\") && !this.actor.has(item.name))\r\n{\r\n    await broken.delete();\r\n    this.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect: this.effect.id})\r\n    this.script.scriptNotification(`Usunięto ${broken.name}, dodano ${item.name} (${Math.ceil(CONFIG.Dice.randomUniform() * 10)} Rund(y))`)\r\n}",
  "jHgxpe6TJDlP3oTn": "let spells = await game.wfrp4e.utility.findAll(\"spell\", \"Wyszkukuję zaklęcia...\");\r\nspells = spells.filter(s => [\"slaanesh\"].includes(s.system.lore.value))\r\n\r\nlet choice = await ItemDialog.create(spells, 1, \"Wybierz Zaklęcie\");\r\nif (choice[0])\r\n{\r\n    this.item.updateSource({name : this.item.name + ` (${choice[0].name})`})\r\n    this.actor.createEmbeddedDocuments(\"Item\", choice, {fromEffect: this.effect.id})\r\n}\r\n",
  "JibNjuQrJRnY0yf9": "//*** Amputowane oko\r\nreturn this.actor.flags.useless.rEye && this.actor.flags.useless.lEye && ([\"ws\", \"bs\"].includes(args.characteristic) || args.skill?.name?.includes(game.i18n.localize(\"NAME.Ride\")) || args.weapon || args.options.dodge)",
  "JjDzMnUxaWQePIYh": "//*** Mądrość sowy\r\nreturn args.characteristic != \"int\"",
  "Jjq3oPYbI26zjxME": "//*** Wybicie stawu\r\nlet location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono: ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nlet roll = await new Roll(\"1d10\").roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas Trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
  "Jk7OHqx06oCUVAzb": "return ![\"Język (Magiczny)\", \"Splatanie Magii (Hysh)\"].includes(args.skill?.name) ",
  "JmZQRvdWjm9ykYfn": "if (this.actor.hasCondition(\"surprised\"))\r\n{\r\n    this.actor.removeCondition(\"surprised\")\r\n    this.script.scriptMessage(`Nie może być zaskoczony!`);\r\n}",
  "Jnp5c09sPzDD61EK": "//*** Błogosławieństwo Ochrony\r\nthis.script.notification(`${args.actor.prototypeToken.name}: musi zdać <b>Przeciętny (+20) Test Siły Woli</b> aby zaatakować ten cel!`);\r\n\r\nreturn true; // No need to show this in the dialog",
  "jObJanFoev4N6ZRv": "//*** Eteryczny\r\nif (!args.opposedTest.attackerTest.item?.system?.isMagical)\r\n\targs.abort = `<strong>${this.effect.name}</strong>: Zignorowano`",
  "jpcU8FFWSlQ3gD0L": "//*** Złota Rączka\r\nreturn !args.skill?.name?.includes(game.i18n.localize(\"NAME.Trade\"))",
  "JQruHprM5R5vZ9DA": "//*** Leczące światło\r\nlet caster = this.effect.sourceActor;\r\nif (caster)\r\n{\r\n    let healed= caster.system.characteristics.wp.bonus + caster.system.characteristics.int.bonus\r\n    await this.actor.modifyWounds(healed);\r\n    this.script.message(`<strong>${this.actor.prototypeToken.name}</strong>: Uleczone Rany: ${healed}`);\r\n}\r\n \r\n let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"vhard\"}, context : {success : \"1 Punkt Zepsucia otrzymany w ciągu ostatniej godziny może zostać usunięty.\", failure: \"Nic się nie dzieje\"}});\r\n await test.roll();",
  "jRSgPhpfN7MH7TTp": "if (args.totalWoundLoss > 0)\r\n{\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context: { failure: \"Otrzymano 1 Stan Zatrucia\", success: \"Uchroniono przed otrzymaniem Stanu Zatrucia\" } })\r\n    await test.roll();\r\n    if (test.failed)\r\n    {   \r\n        args.actor.addCondition(\"poisoned\");\r\n        if (args.actor.system.status.wounds.value - args.totalWoundLoss <= 0)\r\n        {\r\n            args.actor.addCondition(\"unconscious\")\r\n        }\r\n    }\r\n}\r\n\r\n    // else\r\n    //     this.actor.setupCharacteristic(\"t\", { context: { failure: \"1 @Condition[Poisoned] Condition Gained\", success: \"Resisted @Condition[Poisoned] Condition\" } }).then(testCallback)\r\n",
  "JstrA46EYSEuRSy5": "//*** Wieczny odpoczynek\r\nif (this.actor.has(game.i18n.localize(\"NAME.Undead\")) && this.actor.has(game.i18n.localize(\"NAME.Construct\")))\r\n   this.actor.addCondition(\"dead\")",
  "jW87rmQLtROdVEhW": "  if ([\"orc\", \"ork\", \"goblin\", \"hobgoblin\", \"snotling\", \"greenskin\", \"zielonoskóry\"].includes(args.opposedTest.defender.details.species.value.toLowerCase()))\r\n    {\r\n      args.addImpact = true\r\n      args.opposedTest.result.other.push(\"<b>Runa Zabójcy Goblinów</b>: Dodano Zaletę Druzgocąca\")\r\n    }",
  "JwgFQmPQtXWAP94i": "//*** Twarz topielca\r\nthis.actor.addCondition(\"fatigued\");",
  "jWkfoVpHLiRaHTza": "//*** Dismay Foe\r\nif (args.test.succeeded)\r\n{\r\n    args.test.result.other.push(`<strong>${this.effect.name}</strong>: @Terror[1,${this.actor.prototypeToken.name}]`)\r\n}",
  "jYJRO5XPyG7y6fih": "//*** Chód marynarza\r\nawait this.actor.addCondition(\"blinded\")\r\nawait this.actor.addCondition(\"deafened\")\r\nawait this.actor.addCondition(\"fatigued\")",
  "JyTxUG5dNW670Sf7": "//*** Porąbana noga\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.7mCcI3q7hgWcmbBU\")\r\nlet data = item.toObject();\r\ndata.system.location.key= this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n   \r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"stunned\")\r\n}",
  "JZIn1dsKHFE3smJU": "//*** Ładunek zapalający\r\nlet ablaze = parseInt(this.effect.sourceTest.result.SL) + 1\r\nargs.actor.addCondition(\"ablaze\", ablaze)",
  "k8TC0yzp4xfOXD2n": "//*** Odmrożenia\r\nif (args.totalWoundLoss > 0)\r\n{\r\n    let test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`});\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n\t    args.actor.addCondition(\"stunned\");\r\n    }\r\n\targs.actor.hasCondition(\"bleeding\")?.delete()\r\n}",
  "k9SvH4Lm3ZuI8S1N": "//*** Ameliorative Elixir\r\nreturn ![\"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)",
  "kBXVEnSWzaQZLkJH": "//*** Morderczy Atak\r\nif(args.test.result.critical)\r\n{\r\n   args.test.result.damage +=1 \r\n   args.test.result.additionalDamage += 1\r\n}",
  "KGK9vL1Yl0qmCeCN": "//*** Trained - Półgryf Wierzchowiec\r\nlet specification = this.item.system.specification.value;\r\nlet choice = [];\r\n\r\nif (!specification || specification == \"Wyszkolona Umiejętność\")\r\n{\r\n    choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n        broken: \"Ujarzmiony\",\r\n        drive: \"Pociągowy\",\r\n        entertain: \"Maskotka\",\r\n        fetch: \"Aportujący\",\r\n        guard: \"Stóżujący\",\r\n        home: \"Powracający\",\r\n        magic: \"Magiczny\",\r\n        mount: \"Wierzchowiec\",\r\n        war: \"Bojowy\"\r\n    }, this.effect.img), \"unlimited\", \"Wybierz wyszkoloną umiejętność\");\r\n}\r\nelse \r\n{\r\n    choice = specification.split(\", \").map(i => {\r\n        return {\r\n            id : i.toLowerCase(),\r\n            name : i\r\n        }\r\n    });\r\n}\r\n\r\nif (choice.length)\r\n{\r\n    let changes = foundry.utils.deepClone(this.effect.changes);\r\n\r\n    for(let training of choice)\r\n    {\r\n        switch(training.id)\r\n        {\r\n            case \"ujarzmiony\" : \r\n                let roll = await new Roll(\"2d10\").roll();   \r\n                roll.toMessage(this.script.getChatData());\r\n                changes.push({value : roll.total, mode : 2, key : \"system.characteristics.fel.modifier\"})\r\n\r\n                if (this.actor.type == \"creature\")\r\n                {\r\n                    let bestial = this.actor.itemTypes.trait.find(i => i.name == \"Zwierzęcy\");\r\n                    if (bestial)\r\n                    {\r\n                        bestial.update({\"system.disabled\" : true})\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"pociągowy\" : \r\n\r\n                break;\r\n\r\n            case \"maskotka\" : \r\n\r\n                break;\r\n\r\n            case \"aportujący\" : \r\n\r\n                break;\r\n\r\n            case \"stóżujący\" : \r\n                let territorial = await fromUuid(\"Compendium.wfrp4e-core.items.Item.JIAe7i7dqTQBu4do\");\r\n                await this.actor.createEmbeddedDocuments(\"Item\", [territorial], {fromEffect: this.effect.id})\r\n                foundry.utils.setProperty(args, \"options.keepId\", true);\r\n                break;\r\n\r\n            case \"powracający\" : \r\n\r\n                break;\r\n\r\n            case \"magiczny\" : \r\n\r\n                break;\r\n\r\n            case \"wierzchowiec\" : \r\n\r\n                break;\r\n\r\n            case \"bojowy\" : \r\n                changes.push({value : 10, mode : 2, key : \"system.characteristics.ws.modifier\"})\r\n                break;\r\n        }\r\n    }\r\n    this.effect.updateSource({name : `${this.effect.name} (${choice.map(i => i.name).join(\", \")})`, changes, \"flags.wfrp4e.trained\" : choice.map(i => i.id)})\r\n    this.item.updateSource({\"system.specification.value\" : `${choice.map(i => i.name).join(\", \")}`})\r\n}",
  "KICZPwLvbUSxbDrE": "//*** Spaczenie Umysłu\r\nlet table = game.wfrp4e.tables.findTable(\"mutatemental\");\r\nif (!table)\r\n{\r\n\tui.notifications.error(\"Nie odnaleziono tabeli o kluczu: mutatemental\")\r\n}\r\nlet result = (await table.roll()).results[0];\r\nlet uuid = `Compendium.${result.documentCollection}.${result.documentId}`\r\nlet item = await fromUuid(uuid);\r\n\r\nif (item)\r\n{\r\n    this.script.notification(`Dodano: ${item.name}`)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [item])\r\n}\r\nelse \r\n{\r\n    ui.notifications.error(\"Nie odnaleziono przddmiotu o kluczu: \" + uuid)\r\n}",
  "kiJ6AiaYVUjt6aV6": "//*** Rozkwaszone usta\r\nteeth = await fromUuid(\"Compendium.wfrp4e-core.items.fBcZhOBn8IpoVqQ1\")\r\nteeth = teeth.toObject();\r\n\r\nlet roll = await new Roll(\"1d10\").roll();\r\nroll.toMessage(this.script.getChatData({flavor : \"Utracono Zęby\"}))\r\nteeth.system.location.value = `${roll.total} ${teeth.system.location.value}`\r\nthis.actor.createEmbeddedDocuments(\"Item\", [teeth])",
  "kIM4Fs1lFVV7TSnj": "//*** Sneaky Stabbin'\r\nthis.actor.modifyAdvantage(1);",
  "KIoVBinAZK8sMOqD": "\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty : \"average\"}, skipTargets: true, appendTitle :  \" - Uporczywa Rana\"})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    fromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\").then(disease => {\r\n        this.actor.createEmbeddedDocuments(\"Item\", [disease.toObject()])\r\n        this.script.scriptNotification(\"Otrzymano: \" + disease.name)\r\n    })\r\n}\r\n",
  "KJLAan0glJlyOyqF": "//*** Świecąca skóra\r\nthis.actor.getActiveTokens().forEach(t => t.document.update({light : {\r\n    \"dim\": 10,\r\n    \"bright\": 5,\r\n    \"alpha\": 0.5,\r\n    \"animation\": {\r\n        \"speed\": 4,\r\n        \"intensity\": 4,\r\n        \"type\": \"flame\",\r\n    },\r\n    \"color\": \"#ac9e6c\",\r\n}}));",
  "kkC5EhqA05U6U0gU": "//*** Złe oko\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\n\r\n// Kind of insane but whatever\r\nlet opposedResult = test.opposedMessages[0]?.system.opposedHandler?.resultMessage?.system.opposedTest?.result\r\n\r\nif (opposedResult?.winner == \"attacker\")\r\n{\r\n    if (opposedResult.differenceSL < 6)\r\n    {\r\n        this.actor.addCondition(\"fatigued\", Math.floor(opposedResult.differenceSL / 2))\r\n    }\r\n    else if (opposedResult.differenceSL >= 6)\r\n    {\r\n        this.actor.addCondition(\"broken\");\r\n    }\r\n}",
  "KkjkYAGI9Em1NgiQ": "//*** Zestaw na zatrucia\r\nif (this.item.system.quantity.value) \r\n{\r\n    this.item.system.reduceQuantity();\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Heal\"), { appendTitle: ` - ${this.effect.name}`, skipTargets: true })\r\n    await test.roll();\r\n    if (test.succeeded) \r\n    {\r\n        let actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n        actor.applyEffect({ effectData: [this.item.effects.contents[0].convertToApplied()] })\r\n    }\r\n    else \r\n    {\r\n        this.script.notification(\"Test Leczenia nie powiódł się!\", \"error\");\r\n    }\r\n}\r\nelse \r\n{\r\n    this.script.notification(\"Nic nie zostało!\", \"error\")\r\n}",
  "KmngDrPD72xn22kZ": "if (this.actor.Species.toLowerCase() != \"skaven\") {\r\n    this.actor.setupCharacteristic(\"t\", {skipTargets: true, appendTitle :  ` - Użyto ${this.effect.name}`, fields: { difficulty: \"difficult\" } }).then(async test => {\r\n      await test.roll()\r\n      if (test.failed) \r\n      {\r\n        let toughnessLost = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n        this.actor.update({ \"system.characteristics.t.initial\": this.actor.characteristics.t.initial - toughnessLost })\r\n        this.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b> Utracone punkty Wytrzymałości: ${toughnessLost}`)\r\n      }\r\n    })\r\n  }",
  "kMSdRskYDI2J1gnp": "//*** Winded\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"average\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();  \r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\");\r\n}\r\n  ",
  "kmsGLWGxCY8Z8jVG": "//*** Święte Wizje\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Intuition\");",
  "KnwYZbeRSBA94hfl": "//*** Amputowany palec u ręki\r\nif (!args.flags.lostFingers)\r\n{\r\n\targs.flags.lostFingers = true;\r\n\targs.fields.modifier -= 5 * this.actor.flags.useless[this.item.system.location.key]\r\n}",
  "KPQfupKuaf4LCv4R": "const talents = await Promise.all([\"Intrygant\", \"Percepcja Magiczna\"].map(game.wfrp4e.utility.findTalent))\r\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {fromEffect : this.effect.id})",
  "KQzbrpb0T5a7it4k": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.vMYEkrWj0ip6ZOdv\");\r\nlet data = item.toObject();\r\ndata.name += ` (Choroby)`;\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "KSjsDlsx3DD6cT16": "//*** Łapówkarz\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Bribery\");",
  "KTBVDHUndI3qDOXM": "//*** Złamany nos\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"))\r\nawait test.roll();\r\nif (!test.succeeded)\r\n{\r\n    args.actor.addCondition(\"stunned\")\r\n}",
  "KuuWAhoSzk0rCxxw": "//*** Slippery Skin\r\nargs.fields.modifier += -20;",
  "KUx0deSF3xNzMucL": "//*** Talent Artystyczny\r\nreturn args.skill?.name.includes(game.i18n.localize(\"NAME.Art\"));",
  "kvaN100w0nBUlLbj": "let poisoned = this.actor.hasCondition(\"poisoned\")\r\nif (poisoned)\r\n{\r\n    this.script.scriptMessage(\"Niewrażliwość na trucizny!\")\r\n    poisoned.delete()\r\n}",
  "KVuPduDztyMZQNt9": "//*** Ziemnowodny\r\nargs.fields.slBonus += this.actor.system.characteristics.ag.bonus",
  "kWynO1lQzjiSs8RK": "//*** Żyłka Handlowa\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Haggle\");",
  "kYiDBPRKIokFkr4Z": "if (args.item.type  == \"skill\" && args.item.name == \"Broń Zasięgowa (Łuk)\")\r\n{\r\n     args.item.system.modifier.value += 20;\r\n}",
  "kYmscP2HuXjDovBD": "//*** Spryt Ranalda\r\nreturn args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"))\r\n",
  "KyswmGj1uG3QS3ng": "//*** Wyssanie życia\r\nargs.applyAP = false;",
  "L2cdQppcPwxz24hN": "//*** Jarred Arm\r\nreturn !args.weapon",
  "L89UcafRHqUfxoux": "//*** Skręcone kolano\r\nlet injury = await fromUuid(\"Compendium.wfrp4e-core.items.3S4OYOZLauXctmev\")\r\ninjury.updateSource({\"system.location.key\" : this.item.system.location.key})\r\nthis.actor.createEmbeddedDocuments(\"Item\", [injury], {fromEffect: this.effect.id})",
  "l8qFKSnMpy4P7XQR": "//*** Ulicznik\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));",
  "L9eAtDyaoHvqryk4": "//*** Groźny\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Intimidate\");",
  "laptAldsT0Fm1rDt": "let blunt = await Dialog.confirm({label : \"test\", content :`<p>Zastosuj zmniejszenie obrażeń obuchowych? (-3)</p>`})\r\n\r\nif (blunt)\r\n{\r\n    args.modifiers.other.push({label : this.effect.name, details : \"Zmniejszenie Obrażeń Obuchowych\", value : -3})\r\n}",
  "LAyLbcC0lOPwZP3U": "//*** Oczyszczający płomień\r\nthis.actor.addCondition(\"ablaze\", parseInt(this.effect.sourceTest.result.SL))",
  "LedRsrVo2f7lm3Ix": "//*** Groźny\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Intimidate\");",
  "LeKLtvEDrWh4yHsx": "//*** Mowa zwierząt\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.CharmAnimal\") || args.skill?.name.includes(game.i18n.localize(\"NAME.AnimalTraining\"));",
  "lFO6XdfUODmFArqx": "//*** Bursztynowa włócznia\r\nargs.actor.addCondition(\"bleeding\")",
  "lhemR8EP5tGNKout": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {fields: {difficulty : \"average\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context : {failure : \"Cierpisz na Irraconalne Lęki\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    msg = `<p>@UUID[${this.effect.sourceItem.uuid}]{Irraconalne Lęki} Roll: <a class=\"inline-roll\"><i class=\"fas fa-dice-d20\"></i>${Math.ceil(CONFIG.Dice.randomUniform() * 10)}</a></p>`\r\n    if (test.result.roll % 11 == 0 || test.result.roll == 100)\r\n    {\r\n        msg += `<p><b>${this.actor.prototypeToken.name}</b>: Dodatkowo, otrzymuje 1 punkt zepsucia. W przypadku mutacji, wylosuj @Table[mutatemental]{Psychiczną Mutację}</p>`\r\n        let newCorruption = Number(this.actor.status.corruption.value) + 1\r\n        this.actor.update({\"system.status.corruption.value\" : newCorruption})\r\n    }\r\n\r\n    this.script.scriptMessage(msg);\r\n}\r\n",
  "lII4KMRblqwFBlsV": "let characteristics = {\r\n  \"ws\" : 10,\r\n  \"bs\" : 0,\r\n  \"s\" : 0,\r\n  \"t\" : 0,\r\n  \"i\" : 10,\r\n  \"ag\" : 0,\r\n  \"dex\" : 0,\r\n  \"int\" : 20,\r\n  \"wp\" : 10,\r\n  \"fel\" : 15\r\n}\r\nlet skills = [\"Splatanie Magii\", \"Charyzma\", \"Kuglarstwo (Taniec)\"]\r\nlet skillAdvancements = [0, 6, 3]\r\nlet talents = [\"Atrakcyjny\", \"Rozproszenie Uwagi\", \"Naśladowca\"]\r\nlet traits = [\"Dekoncentrujący\", \"Latanie (6)\", \"Rzucanie Czarów (Magia Prosta)\"]\r\nlet trappings = [];\r\nlet items = [];\r\nlet spells = [\"Błędne ogniki\", \"Uśpienie\"];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n  updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n  let skill = skills[index]\r\n  let skillItem;\r\n  skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n  if (skillItem)\r\n      skillItem.system.advances.value += skillAdvancements[index]\r\n  else \r\n  {\r\n      skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n      skillItem = skillItem.toObject();\r\n      skillItem.system.advances.value = skillAdvancements[index];\r\n      items.push(skillItem);\r\n  }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n  let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n  if (talentItem)\r\n  {\r\n      items.push(talentItem.toObject());\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n  }\r\n}\r\n\r\nconst traitRegex = /(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm\r\nfor (let trait of traits)\r\n{\r\n  let traitMatches = trait.matchAll(traitRegex).next().value\r\n  let traitName = traitMatches[1]\r\n  let traitVal = traitMatches[2] || traitMatches[4] // could be match 2 or 4 depending on if there's a specialization\r\n  let traitSpec = traitMatches[3]\r\n\r\n  let traitItem;\r\n  try {\r\n      traitItem = await WFRP_Utility.findItem(traitName, \"trait\")\r\n  }\r\n  catch { }\r\n  if (!traitItem) {\r\n      ui.notifications.warn(`Could not find ${trait}`, {permanent : true})\r\n  }\r\n  traitItem = traitItem.toObject()\r\n\r\n  if (Number.isNumeric(traitVal))\r\n  {\r\n      traitItem.system.specification.value = traitName.includes('Broń','Rogi','Atak Ogonem','Macki','Ugryzienie') ? traitVal - parseInt(characteristicValues[3]/10) : traitVal;\r\n      traitItem.name = (traitItem.name +  ` ${traitSpec ? \"(\"+ traitSpec + \")\" : \"\"}`).trim()\r\n  }\r\n  else \r\n      traitItem.system.specification.value = traitSpec\r\n\r\n  items.push(traitItem)\r\n\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n  let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n  if (trappingItem)\r\n  {\r\n      trappingItem = trappingItem.toObject()\r\n\r\n      equip(trappingItem)\r\n\r\n      items.push(trappingItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n  }\r\n}\r\n\r\nfor (let spell of spells) \r\n{\r\n  let spellItem = await game.wfrp4e.utility.findItem(spell)\r\n  if (spellItem)\r\n  {\r\n      spellItem = spellItem.toObject()\r\n\r\n      items.push(spellItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${spell}`, {permanent : true})\r\n  }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\n\r\nfunction equip(item)\r\n{\r\n  if (item.type == \"armour\")\r\n      item.worn = true\r\n  else if (item.type == \"weapon\")\r\n      item.equipped = true\r\n  else if (item.type == \"trapping\" && item.trappingType?.value == \"clothingAccessories\")\r\n      item.worn = true\r\n}",
  "LkPtgN9A36OI6Frh": "//*** Władcza Postura\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Leadership\");",
  "LlRhPGorLl5qJCU8": "//*** Uśpienie\r\nif (this.actor.hasCondition(\"prone\")) \r\n{\r\n    this.actor.addCondition(\"unconscious\");\r\n}\r\nelse \r\n{\r\n    this.actor.addCondition(\"prone\");\r\n}",
  "lol5J6h0pErzM71s": "//*** Crew Commander\r\nreturn args.weapon?.system.properties.flaws.crewed",
  "lOzkngzye4RmvALp": "//*** Bezbożny szał\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.DrNUTPeodEgpWTnT\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id});\r\nthis.script.notification(\"Dodano: \" + item.name)",
  "Lp261O9fgEXmgPf3": "//*** Czempion\r\n// If this actor wins a defending test, swap the test\r\nif (!args.opposedTest.result.swapped && args.opposedTest.result.winner == \"defender\" && args.opposedTest.attackerTest.result.damage)\r\n{\r\n    await args.opposedTest.swap(this.effect.label);\r\n}",
  "Lpv2N9LK9loeumiW": "if (this.actor.uuid != this.effect.sourceActor.uuid)\r\n{\r\n    this.actor.setupSkill(game.i18n.localize(\"NAME.Athletics\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields : {difficulty: \"hard\"}, context : {failure : `<strong>${this.effect.name}</strong>: Nie można się poruszyć lub wykonać akcji`}}).then(test => {\r\n       test.roll();\r\n    })\r\n}",
  "LQEWSN5KnHHATPsf": "//*** Zaraza\r\nif (args.totalWoundLoss > 0)\r\n{\r\n    this.script.message(`<b>${args.actor.name}</b> musi zdać <b>Prosty (+40) Test Odporności</b> lub otrzyma @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Ropiejącą Ranę}`, {whisper: ChatMessage.getWhisperRecipients(\"GM\")});\r\n}",
  "lQJ68n3y1xDyNicE": "//*** Strzał w Dziesiątkę\r\nreturn !args.options.sizeModifier && args.item?.system?.attackType != \"ranged\"",
  "Lu27iXtJVkrJ8bOx": "//*** Szczur Tunelowy\r\nreturn !args.skill?.name?.includes(game.i18n.localize(\"NAME.Stealth\"))",
  "lU4s3UTtBkU38djI": "this.actor.addCondition(\"entangled\")\r\nlet msg = `<b>${this.actor.prototypeToken.name}</b>: Utracono 1 Punkt Żywotności oraz otrzymano 1 Stan @Condition[Pochwycenie].`\r\nthis.script.scriptMessage(msg)\r\nthis.actor.modifyWounds(-1)",
  "lvjcddwRiN9iGruy": "let test = await this.actor.setupCharacteristic(\"t\", { appendTitle: ` - ${this.effect.name}`, fields: { difficulty: \"challenging\" } })\r\nawait test.roll();\r\n\r\nif (test.failed) \r\n{\r\n    let ageAdded = Math.ceil(CONFIG.Dice.randomUniform() * 10) + Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let ws = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let bs = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let s = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let t = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let ag = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let dex = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n\r\n    let currentAge = parseInt(this.actor.system.details.age.value)\r\n\r\n    let inline = `<a class=\"inline-roll\" data-tooltip=\"@TT\"><i class=\"fas fa-dice-d20\"></i>@ROLL</a>`\r\n    let msg =\r\n        `<p><b>${this.actor.prototypeToken.name}</b>: starzeje się o ${inline.replace(\"@ROLL\", ageAdded).replace(\"@TT\", \"2d10\")} lat oraz traci</p>\r\n      <p>${inline.replace(\"@ROLL\", ws).replace(\"@TT\", \"1d10\")} <b>Walki Wręcz</b></p>\r\n      <p>${inline.replace(\"@ROLL\", bs).replace(\"@TT\", \"1d10\")} <b>Umiejętności Strzeleckich</b></p>\r\n      <p>${inline.replace(\"@ROLL\", s).replace(\"@TT\", \"1d10\")} <b>Siły</b></p>\r\n      <p>${inline.replace(\"@ROLL\", t).replace(\"@TT\", \"1d10\")} <b>Wytrzymałości</b></p>\r\n      <p>${inline.replace(\"@ROLL\", ag).replace(\"@TT\", \"1d10\")} <b>Zwinności</b></p>\r\n      <p>${inline.replace(\"@ROLL\", dex).replace(\"@TT\", \"1d10\")} <b>Zręczności</b></p>\r\n `\r\n    this.script.scriptMessage(msg);\r\n\r\n    let characteristics = duplicate(this.actor.system.characteristics)\r\n\r\n    characteristics.ws.initial -= ws\r\n    characteristics.bs.initial -= bs\r\n    characteristics.s.initial -= s\r\n    characteristics.t.initial -= t\r\n    characteristics.ag.initial -= ag\r\n    characteristics.dex.initial -= dex\r\n\r\n    this.actor.update({ \"system.characteristics\": characteristics, \"data.details.age.value\": ageAdded + currentAge })\r\n}",
  "lwVhn4bSXJ3eoT9q": "//*** Sabre\r\nif (this.item.system.weaponGroup.value == \"basic\")\r\n{\r\n    let slash = this.item.system.qualities.value.find(i => i.name == \"slash\")\r\n    if (slash)\r\n    {\r\n        slash.value = \"2A\"\r\n    }\r\n}",
  "LyAK0dVDS5L09yq2": "//*** Krew ziemi\r\nlet caster = this.effect.sourceActor\r\n\r\nif (caster)\r\n{\r\n    let bonus = caster.system.characteristics.wp.bonus\r\n    this.actor.modifyWounds(bonus)\r\n\r\n    this.script.message(`<strong>${this.actor.prototypeToken.name}</strong>: Uleczone Punkty Żywotności: ${bonus}`);\r\n}",
  "M0XhKnWjG14pk3iH": "return !args.skill?.name.includes(\"Splatanie Magii\") && args.type != \"channelling\" && args.skill?.name != game.i18n.localize(\"NAME.Charm\") && !args.skill?.name.includes(\"Język (Magiczny)\") && args.type != \"cast\"",
  "M2FshTX4PjKFVU8y": "//*** Amputowane ucho\r\nargs.flags.earCount = Number.isNumeric(args.flags.earCount) ? args.flags.earCount+1 : 1;\r\nif (args.characteristic == \"fel\")\r\n{\r\n\targs.fields.modifier -= 5;\r\n}\r\nif (args.flags.earCount == 2 && args.skill?.name == game.i18n.localize(\"NAME.Perception\"))\r\n{\r\n\targs.fields.modifier -= 20;\r\n}\r\n",
  "m3qEVO5fseV6KHXa": "//*** Zerwane więzadło\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.qn4ZpvTQIX4rcJDl\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})",
  "m58MpMZBblpq5LJu": "//*** Groźny\r\nargs.prefillModifiers.slBonus++;\r\nargs.prefillModifiers.successBonus++;\r\n",
  "M5bh0heeafA2fQQ8": "if (args.test.spell?.getFlag(\"wfrp4e\", \"boonOfTzeentch\"))\r\n{\r\n    if (args.test.result.minormis || args.test.result.majormis || args.test.result.catastrophicmis)\r\n    {\r\n        this.script.scriptMessage(`<strong>${this.effect.name}</strong> opuszcza twój umysł z obrzydzeniem i wymazuje się z twojej księgi!`)\r\n        this.effect.sourceItem.delete();\r\n    }\r\n}",
  "m8qBlbH7ROoqa22o": "//*** Rapid Reload\r\nreturn args.options.reload",
  "M9VgeYGiUO97ZUW4": "//*** Zmiażdżona żuchwa\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.hCadFsTRvLN9faaY\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Szczęka\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (!test.succeeded)\r\n{\r\n\targs.actor.addCondition(\"unconscious\")\r\n}\r\n\r\n",
  "ma0sWhebqwdRHWvY": "//*** Trained - Półgryf Wierzchowiec\r\nif (!args.flags.trained)\r\n{\r\n    args.flags.trained = true;\r\n    args.fields.modifier += 10;\r\n}",
  "maKr58mvvyKxFyC3": "//*** Święta Nienawiść\r\nif (args.item.type == \"prayer\" && (args.item.damage.value || args.item.damage.dice))\r\n    args.item.damage.value += \"+1\"",
  "mBcLf11upaHS8AQq": "//*** Kolczaste łuski\r\nthis.actor.status.addArmour(1, {source: this.effect})",
  "McLR9YcgVUG3MooC": "//*** Transmutacja Chamonu\r\nargs.applyTB = false;",
  "MFKhU9vp8bQpHP3I": "//*** Groza - Varghulf\r\nlet value = parseInt(this.item.specification.value)\r\nlet name = this.actor.prototypeToken.name\r\n\r\nif (game.user.isGM && game.user.targets.size)\r\n{\r\n  game.user.targets.forEach(t => {\r\n    t.actor.applyTerror(value, name)\r\n  })\r\n  game.user.updateTokenTargets([]);\r\n}\r\nelse \r\n{\r\n  game.wfrp4e.utility.postTerror(value, name)\r\n}",
  "MfxWXZwaZUjGSBqw": "if (this.actor.hasCondition(\"ablaze\"))\r\n{\r\n    this.script.scriptNotification(\"Niewrażliwość na Podpalenie\")\r\n    await this.actor.hasCondition(\"ablaze\")?.delete()\r\n}",
  "MfxzwJz2o9ho2hOM": "//*** Przyrządzanie Mikstur\r\nreturn args.skill?.name == \"Rzemiosło (Aptekarstwo)\";",
  "mgLGN1XPzPE4dReN": "//*** Złamany nos\r\nargs.fields.slBonus--;",
  "MgTqCMRjxhezT73T": "//*** Ogłuszenie\r\nreturn args.fields.hitLocation == \"head\" && args.weapon?.system.properties.qualities.pummel",
  "MgZreqq3Jua10c8s": "//*** Zatrucie Krwi\r\nreturn ![\"ws\", \"bs\", \"s\", \"fel\", \"ag\", \"t\", \"dex\"].includes(args.characteristic)",
  "Mhb67xufvA9uWO21": "//*** Atak Ogonem - Bazyliszek\r\nlet actorSize = game.wfrp4e.config.actorSizeNums[args.actor.details.size.value]\r\nlet attackerSize = game.wfrp4e.config.actorSizeNums[args.attacker.details.size.value]\r\n\r\nif (attackerSize > actorSize)\r\n{\r\n   args.actor.addCondition(\"prone\")\r\n   this.script.message(`<strong>Atak Ogonem</strong>: ${args.actor.prototypeToken.name} otrzymuje Stan @Condition[Powalenie]`);\r\n}",
  "Mir4FMHQRdVqazAF": "//*** Atak Językiem (12) - Dżabersmok\r\nlet actorSize = game.wfrp4e.config.actorSizeNums[args.actor.details.size.value]\r\nlet attackerSize = game.wfrp4e.config.actorSizeNums[args.attacker.details.size.value]\r\n\r\nif (attackerSize > actorSize)\r\n{\r\n   let msg = `<b>Atak Językiem</b>: ${args.actor.prototypeToken.name} otrzymuje Stan @Condition[Pochwycenie]`;\r\n   await args.actor.addCondition(\"entangled\");\r\n   if (actorSize <= 2)\r\n   {\r\n       msg += `oraz Stan @Condition[Związany Walką]`;\r\n   }\r\n   this.script.message(msg, {speaker : {alias: args.attacker.prototypeToken.name}})\r\n}",
  "mJ9eMPub4epJSf00": "//*** Shieldsman\r\nreturn args.weapon?.system.qualities.value.find(i => i.name == \"shield\") && this.actor.attacker",
  "MkEcdViivk7abf1x": "//*** Silny Cios\r\nargs.actor.flags.meleeDamageIncrease += 1",
  "MnXny8SCh6OceJc9": "//*** Mądrość sowy\r\nreturn args.characteristic == \"int\"",
  "mPxmCsXYirAIT913": "//*** Zniszczenie pomniejszego demona\r\nlet key = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.characteristics, this.effect.img), 1, \"Wybierz Cechę\");\r\n\r\nthis.effect.updateSource({changes : [{key : `system.characteristics.${key[0].id}.modifier`, mode : 2, value : 10}]})",
  "mr8qm5Bg6k1idZ6Q": "return args.item?.name == \"Muzyka (Lutnia)\"",
  "mRvLsSVxNyt8LVZb": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.GRRN3XAKIpEVCY7z\")\r\nlet data = item.toObject();\r\ndata.name += \" (Do ustalenia)\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "Msygc7oQQPB5fw0b": "//*** Niepokalana niewinność\r\nlet test = this.effect.sourceTest;\r\nif (test.failed && (test.result.roll % 11 == 0 || test.result.roll == 100))\r\n{\r\n\tlet points = await new Roll(\"1d10\").roll();\r\n\tgame.dice3d?.showForRoll(points)\r\n\tthis.actor.update({\"system.status.corruption.value\" : this.actor.system.status.corruption.value + points.total})\r\n\tthis.script.message(`Otrzymane punkty Zepsucia: ${points.total} `);\r\n}\r\nelse \r\n{\r\n\tlet points = this.effect.sourceTest.result.overcast.usage.other.current;\r\n\tthis.actor.update({\"system.status.corruption.value\" : this.actor.system.status.corruption.value - points})\r\n\tthis.script.message(`Utracone punkty Zepsucia: ${points} `);\r\n}",
  "mTnmPcjWmvScIBWY": "return args.skill?.name.includes(\"Splatanie Magii\") || args.type == \"channelling\"",
  "mV4Tmc0yfpL09KV7": "//*** Sieć - Olbrzymi Pająk\r\nargs.actor.addCondition(\"entangled\")",
  "MwUzyAgd0yPnmZCH": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.klCJX0mNpXYH5AIx\")\r\nlet data = item.toObject();   \r\ndata.name = data.name.replace(\"x\", \"Nieznajomi\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id});",
  "mziJBUYcsrhkdcCJ": "//*** Lost Footing\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{  \r\n    this.actor.addCondition(\"prone\")\r\n}",
  "N2MeOlf0GjPiRcSb": "//*** Drganie\r\nlet test = await this.actor.setupCharacteristic(\"dex\", {context : {failure : \"Upuszczenie Przedmiotu\"}})\r\nawait test.roll();",
  "n5RJqJL9fdRIxkuN": "//*** Bite - Półgryf Wierzchowiec\r\nif (this.actor.system.status.advantage.value > 0)\r\n{\r\n    await this.actor.modifyAdvantage(-1);\r\n    this.script.notification(\"Zmniejszono Punkty Przewag\")\r\n}\r\nelse \r\n{\r\n    return this.script.notification(\"Niewystarczająca Liczba Punktów Przewag!\", \"error\")\r\n}\r\n\r\nlet test = await this.actor.setupTrait(this.item)\r\nawait test.roll();",
  "N7nGncsPrTz2ZbDA": "//*** Woltyżerka\r\nreturn !args.options.dodge || !this.actor.isMounted",
  "N8hA6ysHCTlLd8Kj": "let characteristics = {\r\n    \"ws\" : 0,\r\n    \"bs\" : 0,\r\n    \"s\" : 0,\r\n    \"t\" : 5,\r\n    \"i\" : 15,\r\n    \"ag\" : 0,\r\n    \"dex\" : 10,\r\n    \"int\" : 15,\r\n    \"wp\" : 15,\r\n    \"fel\" : 0\r\n}\r\nlet skills = [\"Splatanie Magii\", \"Opanowanie\", \"Unik\", \"Występy (Gawędziarstwo)\", \"Intuicja\", \"Język (Magiczny)\", \"Wiedza (Magia)\", \"Percepcja\"]\r\nlet skillAdvancements = [5, 15, 10, 10, 15, 10, 10, 20]\r\nlet talents = [\"Magia Tajemna (Dowolna Tradycja)\", \"Magia Prosta\", \"Percepcja Magiczna\"]\r\nlet trappings = [\"Broń ręczna\", \"Kostur\", \"Rytualna szata zawierająca wiele ornamentów i zdobień\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        items.push({name : trapping, type : \"trapping\", \"system.trappingType.value\" : \"clothingAccessories\"})\r\n        //ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "Na7Nanl9YmxZlTo7": "return args.type != \"cast\" && args.type != \"channelling\"",
  "naF5EWr1CBkYRZTK": "//*** Niszczyciel strzał (Śmierć)\r\nif (args.opposedTest?.attackerTest?.item?.system?.isRanged) \r\n{\r\n    let choice = await Dialog.wait({\r\n        title: this.effect.name,\r\n        content: `<p>Zniwelować Obrażenia dzięki: <strong>${this.effect.name}</strong>?`,\r\n        buttons: {\r\n            yes: {\r\n                label: \"Tak\",\r\n                callback: () => {\r\n                    return true;\r\n                }\r\n            },\r\n            no: {\r\n                label: \"Nie\",\r\n                callback: () => {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    if (choice)\r\n    {\r\n        args.abort = `<strong>${this.effect.name}</strong>: Obrażenia Zniwelowane`\r\n    }\r\n}",
  "nD2QVg3DrPK3foMf": "args.actor.setupSkill(\"Unik\", { fields: { difficulty: \"average\" } }).then(async test => {\r\n      await test.roll();\r\n      if (test.failed) {\r\n        await args.actor.addCondition(\"bleeding\")\r\n        await args.actor.addCondition(\"entangled\")\r\n      }\r\n    })",
  "NdquQqyuOkGCj8Uo": "let darkvision = await fromUuid(\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\")\r\nlet fear = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\")\r\nlet acutesense = await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")\r\nfear = fear.toObject();\r\nfear.system.specification.value = 1;\r\nacutesense = acutesense.toObject();\r\nacutesense.name += \" (Węch)\";\r\nthis.actor.createEmbeddedDocuments(\"Item\", [darkvision, fear, acutesense], {fromEffect : this.effect.id})",
  "NDvNGATDM2xPFJK0": "//*** Zgruchotana szczęka\r\nbrokenbone = await fromUuid(\"Compendium.wfrp4e-core.items.hCadFsTRvLN9faaY\")\r\nteeth = await fromUuid(\"Compendium.wfrp4e-core.items.fBcZhOBn8IpoVqQ1\")\r\ntongue = await fromUuid(\"Compendium.wfrp4e-core.items.rkJA1DlK51QuRlJy\")\r\nbrokenbone = brokenbone.toObject();\r\nteeth = teeth.toObject();\r\ntongue = tongue.toObject();\r\n\r\n\r\nlet roll = await new Roll(\"1d10\").roll();\r\nroll.toMessage(this.script.getChatData({flavor : \"Utrata Zębów\"}))\r\n\r\nteeth.system.location.value = `${roll.total} ${teeth.system.location.value}`\r\nbrokenbone.system.location.value = \"Szczęka\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [brokenbone, teeth, tongue])\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty : \"vhard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"unconscious\")\r\n}",
  "neaaVy6D6tfcst5P": "//*** Tropiciel\r\nargs.fields.slBonus += this.actor.characteristics.i.bonus;\r\n",
  "nGTxNWBUBgTr87wU": "if (args.opposedTest.result.differenceSL >= 0 && args.opposedTest.result.differenceSL <= 2 && args.opposedTest.result.winner == \"attacker\")\r\n{ \r\n    this.script.scriptMessage(`Staje się zatrzymany w zbroi lub ciele przeciwnika. See @UUID[${this.item.uuid}]{${this.item.name}}.`, {speaker : {alias : this.item.name}, blind: true, whisper : ChatMessage.getWhisperRecipients(\"GM\")});\r\n}",
  "NI3ZzIAlpQfVSjvf": "//*** Strach\r\nif (isNaN(parseInt(this.item.system.specification.value)))\r\n{\r\n    let value = await ValueDialog.create({text : \"Ustal Poziom Strachu\", title : this.effect.name});\r\n    if (value)\r\n    {\r\n     this.item.updateSource({\"system.specification.value\" : value});\r\n    }\r\n}",
  "njPP9wDAsdh4WHIj": "if (args.totalWoundLoss > 0 && [\"trait\", \"weapon\"].includes(args.opposedTest.attackerTest.item?.type))\r\n{\r\n     this.script.scriptMessage(`<b>Infekcja: ${args.actor.name}</b> musi zdać <b>Prosty (+40) Test Odporności</b> lub otrzyma @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Ropiejącą Ranę}`, {whisper: ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "nkbTnaeBpthyhw4J": "//*** Drugie proroctwo Amul\r\nlet fortunePoints = this.effect.sourceTest.result.overcast.usage.other.current\r\nlet current = this.actor.status.fortune.value\r\n\r\nthis.actor.update({\"system.status.fortune.value\" : fortunePoints + current})\r\n\r\nthis.script.message(`<b>${this.actor.prototypeToken.name}</b>: Punkty Szczęścia zwiększone z ${current} do ${fortunePoints + current}`)",
  "NkqtQaLEGYst0PUO": "//*** Talizman\r\nif (this.actor.has(game.i18n.localize(\"NAME.MagicResistanceTalent\"), \"talent\")) \r\n    return\r\n\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.eowbsW6oHGSNJmxV\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "NnA4zpuO6iUXKhH7": "//*** Niebiańska tarcza\r\nif ((args.opposedTest.attackerTest.item && args.opposedTest.attackerTest.item.isMelee) || (args.opposedTest.attackerTest.item && !args.opposedTest.attackerTest.item.name.includes(game.i18n.localize(\"NAME.Ranged\"))))\r\n{\r\n    let AP = parseInt(this.effect.sourceTest.result.SL)\r\n    args.modifiers.ap.value += AP;\r\n    args.modifiers.ap.magical += AP;\r\n    args.modifiers.ap.details.push(`${this.effect.name} (${AP})`)\r\n}",
  "NNytXz5XFPrEF6dw": "//*** Gaping Wound\r\nif (args.opposedTest.result.hitloc.value == this.item.system.location.key && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n}\r\n    ",
  "NrVFrIXM8GnIbojv": "//*** Młot Sigmara\r\nargs.item.system.damage.value = `SB + ${this.actor.system.characteristics.fel.bonus}`;",
  "nSXzktHyNjGUXjaw": "//*** Latanie - Pegaz\r\nreturn args.item?.system.isRanged",
  "nvrFhHHVq3KzirlR": "//*** Spryt Ranalda\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"))\r\n",
  "nxNqWmmF6mJTnrLo": "//*** Zerwanie mięśni ramienia (poważne)\r\nreturn args.weapon?.system.usesHands.includes(this.item.system.location.key);",
  "nYtAjSArsNbrU2ob": "//*** Ameliorative Elixir\r\nif ([\"ag\", \"i\", \"int\"].includes(args.characteristic))\r\n{\r\n    args.fields.modifier -= 10;\r\n}\r\nelse if ([\"wp\"].includes(args.characteristic))\r\n{\r\n    args.fields.modifier += 10;\r\n}",
  "o1zD8mej9TWKNxUq": "//*** Lęk - Goblin\r\nargs.fields.slBonus -= 1;",
  "o3JUBKLvE6bBxK2n": "//*** Zmiażdżona stopa\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), { fields: { difficulty: \"average\" } })\r\nawait test.roll();\r\nif (test.failed) \r\n{\r\n    await this.actor.addCondition(\"prone\")\r\n    let injury = await fromUuid(\"Compendium.wfrp4e-core.items.ZhMADOqoo0y8Q9bx\");\r\n    injury = injury.toObject()\r\n    let toes = Math.clamped(Math.abs(test.result.SL) + 1, 1, 5)\r\n    injury.system.location.key = this.item.system.location.key[0] + injury.system.location.value\r\n    if (injury.system.location.key[0] == \"r\")\r\n    {\r\n        injury.system.location.value = `${toes} Right ${injury.system.location.value}s`\r\n    }\r\n    else if (injury.system.location.key[0] == \"l\")\r\n    {\r\n        injury.system.location.value = `${toes} Left ${injury.system.location.value}s`\r\n    }\r\n    foundry.utils.setProperty(injury, \"system.wfrp4e.count\", toes)\r\n    this.actor.createEmbeddedDocuments(\"Item\", [injury])\r\n}",
  "O7lXFZLrLdFaShGR": "//*** Na Cztery Łapy\r\nargs.options.catfall = true;",
  "o88xuUConwt0vFLw": "//*** Uśmiech losu\r\nlet points = this.effect.sourceTest.result.overcast.usage.other.current;\r\n\r\nthis.actor.update({\"system.status.fortune.value\" : this.actor.system.status.fortune.value + points});\r\n\r\nthis.script.message(`Otrzymane Punkty Szczęścia: ${points}`)",
  "O9fc0hLHdkTgSuLg": "let bite = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")\r\nlet venom = await fromUuid(\"Compendium.wfrp4e-core.items.gFkRm9wS65qe18Xv\")\r\nlet biteData = bite.toObject();\r\nlet venomData = venom.toObject();\r\n\r\nbiteData.system.specification.value = 3 - this.actor.characteristics.s.bonus;\r\nvenomData.system.specification.value = \"Średni\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [biteData, venomData], {fromEffect : this.effect.id})",
  "Oa9FmLXRRZRpLrrq": "//*** Głupi\r\nlet test = await this.actor.setupTrait(this.item); \r\nawait test.roll();",
  "obIXhQXKFyyQoNNV": "this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {appendTitle: ` - ${this.effect.name}`, fields: { difficulty: \"average\" } }).then(async test => {\r\n    await test.roll()\r\n    if (test.failed) {\r\n        this.actor.modifyWounds(-1);\r\n        this.script.scriptMessage(\"Otrzymano 1 Ranę\")\r\n    }\r\n})",
  "OCFrGXAYfo9OYnhc": "//*** Złe zamiary\r\nreturn args.item?.system.magicMissile?.value || args.item?.system.attackType",
  "oDNfCNyt5KaUYmg2": "if(args.opposedTest.result.winner == \"defender\")\r\n{\r\n    let roll = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n    let msg = `Rzut: ${roll}.`\r\n    if (roll >= 7)\r\n    {\r\n          msg = `Atak uderza z PS w wysokości: ${roll - 6}.`\r\n    }\r\n    this.script.scriptMessage(msg, {blind: true,  whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "OeCgX3hIsfLfmGvC": "//*** Zmysł Bitewny\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Perception\"))\r\nawait test.roll();\r\nif (test.succeeded)\r\n{\r\n    this.actor.removeCondition(\"surprised\");\r\n}",
  "OeKeQAAcJhdI4Qky": "//*** Szał Bojowy\r\nif (this.actor.hasCondition(\"stunned\") || this.actor.hasCondition(\"unconscious\"))\r\n{\r\n\tthis.script.notification(\"Przerwany!\");\r\n\tawait this.effect.update({\"disabled\" : true})\r\n}",
  "OEy2lxvic37dRBEt": "let filters = [\r\n    {\r\n        property : \"type\",\r\n        value : \"spell\"\r\n    },\r\n    {\r\n        property : \"system.lore.value\",\r\n        value : \"petty\"\r\n    }\r\n]\r\n\r\nlet petty = await game.wfrp4e.apps.ItemDialog.createFromFilters(filters, 3, \"Wybierz 3 Zaklęcia Proste\")\r\n\r\n\r\nfilters = [\r\n    {\r\n        property : \"type\",\r\n        value : \"spell\"\r\n    },\r\n    {\r\n        property : \"system.lore.value\",\r\n        value : \"\"\r\n    }\r\n]\r\n\r\nlet arcane = await game.wfrp4e.apps.ItemDialog.createFromFilters(filters, 3, \"Wybierz 3 Zaklęcia Magii Tajemnej\")\r\n\r\nlet items = petty.concat(arcane).map(i => i.toObject())\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);",
  "Ofn6vDbP3fZ4UlSc": "//*** Poważna rana ucha\r\nargs.fields.modifier += -20;\r\n        ",
  "oGdsGPgJWcyWkiWl": "//*** Posłaniec śmierci\r\nthis.actor.addCondition(\"broken\")\r\n\r\nif (this.actor.has(game.i18n.localize(\"NAME.Undead\")))\r\n{\r\n    this.script.message(await this.actor.applyBasicDamage(this.effect.sourceTest.result.damage, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg: true}))\r\n}",
  "ogJBAXTXyhTqACPO": "//*** Zakażony\r\nreturn args.item?.system.attackType != \"melee\"",
  "OgSI0Z6SHjYuqKIz": "let blows = this.item.getFlag(\"wfrp4e\", \"blows\") || 0\r\nlet difficulties = Object.keys(game.wfrp4e.config.difficultyLabels)\r\n\r\nblows = Math.clamped(blows, 0, difficulties.length - 1)\r\nif (this.item.system.protects[args.opposedTest.result.hitloc.value])\r\n{\r\n    let difficulty = difficulties[blows];\r\n    this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {fields: {difficulty}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`}).then(async test => {\r\n        await test.roll();\r\n        if (test.failed)\r\n        {\r\n            this.script.scriptMessage(`${this.actor.name}: musi wydostać się z walki i uciekać, dopóki nie zda <strong>Wymagającego (+0) Testu Siły Woli</strong>`);\r\n            this.item.setFlag(\"wfrp4e\", \"failedCool\", true);\r\n        }\r\n    })\r\n}",
  "OGX4BneaYAnV25TO": "//*** Regeneracja\r\nlet chatData = { whisper: ChatMessage.getWhisperRecipients(\"GM\") }\r\nlet message = \"\"\r\n\r\nlet wounds = foundry.utils.duplicate(this.actor.status.wounds)\r\nlet regenRoll = await new Roll(\"1d10\").roll();\r\nlet regen = regenRoll.total;\r\n\r\nif (wounds.value >= wounds.max)\r\n    return\r\n\r\nif (wounds.value > 0) \r\n{\r\n    wounds.value += regen\r\n    if (wounds.value > wounds.max)\r\n    {\r\n        wounds.value = wounds.max\r\n    }\r\n    message += `<b>${this.actor.name}</b>: Odzyskane punkty Żywotności: ${regen}.`\r\n\r\n    if (regen == 10)\r\n    {\r\n        message += `<br>Dodatkowo zregenerowano krytyczną ranę.`;\r\n    }\r\n}\r\nelse if (regen >= 8) \r\n{\r\n    message += `<b>${this.actor.name}</b>: wylosowano ${regen} i odzyskano 1 punkt Żywotności.`;\r\n    wounds.value += 1\r\n    if (regen == 10)\r\n    {\r\n        message += `<br>Dodatkowo zregenerowano krytyczną ranę.`;\r\n    }\r\n}\r\nelse \r\n{\r\n    message += `<b>${this.actor.name}</b>: wylosowano ${regen} - brak efektu.`;\r\n}\r\n\r\nawait this.actor.update({ \"system.status.wounds\": wounds })\r\nthis.script.message(message, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
  "oHenUKtaS3jT5xQn": "//*** Mięsista macka\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.4xF7M6ylIiGntekh\")\r\nitem = item.toObject()\r\nitem.name = this.effect.name\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})\r\n",
  "OicQSEVZBbqLtrcf": "//*** Złote łzy\r\nlet choice = await ItemDialog.create(this.actor.itemTypes.critical, (this.effect.sourceTest.result.overcast.usage.other.current || 1), \"Wybierz krytyczne rany do zagojenia (nie można zregenerować utraconych części ciała)\");\r\n\r\nthis.script.message(`Uleczono: <strong>${choice.map(i => i.name).join(`, `)}</strong>`);\r\nthis.actor.deleteEmbeddedDocuments(\"Item\", choice.map(i => i.id))",
  "OJMgS8ZQv0j4tEFf": "//*** Zatrucie Krwi\r\nreturn [\"ws\", \"bs\", \"s\", \"fel\", \"ag\", \"t\", \"dex\"].includes(args.characteristic)",
  "okr3TtzpFoefUuJS": "//*** Złamany obojczyk\r\nlet item = await fromUuid('Compendium.wfrp4e-core.items.EaqlLRQigwnsEAXX')\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Obojczyk\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "okW06V9UiPC4Vcrn": "let characteristics = {\r\n    \"ws\" : 5,\r\n    \"bs\" : 0,\r\n    \"s\" : 5,\r\n    \"t\" : 5,\r\n    \"i\" : 10,\r\n    \"ag\" : 0,\r\n    \"dex\" : 0,\r\n    \"int\" : 0,\r\n    \"wp\" : 5,\r\n    \"fel\" : 5\r\n}\r\nlet skills = [\"Opanowanie\", \"Unik\"]\r\nlet skillAdvancements = [10, 10]\r\nlet talents = [\"Bitewny Refleks\", \"Nieugięty\"]\r\nlet trappings = [\"Skórzana kurta\", \"Skórzane nogawice\", \"Skórzany hełm\", \"Broń ręczna\", \"Włócznia\", \"Tarcza\"]\r\nlet items = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "OnkEe4ISru1hjJWP": "//*** Amputowane oko\r\nthis.actor.flags.useless[this.item.system.location.key] = true;",
  "oPg4se8iQRD14kmB": "let filters = [\r\n    {\r\n        property : \"type\",\r\n        value : \"weapon\"\r\n    },\r\n    {\r\n        property : \"system.weaponGroup.value\",\r\n        value : [\"twohanded\", \"polearm\"]\r\n    }\r\n]\r\n\r\nlet items = await game.wfrp4e.apps.ItemDialog.createFromFilters(filters, 1, \"Wybierz odpowiednią broń drzewcową lub dwuręczną\")\r\nitems = items.map(i => i.toObject())\r\n\r\nitems.forEach(i => equip(i))\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "oqgd9G6oI1ncPYLw": "//*** Rączy jeleń\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.CV9btQn09S9Fn8Jk\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {fromEffect : this.effect.id});",
  "OqLKL0PiCvYH2QxW": "//*** Wspinacz\r\nif (args.test.options.wallcrawler)\r\n{\r\n\tif (parseInt(args.test.result.SL) < 0 || args.test.failed)\r\n\t{\r\n\t\tif (parseInt(args.test.result.SL) < 0)\r\n\t\t{\r\n\t\t\targs.test.result.SL = \"+0\";\r\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalSuccess\");\r\n\t\t}\r\n\t\targs.test.result.outcome = \"success\"\r\n        args.test.result.other.push(`<strong>${this.effect.name}</strong>: Minimum +0 PS`)\r\n\t}\r\n}",
  "OqxeuZfZDfm9ax6h": "//*** Nierówne rogi\r\nthis.actor.system.status.addArmour(1, {locations : \"head\", source : this.effect})",
  "oV81zgbZsuTFG6L2": "//*** Dotyk Rhyi\r\nlet caster = this.effect.sourceActor;\r\n\r\nthis.actor.modifyWounds(caster.system.characteristics.fel.bonus);\r\n\r\nthis.script.message(`Uleczone Punkty Żywotności: ${caster.system.characteristics.fel.bonus}`);",
  "oW1gtYVT5nrxDjM7": "//*** Nadwyrężone kolano\r\nreturn args.characteristic != \"ag\"",
  "oWa7RkScnl6lR5vd": "if (args.test.characteristicKey == \"wp\") \r\n{\r\n    if (args.test.failed)\r\n    {\r\n        let item = await fromUuid(\"Compendium.wfrp4e-core.items.AGcJl5rHjkyIQBPP\")\r\n        let data = item.toObject();\r\n        this.actor.createEmbeddedDocuments(\"Item\", [data])\r\n        \r\n        this.script.scriptMessage(`Test Siły Woli nie powiódł się, <b>${this.actor.prototypeToken.name}</b>: otrzymano @UUID[Compendium.wfrp4e-core.items.AGcJl5rHjkyIQBPP] na [[1d10]] godzin`)\r\n    }\r\n}",
  "oWM43EdUiyHgUlfW": "//*** Hulaka\r\nif (args.test.item && args.test.item.name == game.i18n.localize(\"NAME.ConsumeAlcohol\"))\r\n    args.test.preData.canReverse = true",
  "OxsBnnVI3Smpknpb": "//*** Zimowy chłód\r\nif (this.actor.status.advantage.value && !this.actor.sameSideAs(this.effect.sourceActor))\r\n{\r\n    this.actor.modifyAdvantage(-1);\r\n    this.script.notification(`${this.actor.name}: utracono 1 Punkt Przewag`);\r\n}",
  "Oz7pWF9mEc1pQypj": "//*** Wstrząśnienie mózgu\r\nlet roll = await new Roll(\"1d10\").roll();\r\nroll.toMessage({flavor : this.effect.name, speaker : {alias : this.actor.prototypeToken.name}})\r\nthis.actor.addCondition(\"stunned\", roll.total)",
  "P29tT1eMMdAw3CPF": "//*** Zerwane ścięgno\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.3S4OYOZLauXctmev\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty: \"hard\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n\tthis.actor.addCondition(\"unconscious\")\r\n}",
  "PBW6IZtwawNHxB6y": "//*** Woltyżerka\r\nreturn args.options.dodge && this.actor.isMounted",
  "PdClojv7yNgQpOUc": "//*** Zwijane posłanie\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Endurance\");",
  "PeZYj8b0vedyJj00": "// This script needs to be separate because equipTransfer is off on the other effect, and thus won't execute when added to an actor\r\n\r\nlet mainEffect = this.item.effects.contents[0];\r\nif (mainEffect.name.includes(\"(Tradycja)\"))\r\n{\r\n    let choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.magicLores, this.item.img), 1, \"Wybierz Tradycja Magiczną\");\r\n    if (choice.length)\r\n    {\r\n        mainEffect.update({name : mainEffect.name.replace(\"Tradycja\", choice[0].name)})\r\n        this.item.update({name : this.item.name += ` (${choice[0].name})`})\r\n    }\r\n}\r\n\r\nthis.effect.delete();",
  "Ph3TdQw1lGiFr049": "    if (!args.test.context.phantasmal && \r\n      (this.actor.isOpposing || args.test.context.defending) && \r\n      args.test.result.roll % 11 == 0 && \r\n      args.test.succeeded && \r\n      [\"Język (Magiczny)\", \"Unik\"].includes(args.test.item?.name))\r\n    {\r\n         args.test.context.phantasmal = true; // Flag so items aren't readded if test is edited\r\n         let text = `<strong>${this.effect.name}</strong>: Dodano cechy Niestabilny i Ochrona`\r\n         args.test.result.other.push(text)  \r\n        this.script.scriptNotification(text);\r\n     \r\n        let ward = await fromUuid(\"Compendium.wfrp4e-core.items.Bvd2aZ0gQUXHfCTh\")\r\n        let wardData = ward.toObject();\r\n        wardData.system.specification.value = 9;\r\n        \r\n        let unstable = await fromUuid(\"Compendium.wfrp4e-core.items.D0ImWEIMSDgElsnl\")\r\n        let unstableData = unstable.toObject();\r\n        this.actor.createEmbeddedDocuments(\"Item\", [wardData, unstableData], {fromEffect: this.effect.id})\r\n    }\r\n",
  "pHyXdPnWwoFrUA5n": "//*** Mistrz Charakteryzacji\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Entertain\"));",
  "PjRxGuUDKGmSmVDc": "//*** Lot (Zwierzęta)\r\nfromUuid(\"Compendium.wfrp4e-core.items.EO05HX7jql0g605A\").then(item => {\r\n   item = item.toObject()\r\n   item.system.specification.value = this.actor.characteristics.ag.value\r\n   this.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})\r\n})",
  "pLKv4moua6XhNdmA": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.1dUizIgLBgn4jICC\");\r\nlet data = item.toObject();\r\ndata.name += \" (Lasy)\";\r\nthis.actor.createEmbeddedDocuments(\"Item\", Array(this.effect.sourceTest.result.overcast.usage.other.current).fill(data), {fromEffect : this.effect.id})",
  "PmELrzD3RmF9qKkO": "//*** Size - Półgryf Wierzchowiec\r\nif (this.item.system.specification.value == \"Rozmiar\")\r\n{\r\n    let size = this.item.specifier;\r\n    if (!size)\r\n    {\r\n        let choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.actorSizes, this.item.img), 1, \"Wybierz rozmiar\");\r\n        if (choice[0])\r\n        {\r\n            size = choice[0]?.name;\r\n        }\r\n    }\r\n    this.item.updateSource({\"system.specification.value\" : size, name : this.item.baseName})\r\n    this.effect.updateSource({name : this.effect.name + ` (${size})`})\r\n}",
  "pnB9TzSEytkxk3Rb": "//*** Skrócenie Dystansu\r\nreturn this.actor.hasSystemEffect(\"infighting\")",
  "pNPjXEoQGHLKzq0r": "let talent = this.actor.has(\"Magia Tajemna (Światła)\", \"talent\")\r\nlet demon = this.actor.has(game.i18n.localize(\"NAME.Daemonic\"))\r\n\r\nif (!talent)\r\n{\r\n   await this.actor.addCondition(\"blinded\")\r\n}\r\n\r\nif (demon)\r\n{\r\n    await this.actor.addCondition(\"stunned\")\r\n}",
  "PoNnT5EqvLj2r5yf": "//*** Oko Łowcy\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.OutdoorSurvival\") && args.skill?.name != game.i18n.localize(\"NAME.Track\");",
  "pq1YQffxtOcqCRTn": "//*** Paskudne cięcie\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {appendTitle: ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (!test.succeeded)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "pR4Q2OnPxXtwRVli": "let criticals = this.actor.itemTypes.critical;\r\n\r\nif (criticals.length)\r\n{\r\n    this.script.scriptNotification(\"Nie może doznać krytycznych ran\");\r\n    this.actor.deleteEmbeddedDocuments(\"Item\", criticals.map(i => i.id))\r\n}\r\n\r\nif (getProperty(args.data, \"system.status.wounds.value\") == 0)\r\n{\r\n    this.script.scriptNotification(`Uśpiony na ${Math.ceil(CONFIG.Dice.randomUniform() * 10)} Rund`)\r\n}",
  "PVjaKAHTKDA0rA9J": "let test = await this.actor.setupSkill(\"Unik\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`});\r\nawait test.roll();",
  "px7eEdhOEt7zOTrq": "//*** Slippery Skin\r\nreturn [\"int\", \"t\", \"wp\", \"i\"].includes(args.characteristic)",
  "q0LvphC8RDSyR0oY": "let choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n    ws : game.wfrp4e.config.characteristics.ws,\r\n    t : game.wfrp4e.config.characteristics.t,\r\n    ag : game.wfrp4e.config.characteristics.ag,\r\n    wp : game.wfrp4e.config.characteristics.wp\r\n}, this.effect.img), 1, \"Wybierz Cechę\");\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.characteristic\" : choice[0].id})",
  "Q1trEhtqjIiDvFPF": "//*** Przecięte ścięgno\r\nargs.prefillModifiers.modifier -= 10 * this.effect.system.condition.value",
  "Q4EQgP4gZR8TTm7S": "let penalty = 0\r\nif (args.item?.system.attackType)\r\n{\r\n   penalty -= 30\r\n}\r\nif (args.actor.has(\"Percepcja Magiczna\", \"talent\"))\r\n    penalty += 10\r\n\r\nargs.prefillModifiers.modifier += penalty",
  "Q68WiUWY7GxiXBbT": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.9GNpAqgsKzxZKJpp\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = \"Kiedy sam\";\r\ndata.effects[0].disabled = true;\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "Q9EmlWmuDac83cJw": "//*** Mieszkaniec Lasu\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Climb\")  || args.skill?.name?.includes(game.i18n.localize(\"NAME.Stealth\"));",
  "qAEZgtu5CrfUkxhx": "//*** Leczenie\r\nif (args.test.options.staunchBleeding) \r\n{\r\n if (args.test.succeeded) \r\n {\r\n   let staunch =  Number(args.test.result.SL) + 1\r\n   if (args.test.options.fieldDressing && args.test.result.reversed)\r\n   {\r\n     staunch =  Math.min(1, Number(args.test.result.SL)) + 1\r\n   }\r\n   args.test.result.other.push(`<b>${this.actor.name}</b>: usunięto pacjentowi liczbę stanów krwawienia równą: <b>${staunch}</b>.`)\r\n }\r\n   else if (this.actor.characteristics.int.bonus + Number(args.test.result.SL) < 0)\r\n   {\r\n      args.test.result.other.push(`Pacjent otrzymuje @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Pomniejszą Infekcję}.`)\r\n   }\r\n}",
  "QaGNsqKm2Nf0zGVm": "//*** Amputowana stopa\r\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)",
  "qaVde0sTuMBRi2nl": "//*** Geniusz Arytmetyczny\r\nreturn [\"NAME.Evaluate\", \"NAME.Gamble\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)",
  "QbIYnshWeP1U8SUy": "//*** Pieszczota Laniph\r\nargs.applyAP = false;\r\nargs.applyTB = false;",
  "qcyl98GYD55BkJsD": "//*** Pancerz z ołowiu\r\nthis.actor.status.encumbrance.state = 0;\r\nthis.actor.status.encumbrance.pct = 0;",
  "QF8LanKNoAlTkQG0": "//*** Tragarz\r\nthis.actor.system.status.encumbrance.max += 2",
  "Qgn92fZyc3Psn8QJ": "//*** Atrakcyjny\r\nif (args.test.options.useOnesAttractive && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n\targs.test.data.result.SL = \"+\" + (ones + args.test.successBonus + args.test.slBonus)\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Użyto wartości kości jedności jako PS`)\r\n}",
  "qijgjcOBCDmhglRX": "//*** Ruchliwe dłonie\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.SleightOfHand\");",
  "qK4q4o6cQhcGzFX3": "//*** Ognista korona\r\nlet fear = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\")\r\nlet leader = await fromUuid(\"Compendium.wfrp4e-core.items.Item.vCgEAetBMngR53aT\")\r\nlet fearData = fear.toObject();\r\nlet leaderData = leader.toObject();\r\nfearData.system.specification.value = this.effect.sourceTest.result.overcast.usage.other.current; \r\ntalents = new Array(1 + this.effect.sourceTest.result.overcast.available).fill(leaderData); // Assume any unused overcast is for war leader\r\nthis.actor.createEmbeddedDocuments(\"Item\", [fearData].concat(talents), {fromEffect : this.effect.id})",
  "Qk7t2l5ep9RDVpgE": "//*** Szuler Kościany\r\nargs.options.diceman= true;",
  "QKTA2TqZ77pvHWSJ": "//*** Świecąca skóra\r\nthis.actor.getActiveTokens().forEach(t => t.document.update({light : {\r\n    \"dim\": 0,\r\n    \"bright\": 0,\r\n    \"alpha\": 0.5,\r\n    \"animation\": {\r\n        \"type\": \"\",\r\n    },\r\n    \"color\": \"#000000\",\r\n}}));",
  "qmOt7h17hGAKqQe0": "//*** Kopuła (Cień)\r\n\r\nlet choice = await Dialog.wait({\r\n    title: this.effect.name,\r\n    content: `<p><strong>${this.effect.name}</strong>: Czy ten Magiczny lub Zasięgowy atak pochodził spoza Kopuły?</p>`,\r\n    buttons: {\r\n        yes: {\r\n            label: \"Tak\",\r\n            callback: () => {\r\n                return true;\r\n            }\r\n        },\r\n        no: {\r\n            label: \"Nie\",\r\n            callback: () => {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nif (choice)\r\n{\r\n\targs.ward = 6;\r\n}",
  "QoEOxRruQXYrZrv3": "let filters = [\r\n    {\r\n        property : \"type\",\r\n        value : \"skill\"\r\n    },\r\n    {\r\n        property : \"name\",\r\n        value : /Melee/gm,\r\n        regex: true\r\n    }\r\n]\r\n\r\nlet items = await game.wfrp4e.apps.ItemDialog.createFromFilters(filters, 2, \"Wybierz dwie umiejętności aby dodać +20\")\r\nitems = items.map(i => i.toObject())\r\nitems.forEach(i => i.system.advances.value = 20)\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);",
  "QPVVDPcJ4Xi5FmQl": "//*** Wstrząśnienie mózgu\r\nif(this.actor.hasCondition(\"fatigued\") && args.opposedTest.result.hitloc.value == \"head\" && (args.opposedTest.attackerTest.result.critical || args.actor.status.wounds.value - args.totalWoundLoss < 0))\r\n{\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), { fields: { difficulty: \"average\" }, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\n    await test.roll();\r\n    if (test.failed)\r\n    {\r\n        this.actor.addCondition(\"unconscious\")\r\n    }\r\n}",
  "QQ2gHThZHdO4yLLX": "//*** Ziemnowodny\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Swim\");",
  "QQPiREc50HT5W2Tr": "//*** Cios Poniżej Pasa\r\nif (args.item.type == \"weapon\" && args.item.weaponGroup.value == \"brawling\")\r\n    args.item.damage.value += \" + 1\"",
  "QqybHxNCzPEzG1Qh": "//*** Dwie Bronie\r\nreturn args.fields.dualWielding || args.options.dualWieldOffhand",
  "QRSACifDrvojIXHB": "//*** Błogosławieństwo Nieustępliwości\r\nif (!this.actor.effects.find(e => e.isCondition))\r\n{\r\n\treturn this.script.notification(\"Aktor nie posiada żadnych Stanów\")\r\n}\r\n\r\nlet choice = await ItemDialog.create(this.actor.effects.filter(i => i.isCondition), 1, \"Wybierz Stan\")\r\n\r\nif (choice[0])\r\n{\r\n\tthis.actor.removeCondition(choice[0].conditionId)\r\n}\r\n",
  "qSwCYMMiIHmSV1X5": "//*** Rozkosz Ranalda\r\nif (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n     let effectData = this.item.effects.contents[0].convertToApplied();\r\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid\r\n     effectData.duration.seconds = 10800\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.notification(\"Nic nie zostało!\", \"error\")\r\n}",
  "qT0WBPxLMMO9gvCd": "if (!this.actor.has(\"Widzenie w Ciemności\") && !this.actor.has(\"Widzenie w Ciemności\", \"talent\") && !this.actor.hasCondition(\"blinded\"))\r\n{\r\n    this.actor.addCondition(\"blinded\", 1, {\"flags.wfrp4e.nightshroud\" : true})\r\n}",
  "qu194dVXm9Vx1TGk": "//*** Pomocny\r\nif (args.test.options.useOnesSupportive && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n\targs.test.data.result.SL = \"+\" + (ones + args.test.successBonus + args.test.slBonus)\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Użyto wartości kości jedności jako PS`)\r\n}",
  "quPcuKsq2fcild4a": "//*** Cios w bebechy\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"easy\"}, context: {failure : `<strong>${this.effect.name}</strong>: Rzyyyyg!`} })\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "qUwnVlWpsmDom3RK": "//*** Amputowane oko\r\nargs.fields.modifier -= 5;",
  "QwHoqu2oO8QO8Mad": "//*** Kwasowa Krew\r\nlet content = `<b>${this.effect.name}</b>: Wszyscy będący w zwarciu z <b>${this.actor.prototypeToken.name}</b> otrzymują [[/r 1d10]] Obrażeń, zmniejszonych o wartość Bonusu Wt oraz Pancerza.`;\r\nthis.script.message(content)",
  "qxzhPtysAjPWspKf": "if (this.actor.has(game.i18n.localize(\"NAME.Undead\")) || this.actor.has(game.i18n.localize(\"NAME.Daemonic\")))\r\n{\r\n    this.script.scriptNotification(`Nie może wejśc ze względu na: ${this.effect.name}!`);\r\n}",
  "qZschZU0nee0kJlk": "//*** Amputowany nos\r\nargs.fields.modifier -= 30;",
  "R32U01LBjBrK1pns": "//*** Najemnik\r\nconst templateMap = {\r\n    'P2e7Yx98bK3u110a' : \"\",\r\n    'iuMp3KLaMT2WCmie' : \"Xp4r2KUhqfjak8zq\", \r\n    'RBuYcT5tppwcmnC5' : \"wYN19h3WVF1yOVq2\", \r\n    'vcGpNwNbhvfzVveQ' : \"ac5ClOuaYtzOYyWp\", \r\n    'jmhKZy0w9TzkEK9c' : \"IS3LTdTuay6uRHUq\", \r\n    '9Byj6k7SmdTYis2V' : \"LjMlx99gBGeRJUQu\", \r\n    'laJwc2l9tzJPgaaJ' : \"x5wpMprsObuqMCYg\",\r\n}\r\nlet template = (await game.wfrp4e.tables.rollTable(\"hireling-templates\", {hideDSN: true})).object;\r\nlet physicalQuirk = (await game.wfrp4e.tables.rollTable(\"physical-quirks\", {hideDSN: true})).text;\r\nlet workEthic = (await game.wfrp4e.tables.rollTable(\"work-ethic\", {hideDSN: true})).text;\r\nlet personalityQuirk = (await game.wfrp4e.tables.rollTable(\"personality-quirks\", {hideDSN: true})).text;\r\n\r\n\r\nlet templateItem = await game.wfrp4e.utility.findItemId(templateMap[template._id]);\r\n\r\nlet bio = \r\n`\r\n<p><strong>Szablon</strong>: ${template.text}</p>\r\n<p><strong>Fizyczne dziwactwo</strong>: ${physicalQuirk}</p>\r\n<p><strong>Etyka pracy</strong>: ${workEthic}</p>\r\n<p><strong>Osobowościowe dziwactwa</strong>: ${personalityQuirk}</p>\r\n`\r\n\r\nthis.script.message(bio, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n\r\nawait this.actor.update({\"system.details.gmnotes.value\" : bio})\r\n\r\nif (templateItem)\r\n{\r\n    this.actor.createEmbeddedDocuments(\"Item\", [templateItem.toObject()])\r\n}",
  "R5dOZWFxE2n6tooX": "//*** Amputowana dłoń\r\nreturn this.item.system.usesLocation(args.weapon)",
  "R95pDZMHnD9iHAl8": "//*** Wytwórca (Dowolne Rzemiosło)\r\nreturn args.skill?.name.includes(this.item.system.tests.value);",
  "ramav4ymrDDkPKK4": "if (this.actor.hasCondition(\"bleeding\"))\r\n{\r\n    this.actor.removeCondition(\"bleeding\");\r\n    this.script.scriptNotification(\"Usunięto 1 Stan Krwawienia\");\r\n}\r\nelse \r\n{\r\n    this.script.scriptNotification(\"Brak Stanów Krwawienia do usunięcia\");\r\n}",
  "ratP9ByLjQPiLlFK": "//*** Ulicznik\r\nargs.data.canReverse = true",
  "rCh3ltUrUMovd2Kc": "//*** Reactionary Restorative\r\nif (this.actor.hasCondition(\"surprised\"))\r\n{\r\n    this.script.notification(\"Nie może zostać zaskoczony\");\r\n    this.actor.removeCondition(\"surprised\");\r\n}",
  "rdaMhMyHrJjQ6vVC": "//*** Straszny\r\ngame.wfrp4e.utility.postFear(this.item.Advances, this.actor.name)",
  "RDtJXji3hgcKnEBk": "//*** Tonic of Sight Beyond Sight\r\nlet as = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")).toObject();\r\nlet hv = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.Nj3tC8A5fZ3zEdMR\")).toObject();\r\nlet ms = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.6w30u0VPsAicrqb5\")).toObject();\r\nlet ss = (await fromUuid(\"Compendium.wfrp4e-core.items.Item.OEjUvJKi0xmBwbS2\")).toObject();\r\n\r\nas.name += ` (${game.i18n.localize(\"SPEC.Sight\")})`;\r\n\r\nlet roll = (await new Roll(\"1d10\").roll());\r\nroll.toMessage(this.script.getChatData())\r\nlet items = []\r\n\r\nif (roll.total <= 2)\r\n{\r\n    items = items.concat([as]);\r\n}\r\nelse if (roll.total <= 4)\r\n{\r\n    items = items.concat([hv]);\r\n}\r\nelse if (roll.total <= 6)\r\n{\r\n    items = items.concat([ms]);\r\n}\r\nelse if (roll.total <= 8)\r\n{\r\n    items = items.concat([ss]);\r\n}\r\nelse if (roll.total <= 10)\r\n{\r\n    items = items.concat([as, hv, ms, ss]);\r\n}\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items, {fromEffect: this.effect.id})",
  "re1UFtxvRRjpPB7Z": "//*** Zwichnięta kostka\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.nF5z1OEhpi4t6a6S\");\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nif (data.system.location.key[0] == \"r\")\r\n{\r\n\tdata.system.location.value = \"Prawa kostka\"\r\n}\r\nelse if (data.system.location.key[0] == \"l\")\r\n{\r\n\tdata.system.location.value = \"Lewa kostka\"\r\n}\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {skipLocationValue : true, fromEffect: this.effect.id})\r\n",
  "red2bt4PGgIWAdTR": "//*** Dziwnokorzeń\r\nif (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n     let effectData = this.item.effects.contents[0].convertToApplied();\r\n     let minutes = Math.ceil(CONFIG.Dice.randomUniform() * 10) * 10;\r\n     effectData.duration.seconds = 60 * minutes\r\n     this.script.message(`<strong>${game.i18n.localize(\"Duration\")}</strong>: ${minutes} ${game.i18n.localize(\"Minutes\")}`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n\tactor.applyEffect({effectData : [effectData]})\r\n}\r\nelse\r\n{\r\n\tthis.script.notification(\"Nie nie zostało!\", \"error\")\r\n}",
  "rF0Z3hTUUnSxL3Mq": "let armour = (await fromUuid(\"Compendium.wfrp4e-core.items.VUJUZVN3VYhOaPjj\")).toObject()\r\nlet bite = (await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")).toObject()\r\nlet fear = (await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\")).toObject()\r\nlet nightVision = (await fromUuid(\"Compendium.wfrp4e-core.items.FmHDbCOy3pH8yKhm\")).toObject()\r\nlet tracker = (await fromUuid(\"Compendium.wfrp4e-core.items.ClOlztW6hH8rslbp\")).toObject()\r\nlet weapon = (await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\")).toObject()\r\n\r\narmour.name = \"Pancerz (Skóra)\"\r\narmour.system.specification.value = 2\r\nbite.system.specification.value = 3\r\nfear.system.specification.value = 2\r\nweapon.system.specification.value = 4\r\nlet items = [armour, bite, fear, nightVision, tracker, weapon]\r\n\r\n\r\nlet belligerent = (await fromUuid(\"Compendium.wfrp4e-core.items.GbDyBCu8ZjDp6dkj\")).toObject()//{Belligerent}\r\nlet bestial = (await fromUuid(\"Compendium.wfrp4e-core.items.AGcJl5rHjkyIQBPP\")).toObject()//{Bestial}\r\nlet big = (await fromUuid(\"Compendium.wfrp4e-core.items.a8MC97PLzl10WocT\")).toObject()//{Big}\r\nlet blessed = (await fromUuid(\"Compendium.wfrp4e-core.items.5muSFXd6oc760uVj\")).toObject()//{Blessed (Ulric)}\r\nlet champion = (await fromUuid(\"Compendium.wfrp4e-core.items.4mF5Sp3t09kZhBYc\")).toObject()//{Champion}\r\nlet die = (await fromUuid(\"Compendium.wfrp4e-core.items.UsJ2uIOOtHA7JqD5\")).toObject()//{Die Hard}\r\nlet fast = (await fromUuid(\"Compendium.wfrp4e-core.items.9MjH4xyVrd3Inzak\")).toObject()//{Fast}\r\nlet frenzy = (await fromUuid(\"Compendium.wfrp4e-core.items.yRhhOlt18COq4e1q\")).toObject()//{Frenzy}\r\nlet immunity = (await fromUuid(\"Compendium.wfrp4e-core.items.IAWyzDfC286a9MPz\")).toObject()//{Immunity to Psychology}\r\nlet regenerate = (await fromUuid(\"Compendium.wfrp4e-core.items.SfUUdOGjdYpr3KSR\")).toObject()//{Regenerate}\r\nlet size = (await fromUuid(\"Compendium.wfrp4e-core.items.8slW8CJ2oVTxeQ6q\")).toObject()//{Size (Large)}\r\n\r\nblessed.system.specification.value = \"Ulryk\"\r\nsize.system.specification.value = \"Duży\"\r\n\r\nlet optional = [belligerent, bestial, big, blessed, champion, die, fast, frenzy, immunity, regenerate, size];\r\n\r\nlet chosen = await ItemDialog.create(optional, \"unlimited\", \"Wybierz opcjonalne cechy\");\r\n\r\nitems = items.concat(chosen || [])\r\nthis.script.scriptNotification(`Dodano: ${items.map(i => i.name).join(\", \")}`);\r\nthis.actor.createEmbeddedDocuments(\"Item\", items, {fromEffect : this.effect.id})\r\n",
  "RHyBLYT5oHf7EPnG": "//*** Magiczna broń (Demonologia)\r\nlet skills = this.actor.itemTypes.skill.filter(i => i.name.includes(game.i18n.localize(\"NAME.Melee\")))\r\n\r\nlet skill = await ItemDialog.create(skills, 1, \"Wybierz umiejętność wybranej broni\");\r\nlet group = game.wfrp4e.utility.extractParenthesesText(skill[0]?.name)\r\nlet groupKey = warhammer.utility.findKey(group, game.wfrp4e.config.weaponGroups)\r\n\r\nlet weapon = {\r\n\tname : this.effect.name,\r\n\ttype : \"weapon\",\r\n\timg : this.effect.img,\r\n\tsystem : {\r\n\t\t\"damage.value\" : this.actor.system.characteristics.wp.bonus,\r\n\t\t\"weaponGroup.value\" : groupKey || \"basic\",\r\n\t\t\"twohanded.value\" : [\"polearm\", \"twohanded\"].includes(groupKey),\r\n\t\t\"reach.value\" : \"average\",\r\n\t\t\"qualities.value\" : [{name : \"magical\"}]\r\n\t},\r\n}\r\n\r\nItem.implementation.create(foundry.utils.expandObject(weapon), {parent : this.actor, fromEffect : this.effect.id})\r\nthis.script.notification(\"Utworzony Broń. Dalsze dostosowywanie należy wykonać ręcznie w Karcie przedmiotu\");",
  "RI8crJxeD8JLDwMh": "//*** Finta\r\nreturn args.weapon?.system?.weaponGroup?.value != \"fencing\"",
  "RJpglw5eVRM1f9t0": "//*** Rój\r\nargs.wounds *= 5",
  "RKIFGN583PQnqHGk": "//*** Uszkodzenie tętnicy\r\nif (args.opposedTest.result.hitloc.value == \"body\" && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 2)\r\n    this.script.message(\"Otrzymano 2 Stany Krwawienia\")\r\n}",
  "rLMaVNEGdZ6xj5Au": "//*** Nos do Kłopotów\r\nreturn ![\"i\", \"int\", \"fel\"].includes(args.characteristic)",
  "RNHrSTfMLXm5sXkC": "//*** Zerwanie mięśni nogi (pomniejsze)\r\nreturn [\"ws\", \"bs\", \"s\", \"ag\"].includes(args.characteristic)",
  "RNr9CwyvLhlnwD2h": "//*** Wilk Morski\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Sail\"));",
  "roKvPHDSpX4IV11C": "//*** Człowiek Guma\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Perform\")) && args.characteristic != \"ag\"",
  "rpxQU26BU7nwjtqY": "//*** Krwawiąca dłoń\r\nlet location = this.item.system.location.key\r\nlet test = await this.actor.setupCharacteristic(\"dex\", {context : {failure : `<strong>${this.effect.name}</strong>: Upuść przedmiot!`}, skipTargets: true, appendTitle :  \" - \" + this.effect.name, fields : {difficulty : \"average\"}})\r\nawait test.roll();\r\n\r\n\r\nif (location && test.failed)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nreturn test.succeeded",
  "RqWnhnwFxaHubgiA": "//*** Transmutacja Chamonu\r\nawait args.actor.addCondition(\"blinded\");\r\nawait args.actor.addCondition(\"deafened\");\r\nawait args.actor.addCondition(\"stunned\");",
  "rr4htuVq45onXdRG": "//*** Nieustraszony (typ wroga)\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {appendTitle: ` - ${this.effect.name}`, fields : {difficulty : \"average\"}})\r\ntest.roll();",
  "RrchOMpEdIvceJxl": "//*** Włóczykij\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Stealth\")} (${game.i18n.localize(\"SPEC.Rural\")})`",
  "rRfff55c7elyvbCb": "//*** Amputowany palec u ręki\r\nreturn this.actor.flags.useless[this.item.system.location.key] && args.weapon?.system.usesHands.includes(this.item.system.location.key[0] + \"Arm\")",
  "RSsGiDFibuqg3sHr": "//*** Choroba\r\nlet diseaseIndex = game.packs\r\n.filter(i => i.metadata.type == \"Item\")\r\n.reduce((acc, pack) => acc.concat(pack.index.contents), [])\r\n.filter(i => i.type == \"disease\")\r\n.map(i => {\r\n\ti.id = i._id\r\n\treturn i\r\n})\r\n\r\nlet choice = await ItemDialog.create(diseaseIndex , 1, \"Wybierz Chorobę\");\r\n\r\nif (choice[0])\r\n{\r\n\tawait this.item.updateSource({\"system.specification.value\" : choice[0].name})\r\n}",
  "rUGSx06BuBvX9kgf": "//*** Nieugięty\r\nif (args.test.result.charging)\r\n{\r\n   args.test.result.damage += 1\r\n   args.test.result.additionalDamage += 1\r\n   if (!args.test.result.resolute) {\r\n      args.test.result.breakdown.damage.other.push({label : this.effect.name, value : this.item.Advances});\r\n      args.test.result.resolute = true // Prevent duplicate messages\r\n     }\r\n}\r\n",
  "RuW1PWUFxIbbSlIm": "//*** Dziwnokorzeń\r\nreturn ![\"t\", \"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)",
  "RvipIYj9H7n4UDMe": "//*** Zniedołężniały\r\nlet characteristics = {\r\n        \"ws\" : -10,\r\n        \"bs\" : -10,\r\n        \"s\" : -5,\r\n        \"t\" : -5,\r\n        \"i\" : -10,\r\n        \"ag\" : -10,\r\n        \"dex\" : -10,\r\n        \"int\" : 0,\r\n        \"wp\" : 0,\r\n        \"fel\" : 0\r\n    }\r\nlet skills = []\r\nlet skillAdvancements = []\r\nlet talents = []\r\nlet trappings = []\r\nlet items = []\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "RZlMkxJz5apn0mUj": "//*** Latanie - Pegaz\r\nreturn args.item?.system.attackType != \"ranged\"",
  "S1QihXuvdEVzeRtB": "let dice = await new Roll(\"1d10\").roll()\r\nlet roll = dice.total\r\nlet talent \r\nlet message\r\nlet modifier = 0\r\n\r\nif (roll <= 3)\r\n{\r\n    item = await fromUuid(\"Compendium.wfrp4e-core.items.mNoCuaVbFBflfO6X\")\r\n}\r\n\r\nelse if (roll <= 6)\r\n{\r\n    item = await fromUuid(\"Compendium.wfrp4e-core.items.OEjUvJKi0xmBwbS2\")\r\n    modifier = -3\r\n}\r\n\r\nelse if (roll <= 9)\r\n{\r\n    item = await fromUuid(\"Compendium.wfrp4e-core.items.mdPGZsn2396dEpOf\")\r\n    modifier = -3\r\n}\r\n\r\nelse if (roll = 10)\r\n{\r\n    item = await fromUuid(\"Compendium.wfrp4e-core.items.qdMbxW09FUoYBzmB\")\r\n    modifier = -5\r\n}\r\n\r\nmessage = `Wyrzucono ${roll}, Otrzymano ${item.name}, ${modifier} Siły`\r\ndice.toMessage(this.script.getChatData())\r\n\r\nlet changes = duplicate(this.effect.changes)\r\nchanges[0].value = modifier\r\n\r\nthis.effect.updateSource({changes})\r\n\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {fromEffect : this.effect.id})\r\n\r\nthis.script.scriptNotification(message)",
  "S3Dev4hleOYqDNe9": "//*** Leczenie\r\nif (args.test.options.healWounds) {\r\n if (args.test.succeeded) \r\n {\r\n   let wounds = this.actor.characteristics.int.bonus + Number(args.test.result.SL)\r\n   if (args.test.options.fieldDressing && args.test.result.reversed)\r\n   {\r\n      wounds = this.actor.characteristics.int.bonus + Math.min(1, Number(args.test.result.SL))\r\n   }\r\n\targs.test.result.woundsHealed = wounds\r\n\targs.test.result.other.push(`<b>${this.actor.name}</b>: uleczono pacjentowi liczbę ran równą: <b>${wounds}</b>.`);\r\n   }\r\n   else if (this.actor.characteristics.int.bonus + Number(args.test.result.SL) < 0)\r\n   {\r\n      args.test.result.other.push(`Pacjent otrzymuje @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Pomniejszą Infekcję}.`);\r\n   }\r\n}",
  "S4793DLFhjMxpM8x": "//*** Nienawiść (x)\r\nreturn ![\"ws\", \"bs\"].includes(args.characteristic) && !args.item?.system.attackType && !args.options.dodge",
  "S6tUyFJvGMV19mvP": "//*** Stalowa skóra\r\nthis.actor.status.addArmour(2, {source: this.effect})",
  "s7gJQdzuM3fz2zQK": "//*** Złamane biodro\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.QluSTTTq3viHJJUh\")\r\nlet data = item.toObject();\r\ndata.system.location.value = \"Biodro\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n   \r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "s8idWt9YdMTRfnjV": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = 4 - this.actor.characteristics.s.bonus\r\ndata.name = item.name.replace(\"()\", \"\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "s8xU6OOZbbfo6VIw": "//*** Mieszkaniec Lasu\r\nargs.fields.slBonus += this.actor.system.characteristics.ag.bonus\r\n",
  "S95QqpX1cZyIVCPy": "//*** Demoniczny\r\nif (parseInt(this.item.system.specification.value) > 0)\r\n{\r\n\tthis.actor.system.status.ward.value = parseInt(this.item.system.specification.value);\r\n}\r\n\r\n",
  "sAVpm7hFRHpbCLXm": "//*** Błękitna Krew\r\nreturn [\"ws\", \"bs\", \"s\",  \"t\", \"ag\", \"i\"].includes(args.characteristic)",
  "sB4KB9bT3nQhAoqG": "// This script needs to be separate because equipTransfer is off on the other effect, and thus won't execute when added to an actor\r\n\r\nlet mainEffect = this.item.effects.contents[0];\r\nif (mainEffect.name.includes(\"<Tradycja>\"))\r\n{\r\n    let choice = await ItemDialog.create(ItemDialog.objectToArray(game.wfrp4e.config.magicLores, this.item.img), 1, \"Wybierz Tradycję\");\r\n    if (choice.length)\r\n    {\r\n        mainEffect.update({name : mainEffect.name.replace(\"<Tradycja>\", choice[0].name)})\r\n        this.item.update({name : this.item.name += ` (${choice[0].name})`})\r\n    }\r\n}\r\n\r\nthis.effect.delete();",
  "sbK1a7txpSoXFzyB": "//*** Przekonujący\r\nif (args.test.options.useOnesArgumentative && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target))\r\n{\r\n\r\nlet SL = Math.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10)\r\nlet ones = Number(args.test.result.roll.toString().split(\"\").pop())\r\n\r\nif (ones > SL)\r\n\targs.test.data.result.SL = \"+\" + (ones + args.test.successBonus + args.test.slBonus)\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Użyto wartości kości jedności jako PS.`)\r\n}",
  "scfm5iWWBxWI6QaK": "//*** Skóra łowcy\r\nlet darkvision = await fromUuid(\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\")\r\nlet fear = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\")\r\nlet acutesense = await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")\r\nfear = fear.toObject();\r\nfear.system.specification.value = 1;\r\nthis.actor.createEmbeddedDocuments(\"Item\", [darkvision, fear, acutesense], {fromEffect : this.effect.id})",
  "SGr50Hq1AHIEzIFN": "let choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n    int : game.wfrp4e.config.characteristics.int,\r\n    fel : game.wfrp4e.config.characteristics.fel\r\n}, this.effect.img), 1, \"Wybierz Cechę\");\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.characteristic\" : choice[0].id})",
  "sgS9rblPkQB36C8S": "//*** Wytwórca\r\nif (this.item.name.includes(\"(\"))\r\n{\r\n\tlet trade = this.item.parenthesesText;\r\n\tif (trade?.toLowerCase() != \"dowolne\")\r\n\t    return this.item.updateSource({\"system.tests.value\" : this.item.system.tests.value.replace(\"Dowolne\", trade)})\r\n}\r\n\r\nlet index = game.packs\r\n.filter(i => i.metadata.type == \"Item\")\r\n.reduce((acc, pack) => acc.concat(pack.index.contents), [])\r\n.filter(i => i.type == \"skill\" && i.name.includes(game.i18n.localize(\"NAME.Trade\")))\r\n.map(i => {\r\n\ti.id = i._id\r\n\treturn i\r\n})\r\n\r\nlet choice = await ItemDialog.create(index, 1, \"Wybierz Umiejętność Rzemieślniczą\")\r\nlet text;\r\nif (!choice[0])\r\n{\r\n    let custom = await ValueDialog.create({text : \"wpisz własny rodzaj rzemiosła\", title : \"Własne Rzemiosło\"});  \r\n    text = custom || \"\"\r\n}\r\nelse \r\n{\r\n    text = game.wfrp4e.utility.extractParenthesesText(choice[0].name)\r\n}\r\n\r\nawait this.item.updateSource({name : this.item.name.replace(\"(Dowolne Rzemiosło)\", \"\").replace(\"(Dowolne Rzemiosło)\", \"\").trim() + ` (${text})`, \"system.tests.value\" : this.item.system.tests.value.replace(\"Dowolne\", text)});",
  "sHfkTRqTWPg2JAGN": "//*** Widzenie w ciemności (Życie)\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "shkBUtUuMPDKvFm7": "let test = await this.actor.setupSkill(\"Unik\", {fields : {difficulty : \"average\"}})\r\nlet caster = this.effect.sourceActor\r\n\r\nlet fallen = this.effect.sourceTest.result.SL + caster.characteristics.wp.bonus\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n   this.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b>: upadek w odległości ${fallen} metrów`)\r\n}",
  "sKO8TcLIkCTnFvXu": "//*** Amputowana dłoń\r\nargs.abort = true;\r\nthis.script.notification(`Nie można używać: ${this.item.system.location.value}!`, \"error\")",
  "skVq3eDEYKFF2iZp": "//*** Sercobój\r\n// I'm assuming the endurance test specified is for the end-round check\r\nawait this.actor.addCondition(\"poisoned\", 4);\r\n",
  "SLy1Fs3oXcHgFgjK": "//*** Purpurowy całun\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\")\r\nlet data = item.toObject();\r\nlet value = foundry.utils.getProperty(this.effect.sourceTest, \"result.overcast.usage.other.current\") || 1\r\ndata.system.specification.value = value\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "sNSfDBIA2k17hPYI": "//*** Tarcza Aqshy\r\nlet ablaze = this.actor.hasCondition(\"ablaze\");\r\nif (ablaze)\r\n{\r\n\tablaze?.delete();\r\n\tthis.script.notification(\"Ingoruje Podpalenie\");\r\n}\r\n",
  "SO4Aa9argKbuO9rQ": "//*** Przecięte ścięgno\r\nargs.prefillModifiers.modifier -= 20",
  "SPOkFWZWziZk5b7A": "//*** Reversal\r\nreturn args.item?.system?.attackType != \"melee\"",
  "SrCHfOJFZwDickqa": "//*** Winded\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"average\"}});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}",
  "SSqGxyN9hw0HDmED": "//*** Odepchnięcie (Światło)\r\nthis.actor.addCondition(\"prone\");",
  "sUHuj00IpoZ7Gd03": "//*** Ziemnowodny\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Swim\");",
  "sWyO1DNaqb2EdHoW": "if (!this.actor.items.getName(\"Szał Bojowy\")) // Either frenzy trait or psychology\r\n{\r\n  // Add Frenzy psychology\r\n  let item = await fromUuid(\"Compendium.wfrp4e-core.items.DrNUTPeodEgpWTnT\")\r\n  let data = item.toObject();\r\n  data.effects[0].disabled = false;\r\n  this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n}\r\n\r\nthis.script.scriptMessage(`<p><strong>Po wypiciu tej mikstury, ${this.actor.prototypeToken.name}</strong> wpada w Szał Bojowy. Stan ten trwa [[1d10]] rund, i nie może zostać zakończony wcześniej.</p>`, \r\n  {whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true })   ",
  "sx7Ikn8WW00gBFb4": "//*** Stłuczony obojczyk\r\nlet location = (Math.ceil(CONFIG.Dice.randomUniform() * 2) == 2 ? \"r\" : \"l\") + \"Arm\"\r\n\r\nif (location == \"lArm\")\r\n{\r\n\tthis.script.notification(\"Wylosowano Lewą\")\r\n}\r\nelse if (location == \"rArm\")\r\n{\r\n\tthis.script.notification(\"Wylosowano Prawą\")\r\n}\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.location\" : location});\r\n\r\nif (location)\r\n{\r\n    let dropped = this.actor.itemTypes.weapon.filter(i => i.isEquipped & i.system.usesHands.includes(location));\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}\r\n\r\nlet roll = await new Roll(\"1d10\").roll()\r\n\r\nroll.toMessage(this.script.getChatData({flavor : `${this.effect.name} (Czas Trwania)`}));\r\n\r\nthis.effect.updateSource({\"duration.rounds\" : roll.total})",
  "syqqBkyP5tGqZ78t": "this.actor.has(\"Niewrażliwość na Psychologię\")?.delete();\r\n\r\nlet roll = await new Roll(\"1d10\").roll();\r\n\r\nroll.toMessage(this.script.getChatData());\r\n\r\nthis.script.scriptNotification(`Usunięto odporność na psychologię, otrzymano Stany Paniki: ${roll.total}`)\r\nthis.actor.addCondition(\"broken\", roll.total, {\"flags.wfrp4e.blasted-mind\" : true})",
  "sZwLitzwKBTaFca3": "//*** Pogrom\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.5hH73j2NgPdsLCZN\")\r\nlet data = item.toObject();\r\ndata.name = data.name.replace(\"x\", \"Zielonoskórzy, Nieumarli, Chaos\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "t48hkacYdOpzWvK9": "//*** Beat Blade\r\nargs.options.beatBlade = true;",
  "t56mnblo1kv3gM1M": "return args.skill?.name.includes(\"Broń Biała (Podstawowa)\") || (args.type == \"weapon\" && args.item?.system.weaponGroup.value == \"basic\");",
  "T5fiTzhXEQAv9Drf": "//*** Zmiażdżony łokieć\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.rlDZZTj5PXjuRXa2\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key;\r\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n\r\nlet location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}",
  "T74FEjfFrh3f6MKv": "//*** Konstrukt\r\nargs.wpb = args.sb;",
  "TBpNFRL5uehs0fze": "//*** Fakstoryl\r\nif (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n\tactor.applyEffect({effectData : [this.item.effects.contents[0]]})\r\n}\r\nelse\r\n{\r\n\tthis.script.notification(\"Nic nie zostało!\", \"error\")\r\n}",
  "tCIT1a12Gt6k2ohA": "//*** Odporny na (Zagrożenie)\r\nlet resistance\r\nif (this.item.name.includes(\"(\") && !this.item.name.toLowerCase().includes(\"(wybrane zagrożenie)\"))\r\n{\r\n\tresistance = this.item.parenthesesText\r\n}\r\nelse \r\n{\r\n    resistance = await ValueDialog.create({text : \"Wprowadź nazwę Odporności\", title : \"Odporny na\"}) \r\n    \r\n    if (resistance)\r\n    {\r\n        this.item.updateSource({name : `${this.item.name.split(\"(\")[0].trim()} (${resistance})`})\r\n        this.effect.updateSource({name : this.effect.name + ` (${resistance})`})\r\n    }\r\n}    \r\nthis.item.updateSource({\"system.tests.value\" : this.item.system.tests.value.replace(\"Wybrane Zagrożenie\", resistance)})\r\n\r\nif (resistance && !this.effect.name.includes(\"(\"))\r\n{\r\n    this.effect.updateSource({name : this.effect.name += ` (${resistance})`})\r\n}",
  "tcZug8ehU6lyYBd9": "return args.skill?.name != \"Broń Zasięgowa (Prochowa)\"",
  "tdICiJ26rJrDbxT6": "//*** Wibrysy\r\nreturn args.characteristic != \"i\"",
  "TdjlJro0RRVSh8g8": "//*** Szuler\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Gamble\") && args.skill?.name != game.i18n.localize(\"NAME.SleightOfHand\");",
  "tDrs0aNIYmZPsOoS": "//*** Poszarpane udo\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\")\r\n}\r\n",
  "TGN070HeJLl3gSMY": "let test = await this.actor.setupCharacteristic(\"ag\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context: { failure: \"Upadek\" }})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"prone\");\r\n}",
  "tGVEV6TLl310mFLP": "let nonmagical = args.modifiers.ap.value - args.modifiers.ap.magical\r\nif (args.applyAP && nonmagical) \r\n{\r\n    let nonmagical = args.modifiers.ap.value - args.modifiers.ap.magical\r\n    args.modifiers.ap.ignored += nonmagical\r\n    args.modifiers.ap.details.push(\"<strong>\" + this.effect.name + \"</strong>: Zignorowano Niemagiczny Pancerz (\" + nonmagical + \")\");\r\n}",
  "tKBq1nGZo8t6vvQ6": "//*** Zew furii\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.5hH73j2NgPdsLCZN\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {fromEffect : this.effect.id})",
  "TmaS8o33825QUMrx": "//*** Staje Dęba\r\nlet stomp = game.wfrp4e.config.systemItems.stomp;\r\nlet test = await this.actor.setupTrait(stomp)\r\nawait test.roll();",
  "tn6SwmjAuNzqE6dx": "let damage = 0\r\nlet test = await this.actor.setupSkill(\"Unik\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`});\r\nawait test.roll();\r\n\r\nif (test.succeeded)\r\n{\r\n    damage = 10;\r\n}\r\nelse if (test.failed)\r\n{\r\n   damage = 20;\r\n}\r\n\r\nthis.script.scriptMessage(await this.actor.applyBasicDamage(damage, {loc : \"roll\", hideDSN: true, suppressMsg : true}))",
  "tnE8LF6E3svIlLca": "//*** Mól Książkowy\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Research\");",
  "tNTO1LVN7JqHf4YN": "if (args.test.characteristicKey == \"wp\") \r\n{\r\n    if (args.test.failed)\r\n    {\r\n        this.actor.createEmbeddedDocuments(\"ActiveEffect\", [game.wfrp4e.config.symptomEffects[\"malaise\"]])\r\n        this.script.scriptMessage(`Test Siły Woli nie udał się, <b>${this.actor.prototypeToken.name}</b>: Otrzymano @Symptom[Apatia]{Apatię} na [[1d10]] godzin`, {whisper: ChatMessage.getWhisperRecipients(\"GM\")})\r\n    }\r\n}",
  "ToKlHDAjJOsC51ag": "//*** Głębokie cięcie\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})\r\n   \r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    args.actor.addCondition(\"unconscious\")\r\n}",
  "toSrgcvWq9b5eN0K": "//*** Dodatkowe usta\r\nlet location = await game.wfrp4e.tables.rollTable(\"hitloc\", {hideDSN: true})\r\n\r\nthis.item.updateSource({name : `${this.item.name} (${location.description})`})\r\nthis.script.message(`<strong>Miejsce:</strong> ${location.description}`, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })",
  "TpZItJ5Ugbazaobd": "//*** Niejednolite opierzenie\r\nlet locations = [];\r\n\r\nwhile (locations.length < 2)\r\n{\r\n    let loc = await game.wfrp4e.tables.rollTable(\"hitloc\", {hideDSN : true})\r\n    if (!locations.includes(loc.result))\r\n    {\r\n        locations.push(loc.result);\r\n    }\r\n}\r\n\r\nlocationText = locations.map(i => game.wfrp4e.config.locations[i]).join(\", \")\r\n\r\nthis.item.updateSource({name : this.item.name += ` (${locationText})`, \"flags.wfrp4e.locations\" : locations})\r\nthis.effect.updateSource({\"flags.wfrp4e.locations\" : locations})",
  "Tq45Nd8J3eTvHT41": "//*** Traper\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Perception\") && args.skill?.name != game.i18n.localize(\"NAME.SetTrap\");",
  "TQRL4mZhZohXg1Au": "//*** Telepathy\r\nlet test = await this.actor.setupCharacteristic(\"wp\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\ntest.roll();",
  "TrIYdcG3jDER4WgY": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.xsGbDFqK2qh7lsIj\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = \"Pomniejsza\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "TU2xjbJ0zFtytF3J": "//*** Posłuch u Zwierząt\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.CharmAnimal\");",
  "tUwP7TjrOOOnaCYJ": "//*** Eliksir żywotności\r\nlet fatigued = this.actor.hasCondition(\"fatigued\")\r\nif (fatigued)\r\n{\r\n   this.script.notification(`Usunięte Stany Zmęczenia: ${fatigued.conditionValue}`)\r\n   fatigued.delete();  \r\n}\r\nelse \r\n{\r\n\tthis.script.notification(`Brak Stanów Zmęczenia do usunięcia`)\r\n}",
  "TwgdEucxcHloc4cX": "let choice1 = [\r\n    {\r\n        type : \"armour\",\r\n        name : \"Nogawice kolcze\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Kolczuga\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Czepiec kolczy\"\r\n    },\r\n]\r\nlet choice2 = [\r\n    {\r\n        type : \"armour\",\r\n        name : \"Nogawice kolcze\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Kolczuga\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Czepiec kolczy\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Skórzane nogawice\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Skórzany hełm\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Skórzana kurta\"\r\n    },\r\n]\r\nlet choice3 = [\r\n    {\r\n        type : \"armour\",\r\n        name : \"Płytowy Napierśnik\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Płytowe Naramienniki\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Hełm płytowy\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Płytowe Nagolenniki\"\r\n    },\r\n]\r\n\r\nlet choice = await new Promise((resolve, reject) => {\r\n    new Dialog({\r\n        title : \"Wybór zbroi\",\r\n        content : \r\n        `<p>\r\n        Wybierz\r\n        </p>\r\n        <ol>\r\n        <li>Kolczuga</li>\r\n        <li>Kolczuga i skóra</li>\r\n        <li>Płyta</li>\r\n        </ol> \r\n        `,\r\n        buttons : {\r\n            1 : {\r\n                label : \"Kolczuga\",\r\n                callback : () => {\r\n                    resolve(choice1)\r\n                }\r\n            },\r\n            2 : {\r\n                label : \"Kolczuga i skóra\",\r\n                callback : () => {\r\n                    resolve(choice2)\r\n                }\r\n            },\r\n            3 : {\r\n                label : \"Płyta\",\r\n                callback : () => {\r\n                    resolve(choice3)\r\n                }\r\n            }\r\n        }\r\n    }).render(true)\r\n}) \r\n\r\nlet updateObj = this.actor.toObject();\r\nlet items = []\r\nfor (let c of choice)\r\n{\r\n    let existing \r\n    if (c.type == \"skill\")\r\n    {\r\n        existing = updateObj.items.find(i => i.name == c.name && i.type == c.type)\r\n        if (existing && c.diff?.system?.advances?.value)\r\n        {\r\n            existing.system.advances.value += c.diff.system.advances.value\r\n        }\r\n    }\r\n\r\n    if (!existing)\r\n    {\r\n        let item = await game.wfrp4e.utility.find(c.name, c.type)\r\n        if (item)\r\n        {\r\n            item = item.toObject()\r\n            equip(item);\r\n                items.push(mergeObject(item, (c.diff || {})))\r\n        }\r\n        else\r\n            ui.notifications.warn(`Could not find ${c.name}`, {permanent : true})\r\n    }\r\n\r\n}\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "TxfmxDGBj04AQQpt": "//*** Riposta\r\nlet weapon = args.opposedTest.defenderTest.weapon\r\nif (\r\n    !args.opposedTest.result.swapped && \r\n    args.opposedTest.result.winner == \"defender\" && \r\n    args.opposedTest.attackerTest.result.damage && \r\n    weapon && \r\n    weapon?.system.properties.qualities.fast\r\n    )\r\n{\r\n    await args.opposedTest.swap(this.effect.label);\r\n}",
  "TzgmYRXFXRspIo1i": "//*** Ukojenie Rhyi\r\nthis.effect.delete();",
  "U1RUcgP8LD2qeGTm": "//*** Rapid Reload\r\nreturn !args.options.reload",
  "U1UpSRJOSjPpO4HS": "let mutations = await game.wfrp4e.utility.findAll(\"mutation\", \"Wczytywanie Mutacji...\")\r\nlet roll = Math.floor(CONFIG.Dice.randomUniform() * mutations.length);\r\nthis.actor.createEmbeddedDocuments(\"Item\", [mutations[roll]]);\r\nthis.script.scriptNotification(`Otrzymano: ${mutations[roll].name}`)",
  "U26XMie3Kjoddisj": "//*** Salwort\r\nlet stunned = this.actor.hasCondition(\"stunned\")\r\nif (stunned)\r\n{\r\n   this.script.notification(`Usunięto 1 Stan Oszołomienia`)\r\n   this.actor.removeCondition(\"stunned\");\r\n}\r\nelse \r\n{\r\n\tthis.script.notification(`Brak Stanów Oszołomienia do usunięcia`)\r\n}",
  "U2xKn7R1gm8kiQm8": "//*** Aura odwagi\r\nthis.actor.hasCondition(\"broken\")?.delete();\r\n\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "U4A8FDNmwBGTuQZO": "if (args.attacker.has(game.i18n.localize(\"NAME.Undead\")) && !args.attacker.has(game.i18n.localize(\"NAME.Ethereal\")))\r\n{\r\n    args.totalWoundLoss =  Math.floor(args.totalWoundLoss / 2)\r\n    args.modifiers.other.push({label : this.effect.name, details : \"Zmniejszone o połowę\", value : \"× 0.5\"})\r\n}",
  "u5dNZ0s3lWfL8KFb": "//*** Berserkerska Szarża\r\nreturn args.fields.charging",
  "U5ndCwcJ1s3Ns26w": "//*** Odmrożenia\r\nargs.item.system.qualities.value.push({name : \"magical\"});\r\nargs.item.system.damage.value += ` + ${parseInt(this.effect.sourceTest.result.SL)}`;\r\nargs.item.name += ` (${this.effect.name})`",
  "u6CYMSZADrfXd48Q": "//*** Soczewki do czytania\r\nargs.fields.modifier += 20;",
  "U78c4oUjKwyUu6jT": "//*** Amputowane ucho\r\nreturn (args.skill?.name != game.i18n.localize(\"NAME.Perception\") && args.characteristic != \"fel\")",
  "U9xh2wriSqCosugW": "//*** Rączy jeleń\r\nif (args.test.options.stag)\r\n{\r\n\tif (parseInt(args.test.result.SL) < 0 || args.test.failed)\r\n\t{\r\n\t\tif (parseInt(args.test.result.SL) < 0)\r\n\t\t{\r\n\t\t\targs.test.result.SL = \"+0\";\r\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalSuccess\");\r\n\t\t}\r\n\t\targs.test.result.outcome = \"success\";\r\n        args.test.result.other.push(`<strong>${this.effect.name}</strong>: Minimum +0 PS`);\r\n\t}\r\n}",
  "uACa6u4JLNMRgFlr": "const talents = await Promise.all([\"Wściekły Atak\", \"Urodzony żeglarz\"].map(game.wfrp4e.utility.findTalent))\r\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {fromEffect : this.effect.id})",
  "UaImulhbPURkLJg2": "return this.actor.attacker && (args.skill?.name.includes(\"Broń Biała (Podstawowa)\") || (args.type == \"weapon\" && args.item?.system.weaponGroup.value == \"basic\"))",
  "uAy4w7y8Uu9POF8C": "//*** Gorejący miecz Rhuin\r\nargs.item.system.qualities.value.push({name : \"impact\"})",
  "UC6G3pFQwzUhrw6F": "//*** Posłuch u Zwierząt\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.CharmAnimal\");",
  "ucF4aiJ1gpDB333G": "//*** Na Cztery Łapy\r\nif (args.test.options.catfall && (args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") || args.test.result.roll <= args.test.target) && !args.test.result.catfall)\r\n{\r\n   args.test.result.other.push(`<b>${this.effect.name}</b>: Obrażenia od upadku zmniejszone o liczbę metrów: ${Number(args.test.result.SL) + 1}`)\r\n   args.test.result.catfall = true; // Prevent duplicate messages\r\n}",
  "UDPsaymtZf39UsMk": "//*** Zatrucie Krwi\r\nlet fatigued = this.actor.hasCondition(\"fatigued\")\r\nif (!fatigued)\r\n{\r\n    this.actor.addCondition(\"fatigued\")\r\n    ui.notifications.notify(\"Zmęczenie dodane do \" + this.actor.name + \", które nie może zostać usunięte, dopóki objaw Apatia nie zostanie uleczony.\")\r\n}",
  "ugL5IBB6R2yWyMWd": "if (args.totalWoundLoss > 0)\r\n{\r\n    let apply = await Dialog.confirm({title : this.effect.name, content : `<p>Zadać Obrażenia z ${this.effect.name}? Atakujący musiał użyć gołych rąk lub broni do walki w zwarciu wykonanej z metalu.`})\r\n    if (apply)\r\n    {\r\n            \r\n        let damage = 5 + this.actor.characteristics.wp.bonus;\r\n        \r\n        let loc = args.opposedTest.attackerTest.weapon?.system.usesHands[0] || \"rArm\";\r\n        \r\n        let APatLoc = args.opposedTest.attacker.system.status.armour[loc];\r\n        \r\n        let metalAP = APatLoc.layers.reduce((metal, layer) => metal += (layer.metal ? layer.value : 0), 0)\r\n        \r\n        let APused = Math.max(0, APatLoc.value - metalAP); // remove metal AP at location;\r\n        \r\n        damage -= (APused + args.opposedTest.attacker.system.characteristics.t.bonus)\r\n        \r\n        let msg = await args.opposedTest.attacker.applyBasicDamage(damage, {suppressMsg : true, damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL});\r\n        msg += ` (zignorowano liczbę punktów metalowego pancerza: ${metalAP} z lokacji: ${game.wfrp4e.config.locations[loc]})`\r\n        this.script.scriptMessage(msg)\r\n    }\r\n}",
  "UgQW0UMPOZ0jwfVJ": "let current = this.actor.status.fortune.value\r\n\r\nthis.actor.update({\"system.status.fortune.value\" : 1 + current})\r\n\r\nthis.script.scriptMessage(`<b>${this.actor.prototypeToken.name}</b>: Punkty Szczęścia zwiększone z ${current} do ${1 + current}`)",
  "uLBDnWC3S0lRitbj": "let test = await this.actor.setupCharacteristic(\"int\", {skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\n\r\nlet opposedResult = test.opposedMessages[0]?.getOppose()?.resultMessage?.getOpposedTest()?.result\r\n\r\nif (opposedResult?.winner == \"attacker\")\r\n{\r\n    if (test.failed && (test.result.roll % 11 == 0 || test.result.roll == 100))\r\n    {\r\n        this.actor.addCondition(\"unconscious\")\r\n        await this.actor.update({\"system.status.corruption.value\" : parseInt(this.actor.status.corruption.value) + 1})\r\n        this.script.scriptMessage(\"Otrzymano Punkt Zepsucia\", {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    }\r\n    else \r\n    {\r\n        await this.actor.addCondition(\"stunned\", 1 + opposedResult.differenceSL);\r\n    }\r\n}\r\nelse \r\n{\r\n    return false;\r\n}",
  "ULmZMLezDamerN04": "let spells = await game.wfrp4e.utility.findAll(\"spell\", \"Wczytywanie Zaklęć...\")\r\n\r\nlet lore = (await game.wfrp4e.tables.rollTable(\"random-caster\", {hideDSN: true})).text\r\nthis.script.scriptNotification(lore)\r\nif (lore == \"Wybór Mistrza Gry\") {\r\n   return\r\n}\r\n\r\nelse if (lore == \"Magia Tajemna\") {\r\n    lore = \"Magia Tajemna\"\r\n}\r\n\r\nelse if (lore == \"Magia Prosta\") {\r\n    lore = \"petty\"\r\n}\r\n\r\nelse {\r\n    lore = lore.toLowerCase();\r\n}\r\n\r\nlet spellsWithLore = []\r\nif (lore == \"Magia Tajemna\") {\r\n    spellsWithLore = spells.filter(i => !i.system.lore.value)\r\n}\r\nelse {\r\n    spellsWithLore = spells.filter(i => i.system.lore.value == lore)\r\n}\r\n\r\nlet selectedSpell = spellsWithLore[Math.floor(CONFIG.Dice.randomUniform() * spellsWithLore.length)]\r\nItem.implementation.create(selectedSpell.toObject(), { parent: this.actor}).then(item => {\r\n    this.actor.setupCast(item).then(test => test.roll());\r\n})",
  "UnqnWi0dZYLf5fTT": "let choice1 = [\r\n    {\r\n        type : \"armour\",\r\n        name : \"Nogawice kolcze\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Kolczuga\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Czepiec kolczy\"\r\n    },\r\n]\r\nlet choice2 = [\r\n    {\r\n        type : \"armour\",\r\n        name : \"Nogawice kolcze\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Kolczuga\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Czepiec kolczy\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Skórzane nogawice\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Skórzany hełm\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Skórzana kurta\"\r\n    },\r\n]\r\nlet choice3 = [\r\n    {\r\n        type : \"armour\",\r\n        name : \"Płytowy Napierśnik\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Płytowe Naramienniki\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Hełm płytowy\"\r\n    },\r\n    {\r\n        type : \"armour\",\r\n        name : \"Płytowe Nagolenniki\"\r\n    },\r\n]\r\n\r\nlet choice = await Dialog.wait({\r\n    title : \"Wybór zbroi\",\r\n    content : \r\n    `<p>\r\n    Wybierz\r\n    </p>\r\n    <ol>\r\n    <li>Kolczuga</li>\r\n    <li>Kolczuga i skóra</li>\r\n    <li>Płyta</li>\r\n    </ol> \r\n    `,\r\n    buttons : {\r\n        1 : {\r\n            label : \"Kolczuga\",\r\n            callback : () => {\r\n                return choice1\r\n            }\r\n        },\r\n        2 : {\r\n            label : \"Kolczuga i skóra\",\r\n            callback : () => {\r\n                return choice2\r\n            }\r\n        },\r\n        3 : {\r\n            label : \"Płyta\",\r\n            callback : () => {\r\n                return choice3\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nlet updateObj = this.actor.toObject();\r\nlet items = []\r\nfor (let c of choice)\r\n{\r\n    let existing \r\n    if (c.type == \"skill\")\r\n    {\r\n        existing = updateObj.items.find(i => i.name == c.name && i.type == c.type)\r\n        if (existing && c.diff?.system?.advances?.value)\r\n        {\r\n            existing.system.advances.value += c.diff.system.advances.value\r\n        }\r\n    }\r\n\r\n    if (!existing)\r\n    {\r\n        let item = await game.wfrp4e.utility.find(c.name, c.type)\r\n        if (item)\r\n        {\r\n            item = item.toObject()\r\n            equip(item);\r\n                items.push(mergeObject(item, (c.diff || {})))\r\n        }\r\n        else\r\n            ui.notifications.warn(`Could not find ${c.name}`, {permanent : true})\r\n    }\r\n\r\n}\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "uNYstk3eXmWamhzs": "//*** Błyskawica T’Essli\r\nargs.actor.addCondition(\"blinded\")",
  "upfK6GM33qZCZjll": "return args.item?.name != \"Muzyka (Lutnia)\"",
  "uSwkYENTOcnfRrqA": "//*** Wtargnięcie z Włamaniem\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Melee\")) && args.weapon?.system?.attackType != \"melee\"",
  "UTlgF4azrGQZsoDv": "const talents = await Promise.all([\"Oburęczność\", \"Rozproszenie Uwagi\"].map(game.wfrp4e.utility.findTalent))\r\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {fromEffect : this.effect.id})",
  "Uvk1X7sEhvv77YkD": "//*** Dekoncentrujący\r\nif (!args.flags.distractingApplied)\r\n{\r\n    args.fields.modifier -= 20;\r\n    args.flags.distractingApplied = true;\r\n}",
  "uwdQvZtzy2HVeEzx": "if (args.totalWoundLoss > 0)\r\n{\r\n    let roll = await new Roll(\"1d10\").roll();\r\n    roll.toMessage(this.script.getChatData());\r\n    args.modifiers.other.push({label : this.effect.name, value : roll.total})\r\n    \r\n    args.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"hard\"}, skipTargets: true, appendTitle :  \" - \" + this.effect.name}).then(async test => {\r\n        await test.roll();\r\n        if (test.failed)\r\n        {\r\n            this.script.scriptMessage(\"<strong>\" + args.actor.name + \"</strong> otrzymuje @Table[critbody]{Trafienie Krytyczne} w korpus\", {whisper: ChatMessage.getWhisperRecipients(\"GM\")}) \r\n        }\r\n    })\r\n}\r\n",
  "UWrzokgabRKUpnkG": "//*** Dziwnokorzeń\r\nreturn [\"t\", \"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)",
  "UYLXm2W6jVn21Age": "//*** Rój\r\nargs.fields.modifier += 40;",
  "v00nVCRKqqRvY28t": "//*** Poniżej pasa!\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, fields: {difficulty: \"hard\"}});\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"stunned\", 3)\r\n}\r\n",
  "V1D2Uo3WDKYQePU3": "let damage = this.effect.sourceTest.result.damage;\r\n        \r\nlet loc = \"head\"\r\nlet APatLoc = this.actor.system.status.armour[loc];\r\n\r\nlet metalAP = APatLoc.layers.reduce((metal, layer) => metal += (layer.metal ? layer.value : 0), 0)\r\n\r\nlet APused = Math.max(0, APatLoc.value - metalAP); // remove metal AP at location;\r\n\r\ndamage -= (APused + this.actor.system.characteristics.t.bonus)\r\n\r\nlet msg = await this.actor.applyBasicDamage(damage, {suppressMsg : true, damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL});\r\nmsg += ` (Zignorowano PP metalowego pancerza: ${metalAP} z lokacji ${game.wfrp4e.config.locations[loc]})`\r\nthis.script.scriptMessage(msg)\r\n",
  "v4CCxVaVGf9i8U7X": "//*** Gorzkie oczyszczenie\r\nlet cured = await Dialog.wait({\r\n    title : this.effect.name,\r\n    content : \"<p>Wpisz liczbę chorób/klątw, które zostały uleczone</p><input type='number'>\",\r\n    buttons : {\r\n        confirm : {\r\n            label : \"Potwierdź\",\r\n            callback : (dlg) => {\r\n                let input = dlg.find(\"input\");\r\n                value = parseInt(input[0].value);\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\nlet damage = 0;\r\n\r\nlet rolls = new Array(cured).fill(\"\").map(i => `max(0, 1d10 - ${this.actor.system.characteristics.fel.bonus})`);\r\n\r\nlet test = new Roll(`${rolls.join(\" + \")}`);\r\nawait test.roll();\r\ntest.toMessage({speaker : {alias : this.actor.name}, flavor : this.effect.name});\r\nthis.script.message(await this.actor.applyBasicDamage(test.total, { damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg : true }))",
  "v4ITTsSY9EvCbhZP": "//*** Zwierzęcy Instynkt\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "v5xrDWcrTNFJkyQB": "let choice1 = [\r\n    {\r\n        type : \"skill\",\r\n        name : \"Broń Zasięgowa (Łuk)\",\r\n        diff : {\r\n            system : {\r\n                advances : {\r\n                    value : 10\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        type : \"weapon\",\r\n        name : \"Łuk długi\",\r\n    },\r\n    {\r\n        type : \"ammunition\",\r\n        name : \"Strzała\",\r\n    }\r\n]\r\nlet choice2 = [\r\n]\r\n\r\nlet choice = await Dialog.wait({\r\n    title : \"Opcjonalne\",\r\n    content : \r\n    `<p>\r\n    Dodać opcjonalne przedmioty?\r\n    </p>\r\n    <ol>\r\n    <li>Broń Zasięgowa (Łuk) +10 oraz długi łuk z 12 strzałami</li>\r\n    </ol> \r\n    `,\r\n    buttons : {\r\n        1 : {\r\n            label : \"Tak\",\r\n            callback : () => {\r\n                return choice1;\r\n            }\r\n        },\r\n        2 : {\r\n            label : \"Nie\",\r\n            callback : () => {\r\n                return choice2;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nlet updateObj = this.actor.toObject();\r\nlet items = []\r\nfor (let c of choice)\r\n{\r\n    let existing \r\n    if (c.type == \"skill\")\r\n    {\r\n        existing = updateObj.items.find(i => i.name == c.name && i.type == c.type)\r\n        if (existing && c.diff?.system?.advances?.value)\r\n        {\r\n            existing.system.advances.value += c.diff.system.advances.value\r\n        }\r\n    }\r\n\r\n    if (!existing)\r\n    {\r\n        let item = await game.wfrp4e.utility.find(c.name, c.type)\r\n        if (item)\r\n        {\r\n            item = item.toObject()\r\n            equip(item);\r\n                items.push(mergeObject(item, (c.diff || {})))\r\n        }\r\n        else\r\n            ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n\r\n}\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "v6LIG7EwWYALxCpP": "//*** Trained - Półgryf Wierzchowiec\r\nreturn !this.effect.getFlag(\"wfrp4e\", \"trained\")?.includes(\"entertain\") || (!args.skill?.name.includes(game.i18n.localize(\"NAME.Entertain\")) && !args.skill?.name.includes(game.i18n.localize(\"NAME.Perform\")) && !args.skill?.name.includes(game.i18n.localize(\"NAME.Play\")))",
  "V7qmFwUMCY2tfziH": "//*** Sieć Amyntoka\r\nthis.actor.addCondition(\"stunned\")",
  "V9wD9FWHWxZUOGSI": "let roll = await (new Roll(`max(0, 1d10 - ${this.actor.characteristics.wp.bonus})`).roll())\r\nlet fatigued = roll.total\r\nroll.toMessage(this.script.getChatData());\r\nif (fatigued > this.actor.characteristics.wp.bonus)\r\n{\r\n    this.actor.addCondition(\"unconscious\")\r\n    this.script.scriptNotification(`Utrata Przytomności`)\r\n}\r\nelse \r\n{\r\n    fatigued = Math.max(0, fatigued)\r\n    if (fatigued)\r\n        this.actor.addCondition(\"fatigued\", fatigued)\r\n    this.script.scriptNotification(`Otrzymano Stany Zmęczenia w liczbie: ${fatigued}`)\r\n}",
  "V9xm4X1x3lPYTQaI": "if (args.extendedTest?.getFlag(\"wfrp4e\", \"fear\"))\r\n{\r\n\tthis.script.scriptNotification(\"Niewrażliwy na Strach\");\r\n\targs.extendedTest.delete();\r\n\targs.abort = true;\r\n}",
  "V9zm2hKUVLVZtAcN": "let characteristics = {\r\n  \"ws\" : -10,\r\n  \"bs\" : -10,\r\n  \"s\" : 0,\r\n  \"t\" : 15,\r\n  \"i\" : 15,\r\n  \"ag\" : -20,\r\n  \"dex\" : 0,\r\n  \"int\" : 20,\r\n  \"wp\" : 10,\r\n  \"fel\" : 10\r\n}\r\nlet skills = [\"Charyzma\", \"Splatanie Magii\", \"Występy (Przepowiednie)\", \"Intuicja\"]\r\nlet skillAdvancements = [0, 0, 20, 10]\r\nlet talents = [\"Rozpoznanie Artefaktu\", \"Groźny\", \"Szósty Zmysł\"]\r\nlet traits = [\"Wróżba Losu\", \"Rzucanie Czarów (Tradycja Życia)\", \"Ochrona\"]\r\nlet trappings = []\r\nlet items = [];\r\nlet spells = [\"Pole cierniowe\"];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n  updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n  let skill = skills[index]\r\n  let skillItem;\r\n  skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n  if (skillItem)\r\n      skillItem.system.advances.value += skillAdvancements[index]\r\n  else \r\n  {\r\n      skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n      skillItem = skillItem.toObject();\r\n      skillItem.system.advances.value = skillAdvancements[index];\r\n      items.push(skillItem);\r\n  }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n  let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n  if (talentItem)\r\n  {\r\n      items.push(talentItem.toObject());\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n  }\r\n}\r\n\r\nconst traitRegex = /(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm\r\nfor (let trait of traits)\r\n{\r\n  let traitMatches = trait.matchAll(traitRegex).next().value\r\n  let traitName = traitMatches[1]\r\n  let traitVal = traitMatches[2] || traitMatches[4] // could be match 2 or 4 depending on if there's a specialization\r\n  let traitSpec = traitMatches[3]\r\n\r\n  let traitItem;\r\n  try {\r\n      traitItem = await WFRP_Utility.findItem(traitName, \"trait\")\r\n  }\r\n  catch { }\r\n  if (!traitItem) {\r\n      ui.notifications.warn(`Could not find ${trait}`, {permanent : true})\r\n  }\r\n  traitItem = traitItem.toObject()\r\n\r\n  if (Number.isNumeric(traitVal))\r\n  {\r\n      traitItem.system.specification.value = traitName.includes('Weapon','Horns','Tail','Tentacles','Bite') ? traitVal - parseInt(characteristicValues[3]/10) : traitVal;\r\n      traitItem.name = (traitItem.name +  ` ${traitSpec ? \"(\"+ traitSpec + \")\" : \"\"}`).trim()\r\n  }\r\n  else \r\n      traitItem.system.specification.value = traitSpec\r\n\r\n  items.push(traitItem)\r\n\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n  let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n  if (trappingItem)\r\n  {\r\n      trappingItem = trappingItem.toObject()\r\n\r\n      equip(trappingItem)\r\n\r\n      items.push(trappingItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n  }\r\n}\r\n\r\nfor (let spell of spells) \r\n{\r\n  let spellItem = await game.wfrp4e.utility.findItem(spell)\r\n  if (spellItem)\r\n  {\r\n      spellItem = spellItem.toObject()\r\n\r\n      items.push(spellItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${spell}`, {permanent : true})\r\n  }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\n\r\nfunction equip(item)\r\n{\r\n  if (item.type == \"armour\")\r\n      item.worn = true\r\n  else if (item.type == \"weapon\")\r\n      item.equipped = true\r\n  else if (item.type == \"trapping\" && item.trappingType?.value == \"clothingAccessories\")\r\n      item.worn = true\r\n}",
  "VAPsww9x3HAw1sKP": "//*** Walka w Ciasnocie\r\nreturn !args.options.dodge",
  "VAs1nXvicdQK18Do": "//*** Zwisający jęzor\r\nreturn args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));",
  "Vb7rgl8T4VRswbnZ": "//*** Pancerz (Tylnie Nogi) - Półgryf Wierzchowiec\r\nthis.actor.status.addArmour(parseInt(this.item.system.specification.value) || 0, {source: this.effect, damage : this.item.getFlag(\"wfrp4e\", \"APdamage\")})",
  "VbL0TgaBAmYjrezZ": "const talents = await Promise.all([game.i18n.localize(\"NAME.Hardy\")].map(game.wfrp4e.utility.findTalent))\r\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {fromEffect : this.effect.id})",
  "vc4bELo0cWYoILfB": "//*** Dotyk Rhyi\r\nlet choice = await ItemDialog.create(this.actor.itemTypes.disease, 1, \"Wybierz chorobę, którą chcesz uleczyć (Musi być naturalnego pochodzenia)\")\r\n\r\nthis.script.message(`Uleczono <strong>${choice[0]?.name}</strong>`);\r\nchoice[0].delete()",
  "vcM0IgsYVmfWrlO3": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.rOV2s6PQBBrhpMOv\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id});",
  "vFUVWZ1l8wpTjLcx": "//*** Zniszczenie pomniejszego demona\r\nif (!this.actor.has(game.i18n.localize(\"NAME.Daemonic\")))\r\n    return\r\n\r\nlet caster = this.effect.sourceActor;\r\nif (caster) \r\n{\r\n    let wp = caster.system.characteristics.wp\r\n    if (this.actor.system.characteristics.wp.value >= wp.value)\r\n    {\r\n        this.script.notification(\"Cel ma wyższą Siłę Woli, brak efektu\")\r\n        return\r\n    }\r\n    this.actor.applyBasicDamage(wp.bonus, { damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL })\r\n}",
  "vgfs0DXvF5iKrz1M": "//*** Stubbed Toe\r\nreturn args.characteristic != \"ag\" || this.item.getFlag(\"wfrp4e\", \"passed\")",
  "VKpKq4RSbI1KkUQK": "//*** Klątwa porażającego bólu\r\nthis.actor.flags.useless[this.effect.getFlag(\"wfrp4e\", \"location\")] = true;",
  "Vkuu70BZV4DPYO2Q": "//*** Snajper\r\nreturn args.item?.system?.attackType != \"ranged\"",
  "VlFUDaKUYoBYKYn0": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context : {failure: \"Otrzymano 1 Punkt Zepsucia\"}})\r\nawait test.roll();\r\nif (test.failed && this.actor.type == \"character\")\r\n{\r\n    this.actor.update({\"system.status.corruption.value\" : parseInt(this.actor.status.corruption.value) + 1})\r\n    this.script.scriptMessage(\"Otrzymano 1 Punkt Zepsucia\", {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "VNOKTzCrFbZ6PJUj": "return ![\"Oswajanie\", \"Odporność\", \"Sztuka Przetrwania\"].includes(args.skill?.name)",
  "vPG4rV640aSzKzxe": "//*** Amputowany palec u ręki\r\nreturn !this.actor.flags.useless[this.item.system.location.key[0] + \"Arm\"] || [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic)",
  "VqTrKPtxv9hpn0Hr": "//*** Precyzyjne Inkantowanie\r\nreturn args.skill?.name != `${game.i18n.localize(\"NAME.Language\")} (${game.i18n.localize(\"SPEC.Magick\")})`",
  "vSDMygIT9nNvEGWG": "// Each time the blade is used, the GM should secretly roll a d10.\r\n// On a 1, its poison has run dry, \r\n// and the next time it is employed it will shatter.\r\n\r\nif (Math.ceil(CONFIG.Dice.randomUniform() * 10) == 1) {\r\n  this.item.setFlag(\"wfrp4e\", \"brittle\", true)\r\n  ChatMessage.create({\r\n    content: `\r\n      <strong>${this.item.name}</strong>: trucizna skończyła się. Podczas następnego użycia zostanie roztrzaskany.`, \r\n    whisper: ChatMessage.getWhisperRecipients(\"GM\"),\r\n    blind: true\r\n  })\r\n}\r\n",
  "VuE1mhrB6X6MYTzg": "//*** Odwrócona twarz\r\nreturn args.characteristic == \"fel\"",
  "vuzRRj5d9XdNYx3o": "let broken = this.actor.hasCondition(\"broken\")\r\nif (broken)\r\n{\r\n    broken.delete();\r\n    this.script.scriptNotification(\"Usunięto Stan Panika\")\r\n}",
  "vvdo1NxjmGVkmFCT": "//*** Wywichnięty bark\r\nawait this.actor.addCondition(\"stunned\");\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty : \"hard\"}, skipTargets: true, appendTitle :  \" - \" + this.effect.name})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n\tawait this.actor.addCondition(\"prone\")\r\n\tawait this.actor.addCondition(\"stunned\")\r\n}\r\n          \r\nlet location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono przedmiot(y): ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}",
  "vZ5HCrhY8e4R1TrG": "//*** Oszpecający cios\r\nlet eye = await fromUuid(\"Compendium.wfrp4e-core.items.weczkAMPlTjX7lqU\")\r\nlet nose = await fromUuid(\"Compendium.wfrp4e-core.items.SpPRZZRHxly7uo2G\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [eye, nose]);",
  "vzMxIDjRlQSxXtCW": "//*** Precyzyjne Inkantowanie\r\n// Remove the miscast if doubles rolled and succeeded\r\nif(args.test.succeeded && args.test.result.minormis && args.test.result.roll % 11 == 0)\r\n{\r\n    delete args.test.result.minormis\r\n}\r\n// Decrement the major miscast to minor miscast\r\nelse if(args.test.succeeded && args.test.result.majormis && args.test.result.roll % 11 == 0)\r\n{\r\n    delete args.test.result.majormis\r\n    args.test.result.minormis = game.i18n.localize(\"ROLL.MinorMis\")\r\n}",
  "VzO0ZDcTWvaBn4vm": "//*** Amputowany język\r\nif (args.test.preData.skillName?.includes(game.i18n.localize(\"NAME.Language\")) || args.test instanceof CastTest)\r\n{\r\n\tif (parseInt(args.test.result.SL) > 0 || args.test.succeeded)\r\n\t{\r\n\t\tif (parseInt(args.test.result.SL) > 0)\r\n\t\t{\r\n\t\t\targs.test.result.SL = \"-0\";\r\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalFailure\");\r\n\t\t}\r\n\t\targs.test.result.outcome = \"failure\"\r\n        args.test.result.other.push(`<strong>${this.effect.name}</strong>: Maksymalnie -0 PS`);\r\n\t}\r\n}",
  "w3r54pKZQKaH2Yer": "//*** Straszny wygląd (Guślarstwo)\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\")\r\nlet data = item.toObject();\r\nlet slOver = this.effect.sourceTest.result.slOver;\r\nlet overcast = this.effect.sourceTest.result.overcast\r\nslOver -= ((overcast.total - overcast.available) * 2) // If they used an overcast, subtract 2 SL for each one\r\nlet added = Math.floor(slOver / 3) || 0\r\ndata.system.specification.value = 1 + added; // For each +3 SL, add 1 specification\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "w4JKuTECFmu3YmTR": "//*** Roughrider\r\nreturn !args.skill?.name?.includes(game.i18n.localize(\"NAME.Ride\"))",
  "W9nyUNQStMr1pUHJ": "//*** Ziejąca rana ramienia\r\nif (args.opposedTest.result.hitloc.value == this.item.system.location.key)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n    this.script.notification(\"Otrzymano Stan Krwawienie\")\r\n}",
  "wAETU6aTRr9d4oCU": "//*** Ballock Knife\r\nargs.fields.slBonus++;",
  "wAntJhgb8Og5vJXh": "//*** Leczenie\r\nargs.options.staunchBleeding = true;",
  "WB6sIpLEPC8YPX67": "//*** Amputowana noga\r\nif (args.options.dodge)\r\n{\r\n\targs.abort = true;\r\n\tthis.script.notification(\"Nie można unikać!\")\r\n}\r\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)",
  "wbM7tpw4TxvadcWm": "let items = this.effect.itemTargets;\r\nlet msg = \"\";\r\nfor(let item of items)\r\n{\r\n    if (item.system.properties.qualities.durable)\r\n    {\r\n        await item.update({\"system.qualities.value\" : []});\r\n        msg += `<p>${item.name}: utracono wszystkie Zalety</p>`\r\n    }\r\n    else \r\n    {\r\n        msg += `<p>${item.name}: rozsypano w pył!</p>` \r\n        await item.update({name : item.name + \" (Pył)\"})\r\n    }\r\n}\r\nif(msg)\r\n{\r\n    this.script.scriptMessage(msg);\r\n}",
  "whUSkaR1yem21bXp": "let characteristics = {\r\n  \"ws\" : 10,\r\n  \"bs\" : 5,\r\n  \"s\" : 0,\r\n  \"t\" : 5,\r\n  \"i\" : 10,\r\n  \"ag\" : 0,\r\n  \"dex\" : 6,\r\n  \"int\" : -5,\r\n  \"wp\" : 0,\r\n  \"fel\" : 10\r\n}\r\nlet skills = [\"Broń Biała (Podstawowa\", \"Tropienie\"]\r\nlet skillAdvancements = [8, 7]\r\nlet talents = [\"Berserkerska Szarża\", \"Cios Mierzony\", \"Morderczy Atak\"]\r\nlet traits = [\"Latanie (8)\", \"Furia\", \"Rój\", \"Tropiciel\"]\r\nlet trappings = []\r\nlet items = [];\r\nlet spells = [];\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n  updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n  let skill = skills[index]\r\n  let skillItem;\r\n  skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n  if (skillItem)\r\n      skillItem.system.advances.value += skillAdvancements[index]\r\n  else \r\n  {\r\n      skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n      skillItem = skillItem.toObject();\r\n      skillItem.system.advances.value = skillAdvancements[index];\r\n      items.push(skillItem);\r\n  }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n  let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n  if (talentItem)\r\n  {\r\n      items.push(talentItem.toObject());\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n  }\r\n}\r\n\r\nconst traitRegex = /(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm\r\nfor (let trait of traits)\r\n{\r\n  let traitMatches = trait.matchAll(traitRegex).next().value\r\n  let traitName = traitMatches[1]\r\n  let traitVal = traitMatches[2] || traitMatches[4] // could be match 2 or 4 depending on if there's a specialization\r\n  let traitSpec = traitMatches[3]\r\n\r\n  let traitItem;\r\n  try {\r\n      traitItem = await WFRP_Utility.findItem(traitName, \"trait\")\r\n  }\r\n  catch { }\r\n  if (!traitItem) {\r\n      ui.notifications.warn(`Could not find ${trait}`, {permanent : true})\r\n  }\r\n  traitItem = traitItem.toObject()\r\n\r\n  if (Number.isNumeric(traitVal))\r\n  {\r\n      traitItem.system.specification.value = traitName.includes('Weapon','Horns','Tail','Tentacles','Bite') ? traitVal - parseInt(characteristicValues[3]/10) : traitVal;\r\n      traitItem.name = (traitItem.name +  ` ${traitSpec ? \"(\"+ traitSpec + \")\" : \"\"}`).trim()\r\n  }\r\n  else \r\n      traitItem.system.specification.value = traitSpec\r\n\r\n  items.push(traitItem)\r\n\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n  let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n  if (trappingItem)\r\n  {\r\n      trappingItem = trappingItem.toObject()\r\n\r\n      equip(trappingItem)\r\n\r\n      items.push(trappingItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n  }\r\n}\r\n\r\nfor (let spell of spells) \r\n{\r\n  let spellItem = await game.wfrp4e.utility.findItem(spell)\r\n  if (spellItem)\r\n  {\r\n      spellItem = spellItem.toObject()\r\n\r\n      items.push(spellItem);\r\n  }\r\n  else \r\n  {\r\n      ui.notifications.warn(`Could not find ${spell}`, {permanent : true})\r\n  }\r\n}\r\n\r\nupdateObj.name = updateObj.name += \" \" + this.effect.name\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\n\r\nfunction equip(item)\r\n{\r\n  if (item.type == \"armour\")\r\n      item.worn = true\r\n  else if (item.type == \"weapon\")\r\n      item.equipped = true\r\n  else if (item.type == \"trapping\" && item.trappingType?.value == \"clothingAccessories\")\r\n      item.worn = true\r\n}",
  "WiYtNU2Y5BJfIpeM": "//*** Jolted Wrist\r\nlet location = this.item.system.location.key;\r\n\r\nif (location)\r\n{\r\n    let dropped = this.item.system.weaponsAtLocation;\r\n\r\n    if (dropped.length)\r\n    {\r\n        this.script.notification(`Upuszczono ${dropped.map(i => i.name).join(\", \")}!`)\r\n        for(let weapon of dropped)\r\n        {\r\n            await weapon.system.toggleEquip();\r\n        }\r\n    }\r\n}",
  "WKXyVHQwQCNTfSKv": "//*** Demoniczny\r\nif ((args.item.type == \"weapon\" || args.item.system.attackType) && !args.item.isMagical )\r\n{\r\n    args.item.system.qualities.value.push({name : \"magical\"})\r\n}",
  "WnWA0e0bgqBsZp2L": "//*** Bastard Sword\r\nthis.item.update({\"system.twohanded.value\" : !this.item.system.twohanded.value})",
  "WO5n7Vbx8AgoVrwC": "//*** Bystrzak\r\nlet characteristics = {\r\n    \"ws\" : 0,\r\n    \"bs\" : 0,\r\n    \"s\" : 0,\r\n    \"t\" : 0,\r\n    \"i\" : 10,\r\n    \"ag\" : 0,\r\n    \"dex\" : 0,\r\n    \"int\" : 10,\r\n    \"wp\" : 5,\r\n    \"fel\" : 5\r\n}\r\nlet skills = [\"Intuicja\", \"Wiedza (Lokalna)\", \"Percepcja\"]\r\nlet skillAdvancements = [10, 10, 10]\r\nlet talents = []\r\nlet trappings = [\"Kolczuga\", \"Nogawice kolcze\", \"Czepiec kolczy\", \"Broń ręczna\"]\r\nlet items = []\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "WPQbVpD1uwSLAXq1": "//*** Niestabilny\r\nif (this.actor.system.status.wounds.value == 0)\r\n{\r\n\tthis.actor.addCondition(\"dead\");\r\n}",
  "wS6OIR3QN4mOUHn0": "//*** Struga zepsucia\r\nif (args.totalWoundLoss > args.actor.characteristics.t.bonus)\r\n{\r\n  args.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\")).then(async test => {\r\n    await test.roll()\r\n    if (test.failed) {\r\n      let disease = await fromUuid(\"Compendium.wfrp4e-core.items.M8XyRs9DN12XsFTQ\")\r\n      disease = disease.toObject()\r\n      disease.system.duration.active = true\r\n      args.actor.createEmbeddedDocuments(\"Item\", [disease])\r\n    }\r\n  })\r\n}",
  "wsqNM4NHnwaAAQym": "//*** Miecz sprawiedliwości\r\n    args.applyAP = false;\r\n\r\n    this.script.notification(\"Ten test dotyczy tylko przestępców, w przeciwnym razie zamknij okno dialogowe.\");\r\n    this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty : \"average\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`}).then(async test => \r\n    {\r\n      await test.roll();\r\n      if (test.failed)\r\n      {\r\n        args.actor.addCondition(\"unconscious\");\r\n      }\r\n    });",
  "WwxXgsNxlccmqTze": "//*** Shattered Skull\r\nthis.actor.addCondition(\"dead\")",
  "WY3DajPRGcMNt158": "//*** Dekoncentracja (Światło)\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.MVI0lXcg6vvtooAF\")\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {fromEffect : this.effect.id})",
  "wyTCozh9qGTx6yK0": "if (args.options.terror || args.extendedTest?.getFlag(\"wfrp4e\", \"fear\"))\r\n{\r\n\targs.abort = true;\r\n\tthis.script.scriptNotification(\"Nie musi robić testów strachu lub grozy\");\r\n}",
  "wzkxiKjxVEeNS1di": "//*** Upiorne Wycie\r\nlet roll = await new Roll(\"1d10\").roll();\r\nthis.script.message(await this.actor.applyBasicDamage(roll.total, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg: true}))\r\n\r\nawait this.actor.addCondition(\"deafened\", 3)\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields : {difficulty: \"average\" }, skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context : {failure: \"Otrzymano Stan Paniki\", success : \"Uniknięto Stanu Paniki\"}})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"broken\")\r\n}",
  "WzMmwjZbhyCbHxyZ": "//*** Pancerz z ołowiu\r\nthis.actor.status.encumbrance.state += 2\r\nthis.actor.status.encumbrance.pct = 100;",
  "x2RLUUNB7BiIDYCP": "let difficulty = \"\"\r\nif (this.effect.name.includes(\"Umiarkowany\"))\r\n    difficulty = \"easy\"\r\nelse if (this.effect.name.includes(\"Poważny\"))\r\n    difficulty = \"average\"\r\nelse\r\n    difficulty = \"veasy\"\r\n\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {context : {failure : this.actor.name + \" umiera z powodu uwiądu\"}, fields: {difficulty}, skipTargets: true, appendTitle :  \" - Uwiąd\"})\r\nawait test.roll();\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"dead\");\r\n}",
  "x8XK2fzzXCnSwfjt": "//*** Sprężynka\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Athletics\"))\r\nawait test.roll();\r\n\r\nif (test.succeeded)\r\n{\r\n\tthis.actor.removeCondition(\"prone\");\r\n}",
  "x9iKFYYc4Ocy8PTS": "let item = this.effect.getCreatedItems()?.[0];\r\nChatMessage.create({content : \"<em>Gracja ponad stylem</em>\", speaker : ChatMessage.getSpeaker({token: this.actor.getActiveTokens()[0]?.document, actor: this.actor})}, {chatBubble : true})\r\n\r\nlet choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n    \"nobles\" : \"Szlachta\",\r\n    \"guilders\" : \"Gildie\",\r\n    \"servants\" : \"Słudzy\"\r\n}), 1, \"Wybierz grupę społeczną\")\r\n\r\nlet n = choice[0]?.name\r\n\r\nif (!n)\r\n{\r\n    return;\r\n}\r\n\r\nif (item)\r\n{\r\n    item.update({\r\n        name : item.name.split(\"(\")[0] + ` (${n})`, \r\n        \"system.tests.value\" : item.system.tests.value.split(\"(\")[0] + ` (${n}`\r\n    })\r\n}\r\nelse \r\n{\r\n    item = await fromUuid(\"Compendium.wfrp4e-core.items.Item.sYbgpSnRqSZWgwFP\");\r\n    let data = item.toObject();\r\n    data.name += ` (${n})`\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect: this.effect.id})\r\n}",
  "xBpLQa7yBPczDMY8": "//*** Kosa żniwiarza\r\n    let scythe = (await fromUuid(\"Compendium.wfrp4e-core.items.CXg7XOFJwu4LZ9LM\")).toObject();\r\n    scythe.name = \"Kosa Shyish\";\r\n    scythe.system.damage.value = \"WPB + 3\"\r\n    scythe.system.equipped = true;\r\n    scythe.img = this.effect.icon;\r\n    scythe.system.qualities.value.push({name : \"magical\"})\r\n    this.actor.createEmbeddedDocuments(\"Item\", [scythe], {fromEffect : this.effect.id})",
  "XClTZOjuhcxWLF51": "//*** Czyste złamanie\r\nlet test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty: \"difficult\"}, skipTargets: true, appendTitle :  ` - ${this.effect.name}`})\r\nawait test.roll();\r\n\r\nif (test.failed)\r\n{\r\n    this.actor.addCondition(\"stunned\")\r\n}\r\n\r\n\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.4lj1ik958mbgAlaF\")\r\nlet data = item.toObject();\r\ndata.system.location.key = this.item.system.location.key\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})\r\n",
  "XcvDYNZgJ2rpAdDV": "let fatigued = this.actor.hasCondition(\"fatigued\")\r\nif (!fatigued)\r\n{\r\n    this.actor.addCondition(\"fatigued\")\r\n    ui.notifications.notify(\"Zmęczenie dodane do \" + this.actor.name + \", które nie może zostać usunięte, dopóki objaw Apatia nie zostanie uleczony.\")\r\n}",
  "Xf4FcZ4ZLdWmOXBa": "//*** Cień\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Perception\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));",
  "xIRU2SaqLeWmqGDI": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.vMYEkrWj0ip6ZOdv\")\r\nlet data = item.toObject();\r\ndata.name += \" (Choroba)\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "Xk9XPklxxTvFlwpI": "//*** Przekonujący\r\nargs.options.useOnesArgumentative = true;",
  "xLKAuD6yzwjAL6tJ": "//*** Amputowana dłoń\r\nreturn !args.weapon || args.weapon?.system.properties?.qualities.shield || !this.item.system.usesLocation(args.weapon)",
  "xMhhVol8Is3DJ3gb": "//*** Gorejące słońce\r\nif (this.effect.sourceTest.succeeded)\r\n{\r\n    let blinded = 1 + this.effect.sourceTest.result.overcast.usage.other.count\r\n    this.actor.addCondition(\"blinded\", blinded)\r\n}",
  "XO9m2AvFRAAeEuty": "//*** Pierwsza Pomoc\r\nif (args.test.options.fieldDressing && args.test.result.reversed)\r\n{\r\n\targs.test.data.result.SL = \"+\" + Math.min(1, Number(args.test.data.result.SL))\r\n\targs.test.result.other.push(`<b>${this.effect.name}</b>: PS ograniczone do 1`);\r\n}",
  "xobGBJbgFjQCrwvq": "//*** Płomień Wiary\r\nlet roll;\r\nif (this.actor.has(game.i18n.localize(\"NAME.Daemonic\")) || this.actor.has(game.i18n.localize(\"NAME.Undead\")) || [\"Goblin\", \"Ork\", \"Nieumarły\"].includes(this.actor.system.details.species.value))\r\n{\r\n    roll = await new Roll(`1d10 + ${this.effect.sourceTest.result.overcast.usage.other.current}`).roll()\r\n}\r\nelse \r\n{\r\n    roll = await new Roll(`1d10`).roll()\r\n}\r\n\r\nroll.toMessage(this.script.getChatData())\r\nawait this.actor.applyBasicDamage(roll.total, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, suppressMsg : true})\r\n\r\nif (this.actor.has(game.i18n.localize(\"NAME.Undead\")) || args.actor.has(game.i18n.localize(\"NAME.Daemonic\")))\r\n{\r\n  this.actor.addCondition(\"ablaze\")\r\n}",
  "xPDMpOvC1ZBVxrNg": "//*** Ukojenie Rhyi\r\nargs.fields.modifier += 10;",
  "xpgXWoK2zDnG1uiF": "//*** Wytrwałość Eremity\r\n    let stunned = args.actor.hasCondition(\"stunned\")\r\n    if (stunned)\r\n    {\r\n        stunned.system.scriptData = stunned.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        stunned.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n    let poisoned = args.actor.hasCondition(\"poisoned\")\r\n    if (poisoned)\r\n    {\r\n        poisoned.system.scriptData = poisoned.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        poisoned.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n    let deafened = args.actor.hasCondition(\"deafened\")\r\n    if (deafened)\r\n    {\r\n        deafened.system.scriptData = deafened.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        deafened.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n\r\n    let entangled = args.actor.hasCondition(\"entangled\")\r\n    if (entangled)\r\n    {\r\n        entangled.system.scriptData = entangled.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        entangled.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n\r\n    let fatigued = args.actor.hasCondition(\"fatigued\")\r\n    if (fatigued)\r\n    {\r\n        fatigued.system.scriptData = fatigued.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        fatigued.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n    let blinded = args.actor.hasCondition(\"blinded\")\r\n    if (blinded)\r\n    {\r\n        blinded.system.scriptData = blinded.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        blinded.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n    let broken = args.actor.hasCondition(\"broken\")\r\n    if (broken)\r\n    {\r\n        broken.system.scriptData = broken.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        broken.system._scripts = null;\r\n    }\r\n\r\n\r\n\r\n    let prone = args.actor.hasCondition(\"prone\")\r\n    if (prone)\r\n    {\r\n        prone.system.scriptData = prone.system.scriptData.filter(s => s.trigger != \"dialog\")\r\n        prone.system._scripts = null;\r\n    }\r\n\r\n",
  "XPxAKqPpPYE4E6B5": "//*** Podbite oko\r\nargs.fields.modifier -= 10 * this.effect.conditionValue",
  "xQ3xR2Wf0wHFa76H": "//*** Slippery Skin\r\nreturn [\"ws\", \"bs\", \"fel\", \"dex\"].includes(args.characteristic) || args.weapon",
  "xqWxV9w5ezBQdJkZ": "//*** Biczownik\r\nreturn args.options.corruption;",
  "xRd6oA1QWLVpfoBm": "if (!this.actor.has(\"Widzenie w Ciemności\"))\r\n{\r\n    let item = await fromUuid(\"Compendium.wfrp4e-core.items.FmHDbCOy3pH8yKhm\");\r\n    let data = item.toObject();\r\n    this.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})\r\n}",
  "XRrGBbplNLZpXnCH": "//*** Dzika postać Wissana\r\nlet item;\r\nlet items = []\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.rOV2s6PQBBrhpMOv\")\r\n{\r\n    let data = item.toObject();\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.VUJUZVN3VYhOaPjj\")\r\n{\r\n    let data = item.toObject();\r\n    data.system.specification.value = 2\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.GbDyBCu8ZjDp6dkj\")\r\n{\r\n    let data = item.toObject();\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.a8MC97PLzl10WocT\")\r\n{\r\n    let data = item.toObject();\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")\r\n{\r\n    let data = item.toObject();\r\n    data.system.specification.value = 1;\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\")\r\n{\r\n    let data = item.toObject();\r\n    data.system.specification.value = 1;\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.fjd1u9VAgiYzhBRp\")\r\n{\r\n    let data = item.toObject();\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.mDgEMOoJpi8DkRYb\")\r\n{\r\n    let data = item.toObject();\r\n    items.push(data)\r\n}\r\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\")\r\n{\r\n    let data = item.toObject();\r\n    data.system.specification.value = 2;\r\n    items.push(data)\r\n}\r\n\r\nthis.actor.createEmbeddedDocuments(\"Item\", items, {fromEffect : this.effect.id})\r\n",
  "xRTmMwNfdirjsi8X": "//*** Płomienna zasłona\r\nthis.actor.addCondition(\"ablaze\");\r\n\r\nthis.actor.applyBasicDamage(this.effect.sourceTest.result.damage)",
  "xS2su09zcza9du09": "//*** Corruption - Diebold Bedrohung\r\nif ([game.i18n.localize(\"CORRUPTION.Minor\"), game.i18n.localize(\"CORRUPTION.Moderate\"), game.i18n.localize(\"CORRUPTION.Major\")].includes(this.item.system.specification.value))\r\n{\r\n\treturn\r\n}\r\n\r\nlet choice = await ItemDialog.create(ItemDialog.objectToArray({minor : game.i18n.localize(\"CORRUPTION.Minor\"), moderate : game.i18n.localize(\"CORRUPTION.Moderate\"), major : game.i18n.localize(\"CORRUPTION.Major\")}, this.item.img), 1, \"Wybierz poziom Zepsucia\");\r\n\r\nthis.item.updateSource({\"system.specification.value\" : choice[0]?.name || \"\"})",
  "XthZ3GCC3WhsEI2g": "//*** Świecąca skóra\r\nargs.update({light : {\r\n    \"dim\": 10,\r\n    \"bright\": 5,\r\n    \"alpha\": 0.5,\r\n    \"animation\": {\r\n        \"speed\": 4,\r\n        \"intensity\": 4,\r\n        \"type\": \"flame\",\r\n    },\r\n    \"color\": \"#ac9e6c\",\r\n}});",
  "Xu5cED1MhT4ba7da": "//*** Ognista korona\r\nargs.fields.modifier += 10\r\n",
  "XuFxKPYheYF4WMmQ": "//*** Korzeń mandragory\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Cool\");",
  "xUpKYT7BZCSmAfUy": "//*** Eliksir żywotności\r\nif (this.item.system.quantity.value)\r\n{\r\n\tthis.item.system.reduceQuantity();\r\n\tlet actor = Array.from(game.user.targets)[0]?.actor || this.actor;\r\n\tactor.applyEffect({effectData : [this.item.effects.contents[0].convertToApplied()]})\r\n}\r\nelse\r\n{\r\n\tthis.script.notification(\"Nic nie zostało!\", \"error\")\r\n}",
  "xvGxwv7X0Vq3vNqb": "//*** Zwisający jęzor\r\nargs.fields.modifier -= 10;",
  "xvH4PKJasHcehOZz": "//*** Znawca (Wiedza)\r\nreturn args.skill?.name == `${game.i18n.localize(\"NAME.Lore\")} (${this.item.parenthesesText})`",
  "XYaYeiVkc5GKYTjC": "//*** Ognista korona\r\nreturn args.spell?.system.lore.value != \"fire\"",
  "xYTkj8jhSVOSoLbC": "//*** Złamanie ramienia (poważne)\r\nthis.actor.flags.useless[this.item.system.location.key[0] + \"Arm\"] = true;",
  "Y6ppJBerpM3TtSic": "//*** Spryt Ranalda\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.g4Q6AtzZuo5iIvD4\");\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {fromEffect : this.effect.id});",
  "Y8J66v8VTKUASGuK": "//*** Ukojenie Rhyi\r\nif (!this.actor.effects.find(e => e.isCondition))\r\n{\r\n\treturn this.script.notification(\"Aktor nie posiada Stanów\");\r\n}\r\n\r\nlet choice = await ItemDialog.create(this.actor.effects.filter(i => i.isCondition), 1, \"Wybierz Stan\")\r\n\r\nif (choice[0])\r\n{\r\n\tawait this.actor.removeCondition(choice[0].conditionId);\r\n}\r\n\r\nif (this.actor.effects.find(e => e.isCondition))\r\n{\r\n    return false; // Delete the effect if there are still conditions, otherwise, effect remains and provides the bonus\r\n}",
  "YaKnYEbmmZZtByJc": "//*** Ballock Knife\r\nif (args.opposedTest.attackerTest.options.ballockKnife)\r\n{\r\n    args.weaponProperties.impale = true;\r\n    args.extraMessages.push(`<strong>${this.item.name}</strong>: Dodano Zaletę Nadziewająca`);\r\n}",
  "yAL0YwZWVm8o1nxa": "if (this.actor.hasCondition(\"dead\") && !this.actor.gardenOfCorpses)\r\n{\r\n    this.script.scriptMessage(\"[[3d10]] @UUID[Compendium.wfrp4e-core.actors.T79RqnDOAQLn3I1s]{Zombie} powstają z martwych.\", {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    this.actor.gardenOfCorpses = true;\r\n    // local storage is sufficient to prevent multiple messages\r\n}",
  "yatUu0cd7iKs50rq": "//*** Tropiciel\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Track\");",
  "yCgH3N9AurIiAv0i": "//*** Wyczulony Zmysł\r\nif (!this.item.name.includes(\"(\") || this.item.system.tests.value.includes(\"(Zmysł)\") || this.item.system.tests.value.toLowerCase().includes(\"dowolny\"))\r\n{\r\n    let tests = this.item.system.tests.value\r\n    let name = this.item.name\r\n\r\n    // If name already specifies, make sure tests value reflects that\r\n    if (name.includes(\"(\") && !name.toLowerCase().includes(\"dowolny\"))\r\n    {\r\n        let sense = name.split(\"(\")[1].split(\")\")[0]\r\n        tests = `${tests.split(\"(\")[0].trim()} (${sense})`;\r\n    }\r\n    else // If no sense specified, provide dialog choice\r\n    {\r\n        let choice = await ItemDialog.create(ItemDialog.objectToArray({\r\n            taste : \"Smak\",\r\n            sight : \"Wzrok\",\r\n            smell : \"Węch\",\r\n            hearing : \"Słuch\",\r\n            touch : \"Dotyk\"\r\n        }, this.item.img), 1, \"Wybierz Zmysł\");\r\n        if (choice[0])\r\n        {\r\n            name = `${name.split(\"(\")[0].trim()} (${choice[0].name})`\r\n            tests = `${tests.split(\"(\")[0].trim()} (${choice[0].name})`\r\n        }\r\n    }\r\n\r\n    this.item.updateSource({name, \"system.tests.value\" : tests})\r\n}",
  "YDqpKJVy8ijEKdLX": "return !(this.actor.attacker && (args.skill?.name.includes(\"Broń Biała (Podstawowa)\") || (args.type == \"weapon\" && args.item?.system.weaponGroup.value == \"basic\")))",
  "YEBw2CzHYxsTpTy5": "//*** Żyłka Handlowa\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Haggle\");",
  "yFMvxecXAZ6T2O0S": "if (args.totalWoundLoss >= 1)\r\n{\r\n    let roll = await new Roll(\"1d10\").roll();\r\n    await roll.toMessage(this.script.getChatData());\r\n    if (roll.total == 9)\r\n    {\r\n        this.script.scriptMessage(`Dwa @UUID[Compendium.wfrp4e-eis.actors.cLOGeMqUty61nYB9]{Niebieskie Horrory Tzeentcha} wydostają się z ciała ${this.actor.name}, jednocześnie doprowadzając do śmierci.`, {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n    }\r\n}",
  "YFSgWRXel0bWE3EE": "//*** Amputowana noga\r\nreturn [\"ag\", \"ws\", \"bs\"].includes(args.characteristic) || args.skill?.name == game.i18n.localize(\"NAME.Climb\");",
  "YhhiWEQbox3WZA3Q": "//*** Pierwsza Pomoc\r\nreturn args.skill?.name == game.i18n.localize(\"NAME.Heal\") && game.combat?.active",
  "yIGItnshXI4W46cp": "//*** Porywająca Gorliwość\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.Charm\");",
  "ynoHNXXCGRS6fTqF": "//*** Clutch of Eyes\r\nlet msg = \"\"\r\n\r\nlet i_gain = (await new Roll(\"1d10\").roll()).total\r\n\r\nif (args.actor.characteristics.i.value <= 0)\r\n{\r\n   i_gain += (await new Roll(\"2d10\").roll()).total\r\n}\r\n\r\nmsg = `<b>${this.actor.prototypeToken.name}</b>: otrzymano punkty Inicjatywy w liczbie ${i_gain}`\r\n\r\nlet newValue = i_gain + args.actor.characteristics.i.modifier\r\n\r\nthis.actor.update({\"system.characteristics.i.modifier\" : newValue})\r\n\r\n\r\nlet hitloc = await game.wfrp4e.tables.rollTable(\"hitloc\")\r\n\r\nlet value = hitloc.result\r\nlet desc = hitloc.description\r\n\r\nthis.effect.updateSource({\"flags.wfrp4e.location\" : value})\r\n\r\nmsg += ` gdy nowe oczy pojawiają się w lokacji: ${desc}`\r\n\r\nthis.script.message(msg)",
  "yPxYRObUiqAIhlNB": "//*** Mocne Plecy\r\nthis.actor.system.status.encumbrance.max += 1",
  "YQ2LnLxp0xgy3meI": "if (args.test.preData.options?.corruption && args.test.failed) {\r\n  args.test?.result?.other.push(\"Otrzymano dodatkowy Punkt Zepsucia pochodzący z \" + this.effect.name)\r\n}",
  "yRRzSKlcN3L7rEEe": "//*** Wyszkolony - Półgryf Wierzchowiec\r\nreturn args.skill?.name.includes(game.i18n.localize(\"NAME.Entertain\")) || args.skill?.name.includes(game.i18n.localize(\"NAME.Perform\")) || args.skill?.name.includes(game.i18n.localize(\"NAME.Play\"));",
  "YRUTliBzAQvncGNX": "//*** Reactionary Restorative\r\nthis.actor.addCondition(\"fatigued\");\r\nthis.script.notification(\"Otrzymano Stan Zmęczenia\")",
  "YsS2RZsl2ZsqjhWV": "//*** Berserkerska Szarża\r\nreturn !args.fields.charging",
  "yTmRoUstxHMso91c": "if (args.item.name == \"Odporność na Magię\" && args.item.type == \"trait\")\r\n{\r\n    args.item.system.specification.value = Number(args.item.system.specification.value) + 1\r\n}",
  "YwLEw4BiKq4EMy57": "//*** Massive Intellect\r\nlet i_gain = (await new Roll(\"2d10\").roll()).total\r\nlet fel_gain = 0\r\nif (args.actor.characteristics.fel.value <= 0)\r\n{\r\n   fel_gain += (await new Roll(\"2d10\").roll()).total\r\n}\r\n\r\nlet msg = `<b>${this.actor.prototypeToken.name}</b>: otrzymano punkty Inteligencji w liczbie: ${i_gain}`\r\n\r\nif (fel_gain)\r\n   msg += ` oraz Ogłady w liczbie: ${fel_gain}`\r\n\r\n\r\nlet newInt = i_gain + args.actor.characteristics.int.modifier\r\nlet newFel = fel_gain + args.actor.characteristics.fel.modifier\r\n\r\nargs.actor.update({\"system.characteristics.int.modifier\" : newInt, \"system.characteristics.fel.modifier\" : newFel})\r\n\r\nthis.script.message(msg)",
  "yXUPiWuQ5o0JBY4i": "return args.skill?.name == game.i18n.localize(\"NAME.Endurance\") || args.characteristic == \"int\"",
  "yzN7ZNlgCiSVJqsU": "//*** Rozkosz Ranalda\r\nlet sourceItem = this.effect.sourceItem;\r\n\r\nif (sourceItem)\r\n{\r\n\tthis.actor.applyEffect({effectUuids : [sourceItem.effects.contents[1].uuid]})\r\n\tthis.script.notification(\"Wywołano skutki uboczne Rozkoszy Ranalda\");\r\n}",
  "Z1zriXibT0mAmdhb": "//*** Nierówne rogi\r\nlet item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\")\r\nitem = item.toObject()\r\nitem.name = this.effect.name\r\nitem.system.specification.value = this.actor.characteristics.s.bonus\r\nitem.system.description.value = \"\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {fromEffect : this.effect.id})",
  "Z30zYayPryXOjT5N": "//*** Gorejący miecz Rhuin\r\nargs.item.system.damage.value = \"SB + 6\";",
  "Z52yZDm6lP6fOP3O": "let ablaze = this.actor.hasCondition(\"ablaze\")\r\nif (ablaze)\r\n{\r\n    this.script.scriptNotification(\"Niewrażliwość na Podpalenie\");\r\n    ablaze.delete()\r\n}",
  "z5HfNUrHy5MS3K7a": "let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`, context : {failure: \"Dodatkowy Punkt Zepsucia\"}})\r\nawait test.roll();\r\nif (test.failed && this.actor.type == \"character\")\r\n{\r\n    this.actor.update({\"system.status.corruption.value\" : parseInt(this.actor.status.corruption.value) + 1})\r\n    this.script.scriptMessage(\"Otrzymano Punkt Zepsucia\", {whisper : ChatMessage.getWhisperRecipients(\"GM\")})\r\n}",
  "Z6jNlyZMECkW4Hon": "let spells = await game.wfrp4e.utility.findAll(\"spell\", \"Wczytuję Zaklęcia...\", true);\r\n\r\nlet choice = await ItemDialog.create(spells, 1);\r\n\r\nif (choice[0])\r\n{\r\n    this.script.scriptMessage(`Wybrano @UUID[${choice[0].uuid}]{${choice[0].name}}`)\r\n    let spell = (await fromUuid(choice[0].uuid)).toObject(); // Might be an index so retrieve item object for sure\r\n    setProperty(spell, \"flags.wfrp4e.boonOfTzeentch\", true);\r\n    spell.system.wind.value = \"Splatanie Magii (Dhar)\";\r\n    spell.system.memorized.value = true;\r\n    this.actor.createEmbeddedDocuments(\"Item\", [spell], {fromEffect: this.effect.id})\r\n}",
  "Z6OmmC0irJzxSnMH": "let chatData = { whisper: ChatMessage.getWhisperRecipients(\"GM\") }\r\nlet message = \"\"\r\n\r\nlet wounds = duplicate(this.actor.status.wounds)\r\nlet regenRoll = await new Roll(\"1d10\").roll();\r\nlet regen = regenRoll.total;\r\n\r\nif (wounds.value >= wounds.max)\r\n    return\r\n\r\nif (wounds.value > 0) \r\n{\r\n    wounds.value += regen\r\n    if (wounds.value > wounds.max)\r\n    {\r\n        wounds.value = wounds.max\r\n    }\r\n    message += `<b>${this.actor.name}</b>: Odzyskane punkty Żywotności: ${regen}.`\r\n\r\n    if (regen == 10)\r\n    {\r\n        message += `<br>Dodatkowo zregenerowano krytyczną ranę.`\r\n    }\r\n}\r\nelse if (regen >= 8) \r\n{\r\n    message += `<b>${this.actor.name}</b>: wylosowano ${regen} i odzyskano 1 punkt Żywotności.`\r\n    wounds.value += 1\r\n    if (regen == 10)\r\n    {\r\n        message += `<br>Dodatkowo zregenerowano krytyczną ranę.`\r\n    }\r\n}\r\nelse \r\n{\r\n    message += `<b>${this.actor.name}</b>: wylosowano ${regen} - brak efektu.`\r\n}\r\n\r\nawait this.actor.update({ \"system.status.wounds\": wounds })\r\nthis.script.scriptMessage(message, { whisper: ChatMessage.getWhisperRecipients(\"GM\") })\r\n\r\nif (this.actor.Species != \"Ogr\")\r\n{\r\n   this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {skipTargets: true, appendTitle :  \" - \" + this.effect.name, fields : {difficulty : \"average\"}}).then(test => {\r\n       test.roll()\r\n   })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "z926Cl2vxUfyLY0V": "//*** Klątwa porażającego bólu\r\nif (![\"rArm\", \"lArm\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\")))\r\n\treturn true\r\n\r\nreturn [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic)",
  "zA6TDttpwMSMl7D8": "// An imbiber must take a Consume Alcohol Test.\r\nthis.actor.setupSkill(game.i18n.localize(\"NAME.ConsumeAlcohol\"), {skipTargets: true, appendTitle :  ` - ${this.effect.name}`}).then(async test => {\r\n  await test.roll()\r\n  // If they succeed, \r\n  // as a result of whatever potential futures they glimpse, \r\n  // they can spend a Fortune Point within the next hour to reverse the dice of any failed Test.\r\n  if (test.succeeded) {\r\n    this.script.scriptMessage(`W wyniku wszelkich potencjalnych wydarzeń, <strong>${this.actor.prototypeToken.name}</strong> może wydać punkt Szczęścia w ciągu następnej godziny, aby odwrócić kości dowolnego nieudanego testu.`, \r\n    {\r\n      whisper: ChatMessage.getWhisperRecipients(\"GM\"), \r\n      blind: true \r\n    })    \r\n  }\r\n})",
  "zadppy7FEbXvgUON": "//*** Zreformowany łotr\r\n let characteristics = {\r\n                    \"ws\" : 5,\r\n                    \"bs\" : 0,\r\n                    \"s\" : 0,\r\n                    \"t\" : 0,\r\n                    \"i\" : 0,\r\n                    \"ag\" : 10,\r\n                    \"dex\" : 10,\r\n                    \"int\" : 0,\r\n                    \"wp\" : 0,\r\n                    \"fel\" : 5\r\n                }\r\nlet skills = [\"Percepcja\", \"Zwinne Palce\", \"Skradanie (Miasto)\"]\r\nlet skillAdvancements = [10, 10, 10]\r\nlet talents = [\"Przestępca\", \"Etykieta (Przestępcy)\"]\r\nlet trappings = [\"Lina, 10 metrów\", \"Wytrychy\", \"Maska\"]\r\nlet items = []\r\n\r\nlet updateObj = this.actor.toObject();\r\n\r\nfor (let ch in characteristics)\r\n{\r\n    updateObj.system.characteristics[ch].modifier += characteristics[ch];\r\n}\r\n\r\nfor (let index = 0; index < skills.length; index++)\r\n{\r\n    let skill = skills[index]\r\n    let skillItem;\r\n    skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\r\n    if (skillItem)\r\n        skillItem.system.advances.value += skillAdvancements[index]\r\n    else \r\n    {\r\n        skillItem = await game.wfrp4e.utility.findSkill(skill)\r\n        skillItem = skillItem.toObject();\r\n        skillItem.system.advances.value = skillAdvancements[index];\r\n        items.push(skillItem);\r\n    }\r\n}\r\n\r\nfor (let talent of talents)\r\n{\r\n    let talentItem = await game.wfrp4e.utility.findTalent(talent)\r\n    if (talentItem)\r\n    {\r\n        items.push(talentItem.toObject());\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\r\n    }\r\n}\r\n\r\nfor (let trapping of trappings) \r\n{\r\n    let trappingItem = await game.wfrp4e.utility.findItem(trapping)\r\n    if (trappingItem)\r\n    {\r\n        trappingItem = trappingItem.toObject()\r\n\r\n        equip(trappingItem)\r\n\r\n        items.push(trappingItem);\r\n    }\r\n    else \r\n    {\r\n        ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\r\n    }\r\n}\r\n\r\n\r\nawait this.actor.update(updateObj)\r\nthis.actor.createEmbeddedDocuments(\"Item\", items);\r\n\r\nfunction equip(item)\r\n{\r\n    if (item.type == \"armour\")\r\n        item.system.worn.value = true\r\n    else if (item.type == \"weapon\")\r\n        item.system.equipped = true\r\n    else if (item.type == \"trapping\" && item.system.trappingType.value == \"clothingAccessories\")\r\n        item.system.worn = true\r\n}",
  "ZCkYe5XMVY1RWMXG": "//*** Wspinacz\r\nargs.options.wallcrawler = true;",
  "ZCuOjLAeENKN1Q4L": "let halve;\r\nif (args.opposedTest.attackerTest.item?.type != \"spell\")\r\n{\r\n    halve = await Dialog.confirm({title : this.effect.name, content : \"Zmniejszyć obrażenia o połowę? (Zmniejsza obrażenia zadane od ognia o połowę)\"})\r\n}\r\nelse\r\n{\r\n    halve = args.opposedTest.attackerTest.item?.system.lore?.value == \"fire\";\r\n}\r\n\r\nif (halve)\r\n{\r\n    args.totalWoundLoss /= 2;\r\n    args.modifiers.other.push({label : this.effect.name, details : \"Zmniejszono o połowę\", value : \"× 0.5\"})\r\n}",
  "ZdHvGvSJBsIuPphF": "//*** Dwie Bronie\r\nreturn !args.fields.dualWielding && !args.options.dualWieldOffhand",
  "Ze9E2zR1GFGWGMVH": "return [\"Otwieranie Zamków\", \"Zwinne Palce\", \"Splatanie Magii (Ulgu)\"].includes(args.skill?.name)",
  "ZEdDcBka21rnMuz5": "//*** Bitewny Refleks\r\nlet initiativeSetting = game.settings.get(\"wfrp4e\", \"initiativeRule\")\r\n\r\nswitch (initiativeSetting) {\r\n  case \"default\":\r\n    args.initiative += \"+10\"\r\n    break;\r\n\r\n  case \"sl\":\r\n    args.initiative += \"+1\"\r\n    break;\r\n\r\n  case \"d10Init\":\r\n    args.initiative += \"+10\"\r\n    break;\r\n\r\n  case \"d10InitAgi\":\r\n    args.initiative += \"+1\"\r\n    break;\r\n}",
  "zFYCaGR0wbFWjl4T": "//*** Rybak\r\nreturn args.skill?.name != game.i18n.localize(\"NAME.OutdoorSurvival\");",
  "ZhuitY1KOU1Xe7cP": "//*** Ogłuszenie\r\nreturn !args.weapon?.system.properties.qualities.pummel",
  "ZI2YnAAGoLpmVDIL": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.aE3pyW20Orvdjzj0\")\r\nlet data = item.toObject();\r\ndata.system.specification.value = \"Religia\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "ziG9H5Kdb7xC3dFE": "//*** Talent Artystyczny\r\nreturn !args.skill?.name.includes(game.i18n.localize(\"NAME.Art\"));",
  "ZJy2rvpKmUHXGrAi": "//*** Długi Krok\r\nargs.actor.details.move.run *= 1.5",
  "zK38Rl5t9zbFi4Se": "//*** Poszarpane udo\r\nif (args.opposedTest.result.hitloc.value == this.item.system.location.key && args.totalWoundLoss > 0)\r\n{\r\n    args.actor.addCondition(\"bleeding\", 1);\r\n    this.script.notification(\"Otrzymano Stan Krwawienia\")\r\n}",
  "zk44dFEGkylB7kW6": "//*** Strzał w Dziesiątkę\r\nlet modifier; let target = args.data.targets[0]\r\nif (target.actor.details.size.value == \"tiny\")\r\n    modifier = 30\r\nif (target.actor.details.size.value == \"ltl\")\r\n    modifier = 20\r\nif (target.actor.details.size.value == \"sml\")\r\n    modifier = 10\r\n\r\nargs.fields.modifier += (modifier || 0); // Offset size modifier ",
  "ZNu4B0OdjkM9lmtu": "let item = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\")\r\nlet data = item.toObject();\r\ndata.name = data.name += \" (Wzrok)\"\r\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {fromEffect : this.effect.id})",
  "ZNW3ubbKIYXAyE48": "let wounds = this.actor.itemTypes.disease.filter(i => i.name == \"Ropiejąca Rana\" && i.system.duration.active);\r\nlet selected;\r\nif (wounds.length == 0)\r\n{\r\n    return this.script.scriptNotification(\"Brak Ropiejących Ran!\");\r\n}\r\nelse if (wounds.length == 1)\r\n{\r\n    selected = wounds[0];\r\n}\r\nelse if (wounds.length >= 2)\r\n{\r\n    selected = (await ItemDialog.create(wounds, 1))[0];\r\n}\r\n\r\nif (selected)\r\n{\r\n    let test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {fields: {difficulty : \"average\"}})\r\n    await test.roll();\r\n    if (test.succeeded)\r\n    {\r\n        let SL = parseInt(test.result.SL);\r\n        if (SL >= 0)\r\n        {\r\n            selected.update({\"system.duration.value\" : selected.system.duration.value - SL})\r\n            this.script.scriptMessage(`<strong>${selected.name}</strong> czas trwania choroby zmniejszony o ${SL}!`)\r\n        }\r\n    }\r\n}",
  "zqShIJnrRReGgP94": "//*** Kuźnia Chamonu\r\nlet {added, removed} = this.effect.getFlag(\"wfrp4e\", \"propertiesChanged\");\r\n\r\nfor(let property of (added || []))\r\n{\r\n    let hasValue = game.wfrp4e.config.propertyHasValue[property];\r\n    if (!args.item.system.qualities.value.find(i => i.name == property))\r\n    {\r\n        args.item.system.qualities.value.push({name : property, value : (hasValue ? 2 : null)})\r\n    }\r\n}\r\n\r\nfor(let property of (removed || []))\r\n{\r\n    args.item.system.flaws.value = args.item.system.flaws.value.filter(i => i.name != property)\r\n}",
  "zR4WAjzXHTZuiu5G": "//*** Zgruchotana dłoń\r\nlet actor = this.actor;\r\nlet effect = this.effect;\r\nlet bleedingAmt;\r\nlet bleedingRoll;\r\nlet msg = \"\"\r\n\r\nlet damage = effect.conditionValue;\r\nlet scriptArgs = {msg, damage};\r\nawait Promise.all(actor.runScripts(\"preApplyCondition\", {effect, data : scriptArgs}))\r\nmsg = scriptArgs.msg;\r\ndamage = scriptArgs.damage;\r\nmsg += await actor.applyBasicDamage(damage, {damageType : game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL, minimumOne : false, suppressMsg : true})\r\n\r\nif (actor.status.wounds.value == 0 && !actor.hasCondition(\"unconscious\"))\r\n{\r\n    await actor.addCondition(\"unconscious\")\r\n    msg += \"<br>\" + game.i18n.format(\"BleedUnc\", {name: actor.prototypeToken.name })\r\n}\r\n\r\nif (actor.hasCondition(\"unconscious\"))\r\n{\r\n    bleedingAmt = effect.conditionValue;\r\n    bleedingRoll = (await new Roll(\"1d100\").roll()).total;\r\n    if (bleedingRoll <= bleedingAmt * 10)\r\n    {\r\n        msg += \"<br>\" + game.i18n.format(\"BleedFail\", {name: actor.prototypeToken.name}) + \" (\" + game.i18n.localize(\"Rolled\") + \" \" + bleedingRoll + \")\";\r\n        await actor.addCondition(\"dead\")\r\n    }\r\n    else if (bleedingRoll % 11 == 0)\r\n    {\r\n        msg += \"<br>\" + game.i18n.format(\"BleedCrit\", { name: actor.prototypeToken.name } ) + \" (\" + game.i18n.localize(\"Rolled\") + bleedingRoll + \")\"\r\n        await actor.removeCondition(\"bleeding\")\r\n    }\r\n    else\r\n    {\r\n        msg += \"<br>\" + game.i18n.localize(\"BleedRoll\") + \": \" + bleedingRoll;\r\n    }\r\n}\r\n\r\nawait Promise.all(actor.runScripts(\"applyCondition\", {effect, data : {bleedingRoll}}))\r\nif (args.suppressMessage)\r\n{\r\n    let messageData = game.wfrp4e.utility.chatDataSetup(msg);\r\n    messageData.speaker = {alias: this.effect.name}\r\n    messageData.flavor = this.effect.name;\r\n    return messageData\r\n}\r\nelse\r\n{\r\n    return this.script.message(msg)\r\n}",
  "ZrePyV2spv3v65Tg": "//*** Skrócenie Dystansu\r\nreturn args.type != \"weapon\" && !this.actor.statuses.has(\"infighting\")",
  "zsiV6XEHlCNGLLPl": "//*** Traper\r\nreturn args.skill?.name ==  game.i18n.localize(\"NAME.SetTrap\");",
  "ztIkD5Zt6ko9D4Ca": "//*** Zatrucie Krwi\r\nargs.fields.modifier -= 10",
  "Zxh4RAENoaAQAaNg": "//*** Amputowane oko\r\nreturn !this.actor.flags.useless.rEye || !this.actor.flags.useless.lEye || [\"wp\", \"t\", \"s\"].includes(args.characteristic)",
  "zzk2uRSFjFHB5kjw": "\r\n   let roll = Math.ceil(CONFIG.Dice.randomUniform() * 10)\r\n   if (args.test.isFumble && roll == 1 && !args.test.result.misfire)\r\n  {\r\n          args.test.result.misfire = game.i18n.localize(\"Misfire\") + \" (Wyrzucono 1)\"\r\n          args.test.result.misfireDamage = eval(parseInt(args.test.result.roll.toString().split('').pop()) + args.test.item.Damage)\r\n  }\r\n  else if (args.test.isFumble && roll != 1)\r\n      args.test.result.other.push(\"Rzut na Niewybuch: \" + roll)"
});
});